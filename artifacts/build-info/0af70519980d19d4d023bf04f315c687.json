{"id":"0af70519980d19d4d023bf04f315c687","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Proxy.sol\";\nimport \"./ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        _upgradeToAndCall(_logic, _data, false);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.3) (proxy/transparent/ProxyAdmin.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./TransparentUpgradeableProxy.sol\";\nimport \"../../access/Ownable.sol\";\n\n/**\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\n */\ncontract ProxyAdmin is Ownable {\n    /**\n     * @dev Returns the current implementation of `proxy`.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function getProxyImplementation(ITransparentUpgradeableProxy proxy) public view virtual returns (address) {\n        // We need to manually run the static call since the getter cannot be flagged as view\n        // bytes4(keccak256(\"implementation()\")) == 0x5c60da1b\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\"5c60da1b\");\n        require(success);\n        return abi.decode(returndata, (address));\n    }\n\n    /**\n     * @dev Returns the current admin of `proxy`.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function getProxyAdmin(ITransparentUpgradeableProxy proxy) public view virtual returns (address) {\n        // We need to manually run the static call since the getter cannot be flagged as view\n        // bytes4(keccak256(\"admin()\")) == 0xf851a440\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\"f851a440\");\n        require(success);\n        return abi.decode(returndata, (address));\n    }\n\n    /**\n     * @dev Changes the admin of `proxy` to `newAdmin`.\n     *\n     * Requirements:\n     *\n     * - This contract must be the current admin of `proxy`.\n     */\n    function changeProxyAdmin(ITransparentUpgradeableProxy proxy, address newAdmin) public virtual onlyOwner {\n        proxy.changeAdmin(newAdmin);\n    }\n\n    /**\n     * @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function upgrade(ITransparentUpgradeableProxy proxy, address implementation) public virtual onlyOwner {\n        proxy.upgradeTo(implementation);\n    }\n\n    /**\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\n     * {TransparentUpgradeableProxy-upgradeToAndCall}.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function upgradeAndCall(\n        ITransparentUpgradeableProxy proxy,\n        address implementation,\n        bytes memory data\n    ) public payable virtual onlyOwner {\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\n    }\n}\n"},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1967/ERC1967Proxy.sol\";\n\n/**\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n * include them in the ABI so this interface must be used to interact with it.\n */\ninterface ITransparentUpgradeableProxy is IERC1967 {\n    function admin() external view returns (address);\n\n    function implementation() external view returns (address);\n\n    function changeAdmin(address) external;\n\n    function upgradeTo(address) external;\n\n    function upgradeToAndCall(address, bytes memory) external payable;\n}\n\n/**\n * @dev This contract implements a proxy that is upgradeable by an admin.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches one of the admin functions exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n * \"admin cannot fallback to proxy target\".\n *\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n * to sudden errors when trying to call a function from the proxy implementation.\n *\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\n *\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n * implementation.\n *\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    /**\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\n     */\n    constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\n        _changeAdmin(admin_);\n    }\n\n    /**\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n     *\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\n     * implementation provides a function with the same selector.\n     */\n    modifier ifAdmin() {\n        if (msg.sender == _getAdmin()) {\n            _;\n        } else {\n            _fallback();\n        }\n    }\n\n    /**\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\n     */\n    function _fallback() internal virtual override {\n        if (msg.sender == _getAdmin()) {\n            bytes memory ret;\n            bytes4 selector = msg.sig;\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\n                ret = _dispatchUpgradeTo();\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\n                ret = _dispatchUpgradeToAndCall();\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\n                ret = _dispatchChangeAdmin();\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\n                ret = _dispatchAdmin();\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\n                ret = _dispatchImplementation();\n            } else {\n                revert(\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\");\n            }\n            assembly {\n                return(add(ret, 0x20), mload(ret))\n            }\n        } else {\n            super._fallback();\n        }\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function _dispatchAdmin() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address admin = _getAdmin();\n        return abi.encode(admin);\n    }\n\n    /**\n     * @dev Returns the current implementation.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _dispatchImplementation() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address implementation = _implementation();\n        return abi.encode(implementation);\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _dispatchChangeAdmin() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address newAdmin = abi.decode(msg.data[4:], (address));\n        _changeAdmin(newAdmin);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy.\n     */\n    function _dispatchUpgradeTo() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address newImplementation = abi.decode(msg.data[4:], (address));\n        _upgradeToAndCall(newImplementation, bytes(\"\"), false);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n     * proxied contract.\n     */\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\n        _upgradeToAndCall(newImplementation, data, true);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\n     */\n    function _admin() internal view virtual returns (address) {\n        return _getAdmin();\n    }\n\n    /**\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\n     */\n    function _requireZeroValue() private {\n        require(msg.value == 0);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/Box.sol":{"content":"// This is our implementation contract\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ncontract Box {\n    uint256 internal num;\n\n    event ValueChanged(uint256 NewValue);\n\n    function setValue(uint256 newNum) public {\n        unchecked {\n            num = newNum;\n        }\n\n        emit ValueChanged(newNum);\n    }\n\n    function getNum() public view returns(uint256) {\n        return num;\n    }\n\n    function getVersion() public pure returns(uint256) {\n        return 1;\n    }\n}"},"contracts/BoxV2.sol":{"content":"// This is our implementation contract\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ncontract BoxV2 {\n    uint256 internal num;\n\n    event ValueChanged(uint256 NewValue);\n\n    function setValue(uint256 newNum) public {\n        unchecked {\n            num = newNum;\n        }\n\n        emit ValueChanged(newNum);\n    }\n\n    function getNum() public view returns(uint256) {\n        return num;\n    }\n\n    function getVersion() public pure returns(uint256) {\n        return 2;\n    }\n\n    function increment() public {\n        unchecked {\n            num = num + 11;\n        }\n\n        emit ValueChanged(num);\n    }\n}"},"contracts/Proxy/BoxProxyAdmin.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\";\ncontract BoxProxyAdmin is ProxyAdmin {\n    constructor(address /* owner */) ProxyAdmin() {\n        \n    }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1357],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1358,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1357,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1357],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[133]},"id":134,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"132:133:1","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":133,"linearizedBaseContracts":[133],"name":"IERC1967","nameLocation":"276:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"291:68:1","text":" @dev Emitted when the implementation is upgraded."},"id":120,"name":"Upgraded","nameLocation":"370:8:1","nodeType":"EventDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"395:14:1","nodeType":"VariableDeclaration","scope":120,"src":"379:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"379:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"378:32:1"},"src":"364:47:1"},{"anonymous":false,"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"417:67:1","text":" @dev Emitted when the admin account has changed."},"id":127,"name":"AdminChanged","nameLocation":"495:12:1","nodeType":"EventDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"516:13:1","nodeType":"VariableDeclaration","scope":127,"src":"508:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":125,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"539:8:1","nodeType":"VariableDeclaration","scope":127,"src":"531:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"531:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"507:41:1"},"src":"489:60:1"},{"anonymous":false,"documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"555:59:1","text":" @dev Emitted when the beacon is changed."},"id":132,"name":"BeaconUpgraded","nameLocation":"625:14:1","nodeType":"EventDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"656:6:1","nodeType":"VariableDeclaration","scope":132,"src":"640:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"639:24:1"},"src":"619:45:1"}],"scope":134,"src":"266:400:1","usedErrors":[]}],"src":"107:560:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[143]},"id":144,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":135,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"138:203:2","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":143,"linearizedBaseContracts":[143],"name":"IERC1822Proxiable","nameLocation":"352:17:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"376:438:2","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":142,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"828:13:2","nodeType":"FunctionDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"841:2:2"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":142,"src":"867:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"867:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"866:9:2"},"scope":143,"src":"819:57:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":144,"src":"342:536:2","usedErrors":[]}],"src":"113:766:2"},"id":2},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","exportedSymbols":{"Address":[1335],"ERC1967Proxy":[180],"ERC1967Upgrade":[484],"IBeacon":[546],"IERC1822Proxiable":[143],"IERC1967":[133],"Proxy":[536],"StorageSlot":[1467]},"id":181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":145,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:3"},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"../Proxy.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":181,"sourceUnit":537,"src":"139:22:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","file":"./ERC1967Upgrade.sol","id":147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":181,"sourceUnit":485,"src":"162:30:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":149,"name":"Proxy","nodeType":"IdentifierPath","referencedDeclaration":536,"src":"592:5:3"},"id":150,"nodeType":"InheritanceSpecifier","src":"592:5:3"},{"baseName":{"id":151,"name":"ERC1967Upgrade","nodeType":"IdentifierPath","referencedDeclaration":484,"src":"599:14:3"},"id":152,"nodeType":"InheritanceSpecifier","src":"599:14:3"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"194:372:3","text":" @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."},"fullyImplemented":true,"id":180,"linearizedBaseContracts":[180,484,133,536],"name":"ERC1967Proxy","nameLocation":"576:12:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":166,"nodeType":"Block","src":"1014:56:3","statements":[{"expression":{"arguments":[{"id":161,"name":"_logic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"1042:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":162,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"1050:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1057:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":160,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"1024:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1024:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":165,"nodeType":"ExpressionStatement","src":"1024:39:3"}]},"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"620:333:3","text":" @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializing the storage of the proxy like a Solidity constructor."},"id":167,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"_logic","nameLocation":"978:6:3","nodeType":"VariableDeclaration","scope":167,"src":"970:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"_data","nameLocation":"999:5:3","nodeType":"VariableDeclaration","scope":167,"src":"986:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":156,"name":"bytes","nodeType":"ElementaryTypeName","src":"986:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"969:36:3"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"1014:0:3"},"scope":180,"src":"958:112:3","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[501],"body":{"id":178,"nodeType":"Block","src":"1229:59:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":174,"name":"ERC1967Upgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"1246:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Upgrade_$484_$","typeString":"type(contract ERC1967Upgrade)"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_getImplementation","nodeType":"MemberAccess","referencedDeclaration":210,"src":"1246:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1246:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":173,"id":177,"nodeType":"Return","src":"1239:42:3"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1076:67:3","text":" @dev Returns the current implementation address."},"id":179,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"1157:15:3","nodeType":"FunctionDefinition","overrides":{"id":170,"nodeType":"OverrideSpecifier","overrides":[],"src":"1197:8:3"},"parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"1172:2:3"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"impl","nameLocation":"1223:4:3","nodeType":"VariableDeclaration","scope":179,"src":"1215:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1215:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1214:14:3"},"scope":180,"src":"1148:140:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":181,"src":"567:723:3","usedErrors":[]}],"src":"114:1177:3"},"id":3},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","exportedSymbols":{"Address":[1335],"ERC1967Upgrade":[484],"IBeacon":[546],"IERC1822Proxiable":[143],"IERC1967":[133],"StorageSlot":[1467]},"id":485,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":182,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:4"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":485,"sourceUnit":547,"src":"141:31:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":485,"sourceUnit":134,"src":"173:39:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":485,"sourceUnit":144,"src":"213:45:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":186,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":485,"sourceUnit":1336,"src":"259:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":485,"sourceUnit":1468,"src":"293:37:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":189,"name":"IERC1967","nodeType":"IdentifierPath","referencedDeclaration":133,"src":"553:8:4"},"id":190,"nodeType":"InheritanceSpecifier","src":"553:8:4"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"332:184:4","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":484,"linearizedBaseContracts":[484,133],"name":"ERC1967Upgrade","nameLocation":"535:14:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":193,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"672:14:4","nodeType":"VariableDeclaration","scope":484,"src":"647:108:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"647:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"689:66:4","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"762:214:4","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":197,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1007:20:4","nodeType":"VariableDeclaration","scope":484,"src":"981:115:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"981:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1030:66:4","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":209,"nodeType":"Block","src":"1237:78:4","statements":[{"expression":{"expression":{"arguments":[{"id":205,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"1281:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":203,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"1254:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1467_$","typeString":"type(library StorageSlot)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"1254:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1363_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1254:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1363_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"1254:54:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":202,"id":208,"nodeType":"Return","src":"1247:61:4"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"1103:67:4","text":" @dev Returns the current implementation address."},"id":210,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1184:18:4","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"1202:2:4"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":210,"src":"1228:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:9:4"},"scope":484,"src":"1175:140:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":233,"nodeType":"Block","src":"1469:196:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":219,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1506:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":217,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"1487:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1335_$","typeString":"type(library Address)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1023,"src":"1487:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1487:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1526:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":216,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1479:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1479:95:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":223,"nodeType":"ExpressionStatement","src":"1479:95:4"},{"expression":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":227,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"1611:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":224,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"1584:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1467_$","typeString":"type(library StorageSlot)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"1584:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1363_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1584:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1363_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"1584:54:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":230,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1641:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1584:74:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":232,"nodeType":"ExpressionStatement","src":"1584:74:4"}]},"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"1321:80:4","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":234,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1415:18:4","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"newImplementation","nameLocation":"1442:17:4","nodeType":"VariableDeclaration","scope":234,"src":"1434:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"1434:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1433:27:4"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"1469:0:4"},"scope":484,"src":"1406:259:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":248,"nodeType":"Block","src":"1827:96:4","statements":[{"expression":{"arguments":[{"id":241,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1856:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":240,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"1837:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1837:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":243,"nodeType":"ExpressionStatement","src":"1837:37:4"},{"eventCall":{"arguments":[{"id":245,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1898:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":244,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"1889:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1889:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"1884:32:4"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"1671:95:4","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":249,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"1780:10:4","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"newImplementation","nameLocation":"1799:17:4","nodeType":"VariableDeclaration","scope":249,"src":"1791:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"1791:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1790:27:4"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"1827:0:4"},"scope":484,"src":"1771:152:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":278,"nodeType":"Block","src":"2155:167:4","statements":[{"expression":{"arguments":[{"id":260,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2176:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"2165:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2165:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":262,"nodeType":"ExpressionStatement","src":"2165:29:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":263,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"2208:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2208:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2222:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2208:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":267,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2227:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":277,"nodeType":"IfStatement","src":"2204:112:4","trueBody":{"id":276,"nodeType":"Block","src":"2238:78:4","statements":[{"expression":{"arguments":[{"id":272,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2281:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":273,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"2300:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":269,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"2252:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1335_$","typeString":"type(library Address)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1222,"src":"2252:28:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2252:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":275,"nodeType":"ExpressionStatement","src":"2252:53:4"}]}}]},"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"1929:123:4","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":279,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2066:17:4","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"newImplementation","nameLocation":"2092:17:4","nodeType":"VariableDeclaration","scope":279,"src":"2084:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"2084:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"data","nameLocation":"2124:4:4","nodeType":"VariableDeclaration","scope":279,"src":"2111:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":253,"name":"bytes","nodeType":"ElementaryTypeName","src":"2111:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"forceCall","nameLocation":"2135:9:4","nodeType":"VariableDeclaration","scope":279,"src":"2130:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":255,"name":"bool","nodeType":"ElementaryTypeName","src":"2130:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2083:62:4"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"2155:0:4"},"scope":484,"src":"2057:265:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":331,"nodeType":"Block","src":"2596:820:4","statements":[{"condition":{"expression":{"arguments":[{"id":291,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2937:14:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":289,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"2910:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1467_$","typeString":"type(library StorageSlot)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":1400,"src":"2910:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1366_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2910:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1366_storage_ptr","typeString":"struct StorageSlot.BooleanSlot storage pointer"}},"id":293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"2910:48:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":329,"nodeType":"Block","src":"3028:382:4","statements":[{"clauses":[{"block":{"id":314,"nodeType":"Block","src":"3122:115:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":308,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3148:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":309,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3156:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3148:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3178:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":307,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3140:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3140:82:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"ExpressionStatement","src":"3140:82:4"}]},"errorName":"","id":315,"nodeType":"TryCatchClause","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"slot","nameLocation":"3116:4:4","nodeType":"VariableDeclaration","scope":315,"src":"3108:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:14:4"},"src":"3099:138:4"},{"block":{"id":320,"nodeType":"Block","src":"3244:89:4","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3269:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":316,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3262:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3262:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":319,"nodeType":"ExpressionStatement","src":"3262:56:4"}]},"errorName":"","id":321,"nodeType":"TryCatchClause","src":"3238:95:4"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":300,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"3064:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":299,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"3046:17:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$143_$","typeString":"type(contract IERC1822Proxiable)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3046:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$143","typeString":"contract IERC1822Proxiable"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":142,"src":"3046:50:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3046:52:4","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":322,"nodeType":"TryStatement","src":"3042:291:4"},{"expression":{"arguments":[{"id":324,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"3364:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":325,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3383:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":326,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"3389:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":323,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3346:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3346:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"3346:53:4"}]},"id":330,"nodeType":"IfStatement","src":"2906:504:4","trueBody":{"id":298,"nodeType":"Block","src":"2960:62:4","statements":[{"expression":{"arguments":[{"id":295,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"2993:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":294,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2974:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2974:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":297,"nodeType":"ExpressionStatement","src":"2974:37:4"}]}}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"2328:161:4","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":332,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2503:21:4","nodeType":"FunctionDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"newImplementation","nameLocation":"2533:17:4","nodeType":"VariableDeclaration","scope":332,"src":"2525:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"data","nameLocation":"2565:4:4","nodeType":"VariableDeclaration","scope":332,"src":"2552:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":283,"name":"bytes","nodeType":"ElementaryTypeName","src":"2552:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"forceCall","nameLocation":"2576:9:4","nodeType":"VariableDeclaration","scope":332,"src":"2571:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"2571:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2524:62:4"},"returnParameters":{"id":288,"nodeType":"ParameterList","parameters":[],"src":"2596:0:4"},"scope":484,"src":"2494:922:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"3422:189:4","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":336,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3642:11:4","nodeType":"VariableDeclaration","scope":484,"src":"3616:106:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3616:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:66:4","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"3837:69:4","statements":[{"expression":{"expression":{"arguments":[{"id":344,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3881:11:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":342,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"3854:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1467_$","typeString":"type(library StorageSlot)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"3854:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1363_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3854:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1363_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"3854:45:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":341,"id":347,"nodeType":"Return","src":"3847:52:4"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"3729:50:4","text":" @dev Returns the current admin."},"id":349,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"3793:9:4","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"3802:2:4"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":349,"src":"3828:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"3828:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3827:9:4"},"scope":484,"src":"3784:122:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":374,"nodeType":"Block","src":"4033:156:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"4051:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4071:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4063:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"4063:7:4","typeDescriptions":{}}},"id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4063:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4051:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4075:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":355,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4043:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4043:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":364,"nodeType":"ExpressionStatement","src":"4043:73:4"},{"expression":{"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":368,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4153:11:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":365,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"4126:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1467_$","typeString":"type(library StorageSlot)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"4126:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1363_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4126:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1363_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"4126:45:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":371,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"4174:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4126:56:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":373,"nodeType":"ExpressionStatement","src":"4126:56:4"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"3912:71:4","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":375,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3997:9:4","nodeType":"FunctionDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"newAdmin","nameLocation":"4015:8:4","nodeType":"VariableDeclaration","scope":375,"src":"4007:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4006:18:4"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[],"src":"4033:0:4"},"scope":484,"src":"3988:201:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":391,"nodeType":"Block","src":"4349:86:4","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4377:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4377:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":384,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4390:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":381,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"4364:12:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4364:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"EmitStatement","src":"4359:40:4"},{"expression":{"arguments":[{"id":388,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4419:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":387,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"4409:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4409:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"ExpressionStatement","src":"4409:19:4"}]},"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"4195:100:4","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":392,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4309:12:4","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"newAdmin","nameLocation":"4330:8:4","nodeType":"VariableDeclaration","scope":392,"src":"4322:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":377,"name":"address","nodeType":"ElementaryTypeName","src":"4322:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4321:18:4"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"4349:0:4"},"scope":484,"src":"4300:135:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"4441:232:4","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":396,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"4704:12:4","nodeType":"VariableDeclaration","scope":484,"src":"4678:107:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4678:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4719:66:4","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":408,"nodeType":"Block","src":"4902:70:4","statements":[{"expression":{"expression":{"arguments":[{"id":404,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4946:12:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":402,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"4919:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1467_$","typeString":"type(library StorageSlot)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"4919:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1363_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4919:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1363_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"4919:46:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":401,"id":407,"nodeType":"Return","src":"4912:53:4"}]},"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"4792:51:4","text":" @dev Returns the current beacon."},"id":409,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"4857:10:4","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"4867:2:4"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"4893:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"4893:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4892:9:4"},"scope":484,"src":"4848:124:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":444,"nodeType":"Block","src":"5101:324:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":418,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5138:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":416,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"5119:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1335_$","typeString":"type(library Address)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1023,"src":"5119:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5119:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5150:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5111:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5111:79:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"5111:79:4"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":427,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5248:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":426,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5240:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$546_$","typeString":"type(contract IBeacon)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5240:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$546","typeString":"contract IBeacon"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":545,"src":"5240:33:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5240:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":424,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"5221:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1335_$","typeString":"type(library Address)"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1023,"src":"5221:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5221:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5290:50:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":423,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5200:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5200:150:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"5200:150:4"},{"expression":{"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":438,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"5387:12:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":435,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"5360:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1467_$","typeString":"type(library StorageSlot)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"5360:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1363_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5360:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1363_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"5360:46:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":441,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5409:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5360:58:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":443,"nodeType":"ExpressionStatement","src":"5360:58:4"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"4978:71:4","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":445,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5063:10:4","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"newBeacon","nameLocation":"5082:9:4","nodeType":"VariableDeclaration","scope":445,"src":"5074:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"5074:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5073:19:4"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"5101:0:4"},"scope":484,"src":"5054:371:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":482,"nodeType":"Block","src":"5824:217:4","statements":[{"expression":{"arguments":[{"id":456,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5845:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"5834:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5834:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":458,"nodeType":"ExpressionStatement","src":"5834:21:4"},{"eventCall":{"arguments":[{"id":460,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5885:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":459,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"5870:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5870:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"EmitStatement","src":"5865:30:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":463,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"5909:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5909:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5923:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5909:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":467,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"5928:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5909:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":481,"nodeType":"IfStatement","src":"5905:130:4","trueBody":{"id":480,"nodeType":"Block","src":"5939:96:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":473,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5990:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5982:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$546_$","typeString":"type(contract IBeacon)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5982:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$546","typeString":"contract IBeacon"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":545,"src":"5982:33:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5982:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":477,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6019:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":469,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"5953:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1335_$","typeString":"type(library Address)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1222,"src":"5953:28:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5953:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":479,"nodeType":"ExpressionStatement","src":"5953:71:4"}]}}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"5431:292:4","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":483,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"5737:23:4","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"newBeacon","nameLocation":"5769:9:4","nodeType":"VariableDeclaration","scope":483,"src":"5761:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"5761:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"data","nameLocation":"5793:4:4","nodeType":"VariableDeclaration","scope":483,"src":"5780:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":449,"name":"bytes","nodeType":"ElementaryTypeName","src":"5780:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"forceCall","nameLocation":"5804:9:4","nodeType":"VariableDeclaration","scope":483,"src":"5799:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":451,"name":"bool","nodeType":"ElementaryTypeName","src":"5799:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5760:54:4"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[],"src":"5824:0:4"},"scope":484,"src":"5728:313:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":485,"src":"517:5526:4","usedErrors":[]}],"src":"116:5928:4"},"id":4},"@openzeppelin/contracts/proxy/Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","exportedSymbols":{"Proxy":[536]},"id":537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":486,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:5"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"124:598:5","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":536,"linearizedBaseContracts":[536],"name":"Proxy","nameLocation":"741:5:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":494,"nodeType":"Block","src":"1008:835:5","statements":[{"AST":{"nodeType":"YulBlock","src":"1027:810:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1280:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1283:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1286:12:5"},"nodeType":"YulFunctionCall","src":"1286:14:5"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1267:12:5"},"nodeType":"YulFunctionCall","src":"1267:34:5"},"nodeType":"YulExpressionStatement","src":"1267:34:5"},{"nodeType":"YulVariableDeclaration","src":"1428:74:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1455:3:5"},"nodeType":"YulFunctionCall","src":"1455:5:5"},{"name":"implementation","nodeType":"YulIdentifier","src":"1462:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"1478:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1481:12:5"},"nodeType":"YulFunctionCall","src":"1481:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"1497:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1500:1:5","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"1442:12:5"},"nodeType":"YulFunctionCall","src":"1442:60:5"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"1432:6:5","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1570:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1573:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1576:14:5"},"nodeType":"YulFunctionCall","src":"1576:16:5"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1555:14:5"},"nodeType":"YulFunctionCall","src":"1555:38:5"},"nodeType":"YulExpressionStatement","src":"1555:38:5"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1688:59:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1713:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1716:14:5"},"nodeType":"YulFunctionCall","src":"1716:16:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1706:6:5"},"nodeType":"YulFunctionCall","src":"1706:27:5"},"nodeType":"YulExpressionStatement","src":"1706:27:5"}]},"nodeType":"YulCase","src":"1681:66:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1686:1:5","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"1768:59:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1793:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1796:14:5"},"nodeType":"YulFunctionCall","src":"1796:16:5"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1786:6:5"},"nodeType":"YulFunctionCall","src":"1786:27:5"},"nodeType":"YulExpressionStatement","src":"1786:27:5"}]},"nodeType":"YulCase","src":"1760:67:5","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"1614:6:5"},"nodeType":"YulSwitch","src":"1607:220:5"}]},"evmVersion":"london","externalReferences":[{"declaration":490,"isOffset":false,"isSlot":false,"src":"1462:14:5","valueSize":1}],"id":493,"nodeType":"InlineAssembly","src":"1018:819:5"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"753:190:5","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":495,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"957:9:5","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"implementation","nameLocation":"975:14:5","nodeType":"VariableDeclaration","scope":495,"src":"967:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"966:24:5"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[],"src":"1008:0:5"},"scope":536,"src":"948:895:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":496,"nodeType":"StructuredDocumentation","src":"1849:173:5","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."},"id":501,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2036:15:5","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2051:2:5"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":501,"src":"2085:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"2085:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2084:9:5"},"scope":536,"src":"2027:67:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":513,"nodeType":"Block","src":"2360:72:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":505,"name":"_beforeFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"2370:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2370:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":507,"nodeType":"ExpressionStatement","src":"2370:17:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":509,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"2407:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2407:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":508,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"2397:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2397:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":512,"nodeType":"ExpressionStatement","src":"2397:28:5"}]},"documentation":{"id":502,"nodeType":"StructuredDocumentation","src":"2100:217:5","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":514,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2331:9:5","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"2340:2:5"},"returnParameters":{"id":504,"nodeType":"ParameterList","parameters":[],"src":"2360:0:5"},"scope":536,"src":"2322:110:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":521,"nodeType":"Block","src":"2665:28:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":518,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2675:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2675:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"2675:11:5"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"2438:186:5","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":522,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"2637:2:5"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"2665:0:5"},"scope":536,"src":"2629:64:5","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":529,"nodeType":"Block","src":"2888:28:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":526,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2898:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2898:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":528,"nodeType":"ExpressionStatement","src":"2898:11:5"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"2699:149:5","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."},"id":530,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"2860:2:5"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[],"src":"2888:0:5"},"scope":536,"src":"2853:63:5","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":534,"nodeType":"Block","src":"3242:2:5","statements":[]},"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"2922:271:5","text":" @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."},"id":535,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeFallback","nameLocation":"3207:15:5","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[],"src":"3222:2:5"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"3242:0:5"},"scope":536,"src":"3198:46:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":537,"src":"723:2523:5","usedErrors":[]}],"src":"99:3148:5"},"id":5},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[546]},"id":547,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":538,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"118:79:6","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":546,"linearizedBaseContracts":[546],"name":"IBeacon","nameLocation":"208:7:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"222:162:6","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":545,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"398:14:6","nodeType":"FunctionDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"412:2:6"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"438:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"437:9:6"},"scope":546,"src":"389:58:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":547,"src":"198:251:6","usedErrors":[]}],"src":"93:357:6"},"id":6},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol","exportedSymbols":{"Address":[1335],"Context":[1357],"ERC1967Proxy":[180],"ERC1967Upgrade":[484],"IBeacon":[546],"IERC1822Proxiable":[143],"IERC1967":[133],"ITransparentUpgradeableProxy":[716],"Ownable":[112],"Proxy":[536],"ProxyAdmin":[682],"StorageSlot":[1467],"TransparentUpgradeableProxy":[1005]},"id":683,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":548,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:7"},{"absolutePath":"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol","file":"./TransparentUpgradeableProxy.sol","id":549,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":683,"sourceUnit":1006,"src":"141:43:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"../../access/Ownable.sol","id":550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":683,"sourceUnit":113,"src":"185:34:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":552,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"473:7:7"},"id":553,"nodeType":"InheritanceSpecifier","src":"473:7:7"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"221:228:7","text":" @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}."},"fullyImplemented":true,"id":682,"linearizedBaseContracts":[682,112,1357],"name":"ProxyAdmin","nameLocation":"459:10:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":586,"nodeType":"Block","src":"756:332:7","statements":[{"assignments":[563,565],"declarations":[{"constant":false,"id":563,"mutability":"mutable","name":"success","nameLocation":"929:7:7","nodeType":"VariableDeclaration","scope":586,"src":"924:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":562,"name":"bool","nodeType":"ElementaryTypeName","src":"924:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":565,"mutability":"mutable","name":"returndata","nameLocation":"951:10:7","nodeType":"VariableDeclaration","scope":586,"src":"938:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":564,"name":"bytes","nodeType":"ElementaryTypeName","src":"938:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":573,"initialValue":{"arguments":[{"hexValue":"5c60da1b","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"991:13:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","typeString":"literal_string hex\"5c60da1b\""}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","typeString":"literal_string hex\"5c60da1b\""}],"expression":{"arguments":[{"id":568,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"973:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"965:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"965:7:7","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"965:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"965:25:7","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"965:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"923:82:7"},{"expression":{"arguments":[{"id":575,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"1023:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1015:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1015:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"ExpressionStatement","src":"1015:16:7"},{"expression":{"arguments":[{"id":580,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"1059:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1072:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"1072:7:7","typeDescriptions":{}}}],"id":583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1071:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":578,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1048:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1048:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1048:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":561,"id":585,"nodeType":"Return","src":"1041:40:7"}]},"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"487:158:7","text":" @dev Returns the current implementation of `proxy`.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"204e1c7a","id":587,"implemented":true,"kind":"function","modifiers":[],"name":"getProxyImplementation","nameLocation":"659:22:7","nodeType":"FunctionDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"proxy","nameLocation":"711:5:7","nodeType":"VariableDeclaration","scope":587,"src":"682:34:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":556,"nodeType":"UserDefinedTypeName","pathNode":{"id":555,"name":"ITransparentUpgradeableProxy","nodeType":"IdentifierPath","referencedDeclaration":716,"src":"682:28:7"},"referencedDeclaration":716,"src":"682:28:7","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"}],"src":"681:36:7"},"returnParameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":587,"src":"747:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"746:9:7"},"scope":682,"src":"650:438:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":620,"nodeType":"Block","src":"1345:323:7","statements":[{"assignments":[597,599],"declarations":[{"constant":false,"id":597,"mutability":"mutable","name":"success","nameLocation":"1509:7:7","nodeType":"VariableDeclaration","scope":620,"src":"1504:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":596,"name":"bool","nodeType":"ElementaryTypeName","src":"1504:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"returndata","nameLocation":"1531:10:7","nodeType":"VariableDeclaration","scope":620,"src":"1518:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":598,"name":"bytes","nodeType":"ElementaryTypeName","src":"1518:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":607,"initialValue":{"arguments":[{"hexValue":"f851a440","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1571:13:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","typeString":"literal_string hex\"f851a440\""}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","typeString":"literal_string hex\"f851a440\""}],"expression":{"arguments":[{"id":602,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"1553:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"}],"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1545:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"1545:7:7","typeDescriptions":{}}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1545:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"1545:25:7","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1545:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1503:82:7"},{"expression":{"arguments":[{"id":609,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"1603:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1595:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1595:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":611,"nodeType":"ExpressionStatement","src":"1595:16:7"},{"expression":{"arguments":[{"id":614,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"1639:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1652:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"1652:7:7","typeDescriptions":{}}}],"id":617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1651:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":612,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1628:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1628:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1628:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":595,"id":619,"nodeType":"Return","src":"1621:40:7"}]},"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"1094:149:7","text":" @dev Returns the current admin of `proxy`.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"f3b7dead","id":621,"implemented":true,"kind":"function","modifiers":[],"name":"getProxyAdmin","nameLocation":"1257:13:7","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"proxy","nameLocation":"1300:5:7","nodeType":"VariableDeclaration","scope":621,"src":"1271:34:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":590,"nodeType":"UserDefinedTypeName","pathNode":{"id":589,"name":"ITransparentUpgradeableProxy","nodeType":"IdentifierPath","referencedDeclaration":716,"src":"1271:28:7"},"referencedDeclaration":716,"src":"1271:28:7","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"}],"src":"1270:36:7"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"1336:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1335:9:7"},"scope":682,"src":"1248:420:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":638,"nodeType":"Block","src":"1947:44:7","statements":[{"expression":{"arguments":[{"id":635,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"1975:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":632,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"1957:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"changeAdmin","nodeType":"MemberAccess","referencedDeclaration":703,"src":"1957:17:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1957:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"1957:27:7"}]},"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"1674:163:7","text":" @dev Changes the admin of `proxy` to `newAdmin`.\n Requirements:\n - This contract must be the current admin of `proxy`."},"functionSelector":"7eff275e","id":639,"implemented":true,"kind":"function","modifiers":[{"id":630,"kind":"modifierInvocation","modifierName":{"id":629,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1937:9:7"},"nodeType":"ModifierInvocation","src":"1937:9:7"}],"name":"changeProxyAdmin","nameLocation":"1851:16:7","nodeType":"FunctionDefinition","parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"proxy","nameLocation":"1897:5:7","nodeType":"VariableDeclaration","scope":639,"src":"1868:34:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":624,"nodeType":"UserDefinedTypeName","pathNode":{"id":623,"name":"ITransparentUpgradeableProxy","nodeType":"IdentifierPath","referencedDeclaration":716,"src":"1868:28:7"},"referencedDeclaration":716,"src":"1868:28:7","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"newAdmin","nameLocation":"1912:8:7","nodeType":"VariableDeclaration","scope":639,"src":"1904:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"1904:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1867:54:7"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[],"src":"1947:0:7"},"scope":682,"src":"1842:149:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":656,"nodeType":"Block","src":"2298:48:7","statements":[{"expression":{"arguments":[{"id":653,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"2324:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":650,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"2308:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeTo","nodeType":"MemberAccess","referencedDeclaration":708,"src":"2308:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2308:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":655,"nodeType":"ExpressionStatement","src":"2308:31:7"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"1997:194:7","text":" @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"99a88ec4","id":657,"implemented":true,"kind":"function","modifiers":[{"id":648,"kind":"modifierInvocation","modifierName":{"id":647,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2288:9:7"},"nodeType":"ModifierInvocation","src":"2288:9:7"}],"name":"upgrade","nameLocation":"2205:7:7","nodeType":"FunctionDefinition","parameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"proxy","nameLocation":"2242:5:7","nodeType":"VariableDeclaration","scope":657,"src":"2213:34:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":642,"nodeType":"UserDefinedTypeName","pathNode":{"id":641,"name":"ITransparentUpgradeableProxy","nodeType":"IdentifierPath","referencedDeclaration":716,"src":"2213:28:7"},"referencedDeclaration":716,"src":"2213:28:7","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"implementation","nameLocation":"2257:14:7","nodeType":"VariableDeclaration","scope":657,"src":"2249:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2212:60:7"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[],"src":"2298:0:7"},"scope":682,"src":"2196:150:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":680,"nodeType":"Block","src":"2778:79:7","statements":[{"expression":{"arguments":[{"id":676,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"2829:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":677,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"2845:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":670,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"2788:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":715,"src":"2788:22:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory) payable external"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":673,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2818:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2818:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2788:40:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (address,bytes memory) payable external"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2788:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"2788:62:7"}]},"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"2352:255:7","text":" @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\n {TransparentUpgradeableProxy-upgradeToAndCall}.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"9623609d","id":681,"implemented":true,"kind":"function","modifiers":[{"id":668,"kind":"modifierInvocation","modifierName":{"id":667,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2768:9:7"},"nodeType":"ModifierInvocation","src":"2768:9:7"}],"name":"upgradeAndCall","nameLocation":"2621:14:7","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"proxy","nameLocation":"2674:5:7","nodeType":"VariableDeclaration","scope":681,"src":"2645:34:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":660,"nodeType":"UserDefinedTypeName","pathNode":{"id":659,"name":"ITransparentUpgradeableProxy","nodeType":"IdentifierPath","referencedDeclaration":716,"src":"2645:28:7"},"referencedDeclaration":716,"src":"2645:28:7","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$716","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"implementation","nameLocation":"2697:14:7","nodeType":"VariableDeclaration","scope":681,"src":"2689:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"data","nameLocation":"2734:4:7","nodeType":"VariableDeclaration","scope":681,"src":"2721:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":664,"name":"bytes","nodeType":"ElementaryTypeName","src":"2721:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2635:109:7"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[],"src":"2778:0:7"},"scope":682,"src":"2612:245:7","stateMutability":"payable","virtual":true,"visibility":"public"}],"scope":683,"src":"450:2409:7","usedErrors":[]}],"src":"116:2744:7"},"id":7},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol","exportedSymbols":{"Address":[1335],"ERC1967Proxy":[180],"ERC1967Upgrade":[484],"IBeacon":[546],"IERC1822Proxiable":[143],"IERC1967":[133],"ITransparentUpgradeableProxy":[716],"Proxy":[536],"StorageSlot":[1467],"TransparentUpgradeableProxy":[1005]},"id":1006,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":684,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"133:23:8"},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","file":"../ERC1967/ERC1967Proxy.sol","id":685,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1006,"sourceUnit":181,"src":"158:37:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":687,"name":"IERC1967","nodeType":"IdentifierPath","referencedDeclaration":133,"src":"679:8:8"},"id":688,"nodeType":"InheritanceSpecifier","src":"679:8:8"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"197:439:8","text":" @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n does not implement this interface directly, and some of its functions are implemented by an internal dispatch\n mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n include them in the ABI so this interface must be used to interact with it."},"fullyImplemented":false,"id":716,"linearizedBaseContracts":[716,133],"name":"ITransparentUpgradeableProxy","nameLocation":"647:28:8","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f851a440","id":693,"implemented":false,"kind":"function","modifiers":[],"name":"admin","nameLocation":"703:5:8","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"708:2:8"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":693,"src":"734:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"733:9:8"},"scope":716,"src":"694:49:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5c60da1b","id":698,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"758:14:8","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"772:2:8"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":698,"src":"798:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"798:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"797:9:8"},"scope":716,"src":"749:58:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8f283970","id":703,"implemented":false,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"822:11:8","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":703,"src":"834:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"834:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"833:9:8"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"851:0:8"},"scope":716,"src":"813:39:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3659cfe6","id":708,"implemented":false,"kind":"function","modifiers":[],"name":"upgradeTo","nameLocation":"867:9:8","nodeType":"FunctionDefinition","parameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":708,"src":"877:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:9:8"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[],"src":"894:0:8"},"scope":716,"src":"858:37:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4f1ef286","id":715,"implemented":false,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"910:16:8","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":715,"src":"927:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"927:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":715,"src":"936:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":711,"name":"bytes","nodeType":"ElementaryTypeName","src":"936:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"926:23:8"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[],"src":"966:0:8"},"scope":716,"src":"901:66:8","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1006,"src":"637:332:8","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":718,"name":"ERC1967Proxy","nodeType":"IdentifierPath","referencedDeclaration":180,"src":"3429:12:8"},"id":719,"nodeType":"InheritanceSpecifier","src":"3429:12:8"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"971:2417:8","text":" @dev This contract implements a proxy that is upgradeable by an admin.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches one of the admin functions exposed by the proxy itself.\n 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n \"admin cannot fallback to proxy target\".\n These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n to sudden errors when trying to call a function from the proxy implementation.\n Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\n NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\n mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n implementation.\n WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\n will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\n and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\n render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised."},"fullyImplemented":true,"id":1005,"linearizedBaseContracts":[1005,180,484,133,536],"name":"TransparentUpgradeableProxy","nameLocation":"3398:27:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":737,"nodeType":"Block","src":"3763:37:8","statements":[{"expression":{"arguments":[{"id":734,"name":"admin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"3786:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"_changeAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"3773:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3773:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":736,"nodeType":"ExpressionStatement","src":"3773:20:8"}]},"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"3448:210:8","text":" @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."},"id":738,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":729,"name":"_logic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"3748:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":730,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3756:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":731,"kind":"baseConstructorSpecifier","modifierName":{"id":728,"name":"ERC1967Proxy","nodeType":"IdentifierPath","referencedDeclaration":180,"src":"3735:12:8"},"nodeType":"ModifierInvocation","src":"3735:27:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"_logic","nameLocation":"3683:6:8","nodeType":"VariableDeclaration","scope":738,"src":"3675:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"3675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"admin_","nameLocation":"3699:6:8","nodeType":"VariableDeclaration","scope":738,"src":"3691:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"_data","nameLocation":"3720:5:8","nodeType":"VariableDeclaration","scope":738,"src":"3707:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":725,"name":"bytes","nodeType":"ElementaryTypeName","src":"3707:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3674:52:8"},"returnParameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"3763:0:8"},"scope":1005,"src":"3663:137:8","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":753,"nodeType":"Block","src":"4151:115:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":741,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4165:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4165:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":743,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4179:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4179:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4165:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":751,"nodeType":"Block","src":"4224:36:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":748,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[847],"referencedDeclaration":847,"src":"4238:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4238:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"ExpressionStatement","src":"4238:11:8"}]},"id":752,"nodeType":"IfStatement","src":"4161:99:8","trueBody":{"id":747,"nodeType":"Block","src":"4192:26:8","statements":[{"id":746,"nodeType":"PlaceholderStatement","src":"4206:1:8"}]}}]},"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"3806:321:8","text":" @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\n implementation provides a function with the same selector."},"id":754,"name":"ifAdmin","nameLocation":"4141:7:8","nodeType":"ModifierDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[],"src":"4148:2:8"},"src":"4132:134:8","virtual":false,"visibility":"internal"},{"baseFunctions":[514],"body":{"id":846,"nodeType":"Block","src":"4454:1055:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":759,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4468:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4468:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":761,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4482:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4482:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4468:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":844,"nodeType":"Block","src":"5461:42:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":839,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5475:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TransparentUpgradeableProxy_$1005_$","typeString":"type(contract super TransparentUpgradeableProxy)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_fallback","nodeType":"MemberAccess","referencedDeclaration":514,"src":"5475:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5475:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":843,"nodeType":"ExpressionStatement","src":"5475:17:8"}]},"id":845,"nodeType":"IfStatement","src":"4464:1039:8","trueBody":{"id":838,"nodeType":"Block","src":"4495:960:8","statements":[{"assignments":[765],"declarations":[{"constant":false,"id":765,"mutability":"mutable","name":"ret","nameLocation":"4522:3:8","nodeType":"VariableDeclaration","scope":838,"src":"4509:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":764,"name":"bytes","nodeType":"ElementaryTypeName","src":"4509:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":766,"nodeType":"VariableDeclarationStatement","src":"4509:16:8"},{"assignments":[768],"declarations":[{"constant":false,"id":768,"mutability":"mutable","name":"selector","nameLocation":"4546:8:8","nodeType":"VariableDeclaration","scope":838,"src":"4539:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":767,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4539:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":771,"initialValue":{"expression":{"id":769,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4557:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sig","nodeType":"MemberAccess","src":"4557:7:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"4539:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":772,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4582:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":773,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"4594:28:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$716_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"upgradeTo","nodeType":"MemberAccess","referencedDeclaration":708,"src":"4594:38:8","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function ITransparentUpgradeableProxy.upgradeTo(address)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4594:47:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4582:59:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":783,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4712:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":784,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"4724:28:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$716_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":715,"src":"4724:45:8","typeDescriptions":{"typeIdentifier":"t_function_declaration_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function ITransparentUpgradeableProxy.upgradeToAndCall(address,bytes memory) payable"}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4724:54:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4712:66:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":794,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4856:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":795,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"4868:28:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$716_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"changeAdmin","nodeType":"MemberAccess","referencedDeclaration":703,"src":"4868:40:8","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function ITransparentUpgradeableProxy.changeAdmin(address)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4868:49:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4856:61:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":805,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4990:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":806,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"5002:28:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$716_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"admin","nodeType":"MemberAccess","referencedDeclaration":693,"src":"5002:34:8","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_address_$","typeString":"function ITransparentUpgradeableProxy.admin() view returns (address)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"5002:43:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4990:55:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":816,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"5112:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":817,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"5124:28:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$716_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":698,"src":"5124:43:8","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_address_$","typeString":"function ITransparentUpgradeableProxy.implementation() view returns (address)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"5124:52:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"5112:64:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":831,"nodeType":"Block","src":"5248:109:8","statements":[{"expression":{"arguments":[{"hexValue":"5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5273:68:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d","typeString":"literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""},"value":"TransparentUpgradeableProxy: admin cannot fallback to proxy target"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d","typeString":"literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""}],"id":827,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5266:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5266:76:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":830,"nodeType":"ExpressionStatement","src":"5266:76:8"}]},"id":832,"nodeType":"IfStatement","src":"5108:249:8","trueBody":{"id":826,"nodeType":"Block","src":"5178:64:8","statements":[{"expression":{"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":821,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"5196:3:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":822,"name":"_dispatchImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"5202:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5202:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5196:31:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":825,"nodeType":"ExpressionStatement","src":"5196:31:8"}]}},"id":833,"nodeType":"IfStatement","src":"4986:371:8","trueBody":{"id":815,"nodeType":"Block","src":"5047:55:8","statements":[{"expression":{"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":810,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"5065:3:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":811,"name":"_dispatchAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"5071:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5071:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5065:22:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":814,"nodeType":"ExpressionStatement","src":"5065:22:8"}]}},"id":834,"nodeType":"IfStatement","src":"4852:505:8","trueBody":{"id":804,"nodeType":"Block","src":"4919:61:8","statements":[{"expression":{"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":799,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"4937:3:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":800,"name":"_dispatchChangeAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"4943:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4943:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4937:28:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":803,"nodeType":"ExpressionStatement","src":"4937:28:8"}]}},"id":835,"nodeType":"IfStatement","src":"4708:649:8","trueBody":{"id":793,"nodeType":"Block","src":"4780:66:8","statements":[{"expression":{"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":788,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"4798:3:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":789,"name":"_dispatchUpgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"4804:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4804:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4798:33:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":792,"nodeType":"ExpressionStatement","src":"4798:33:8"}]}},"id":836,"nodeType":"IfStatement","src":"4578:779:8","trueBody":{"id":782,"nodeType":"Block","src":"4643:59:8","statements":[{"expression":{"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":777,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"4661:3:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":778,"name":"_dispatchUpgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"4667:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4667:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4661:26:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":781,"nodeType":"ExpressionStatement","src":"4661:26:8"}]}},{"AST":{"nodeType":"YulBlock","src":"5379:66:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"5408:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"5413:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5404:3:8"},"nodeType":"YulFunctionCall","src":"5404:14:8"},{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"5426:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5420:5:8"},"nodeType":"YulFunctionCall","src":"5420:10:8"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"5397:6:8"},"nodeType":"YulFunctionCall","src":"5397:34:8"},"nodeType":"YulExpressionStatement","src":"5397:34:8"}]},"evmVersion":"london","externalReferences":[{"declaration":765,"isOffset":false,"isSlot":false,"src":"5408:3:8","valueSize":1},{"declaration":765,"isOffset":false,"isSlot":false,"src":"5426:3:8","valueSize":1}],"id":837,"nodeType":"InlineAssembly","src":"5370:75:8"}]}}]},"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"4272:130:8","text":" @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior"},"id":847,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"4416:9:8","nodeType":"FunctionDefinition","overrides":{"id":757,"nodeType":"OverrideSpecifier","overrides":[],"src":"4445:8:8"},"parameters":{"id":756,"nodeType":"ParameterList","parameters":[],"src":"4425:2:8"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[],"src":"4454:0:8"},"scope":1005,"src":"4407:1102:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":866,"nodeType":"Block","src":"5917:108:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":853,"name":"_requireZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"5927:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5927:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":855,"nodeType":"ExpressionStatement","src":"5927:19:8"},{"assignments":[857],"declarations":[{"constant":false,"id":857,"mutability":"mutable","name":"admin","nameLocation":"5965:5:8","nodeType":"VariableDeclaration","scope":866,"src":"5957:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"5957:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":860,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":858,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5973:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5973:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5957:27:8"},{"expression":{"arguments":[{"id":863,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"6012:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":861,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6001:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"6001:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6001:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":852,"id":865,"nodeType":"Return","src":"5994:24:8"}]},"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"5515:340:8","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":867,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchAdmin","nameLocation":"5869:14:8","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"5883:2:8"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":867,"src":"5903:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":850,"name":"bytes","nodeType":"ElementaryTypeName","src":"5903:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5902:14:8"},"scope":1005,"src":"5860:165:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":886,"nodeType":"Block","src":"6451:132:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":873,"name":"_requireZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"6461:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6461:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":875,"nodeType":"ExpressionStatement","src":"6461:19:8"},{"assignments":[877],"declarations":[{"constant":false,"id":877,"mutability":"mutable","name":"implementation","nameLocation":"6499:14:8","nodeType":"VariableDeclaration","scope":886,"src":"6491:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"6491:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":880,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":878,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[179],"referencedDeclaration":179,"src":"6516:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6516:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6491:42:8"},{"expression":{"arguments":[{"id":883,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"6561:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":881,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6550:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"6550:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6550:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":872,"id":885,"nodeType":"Return","src":"6543:33:8"}]},"documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"6031:349:8","text":" @dev Returns the current implementation.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"id":887,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchImplementation","nameLocation":"6394:23:8","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"6417:2:8"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":887,"src":"6437:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":870,"name":"bytes","nodeType":"ElementaryTypeName","src":"6437:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6436:14:8"},"scope":1005,"src":"6385:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":915,"nodeType":"Block","src":"6757:153:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":893,"name":"_requireZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"6767:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6767:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":895,"nodeType":"ExpressionStatement","src":"6767:19:8"},{"assignments":[897],"declarations":[{"constant":false,"id":897,"mutability":"mutable","name":"newAdmin","nameLocation":"6805:8:8","nodeType":"VariableDeclaration","scope":915,"src":"6797:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"6797:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":908,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":900,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6827:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"6827:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"6827:12:8","startExpression":{"hexValue":"34","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6836:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6842:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"6842:7:8","typeDescriptions":{}}}],"id":906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6841:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":898,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6816:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"6816:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6816:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"6797:54:8"},{"expression":{"arguments":[{"id":910,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"6874:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":909,"name":"_changeAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"6861:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6861:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":912,"nodeType":"ExpressionStatement","src":"6861:22:8"},{"expression":{"hexValue":"","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6901:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":892,"id":914,"nodeType":"Return","src":"6894:9:8"}]},"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"6589:100:8","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":916,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchChangeAdmin","nameLocation":"6703:20:8","nodeType":"FunctionDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"6723:2:8"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":916,"src":"6743:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":890,"name":"bytes","nodeType":"ElementaryTypeName","src":"6743:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6742:14:8"},"scope":1005,"src":"6694:216:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":949,"nodeType":"Block","src":"7046:194:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":922,"name":"_requireZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"7056:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7056:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"ExpressionStatement","src":"7056:19:8"},{"assignments":[926],"declarations":[{"constant":false,"id":926,"mutability":"mutable","name":"newImplementation","nameLocation":"7094:17:8","nodeType":"VariableDeclaration","scope":949,"src":"7086:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"7086:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":937,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":929,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7125:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"7125:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"7125:12:8","startExpression":{"hexValue":"34","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7134:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7140:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"7140:7:8","typeDescriptions":{}}}],"id":935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7139:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":927,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7114:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"7114:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7114:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"7086:63:8"},{"expression":{"arguments":[{"id":939,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"7177:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7202:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7196:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":940,"name":"bytes","nodeType":"ElementaryTypeName","src":"7196:5:8","typeDescriptions":{}}},"id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7196:9:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7207:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":938,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"7159:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7159:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":946,"nodeType":"ExpressionStatement","src":"7159:54:8"},{"expression":{"hexValue":"","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7231:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":921,"id":948,"nodeType":"Return","src":"7224:9:8"}]},"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"6916:64:8","text":" @dev Upgrade the implementation of the proxy."},"id":950,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchUpgradeTo","nameLocation":"6994:18:8","nodeType":"FunctionDefinition","parameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"7012:2:8"},"returnParameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":950,"src":"7032:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":919,"name":"bytes","nodeType":"ElementaryTypeName","src":"7032:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7031:14:8"},"scope":1005,"src":"6985:255:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":981,"nodeType":"Block","src":"7592:186:8","statements":[{"assignments":[957,959],"declarations":[{"constant":false,"id":957,"mutability":"mutable","name":"newImplementation","nameLocation":"7611:17:8","nodeType":"VariableDeclaration","scope":981,"src":"7603:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"7603:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"data","nameLocation":"7643:4:8","nodeType":"VariableDeclaration","scope":981,"src":"7630:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":958,"name":"bytes","nodeType":"ElementaryTypeName","src":"7630:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":972,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":962,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7662:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"7662:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"7662:12:8","startExpression":{"hexValue":"34","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7671:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7677:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"7677:7:8","typeDescriptions":{}}},{"id":969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7686:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":968,"name":"bytes","nodeType":"ElementaryTypeName","src":"7686:5:8","typeDescriptions":{}}}],"id":970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7676:16:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(address),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(address),type(bytes storage pointer))"}],"expression":{"id":960,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7651:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"7651:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7651:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_bytes_memory_ptr_$","typeString":"tuple(address payable,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7602:91:8"},{"expression":{"arguments":[{"id":974,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7721:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":975,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"7740:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7746:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":973,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"7703:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7703:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"ExpressionStatement","src":"7703:48:8"},{"expression":{"hexValue":"","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7769:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":955,"id":980,"nodeType":"Return","src":"7762:9:8"}]},"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"7246:273:8","text":" @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n proxied contract."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchUpgradeToAndCall","nameLocation":"7533:25:8","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"7558:2:8"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":982,"src":"7578:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":953,"name":"bytes","nodeType":"ElementaryTypeName","src":"7578:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7577:14:8"},"scope":1005,"src":"7524:254:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":991,"nodeType":"Block","src":"7989:35:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":988,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8006:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8006:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":987,"id":990,"nodeType":"Return","src":"7999:18:8"}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"7784:142:8","text":" @dev Returns the current admin.\n CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead."},"id":992,"implemented":true,"kind":"function","modifiers":[],"name":"_admin","nameLocation":"7940:6:8","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[],"src":"7946:2:8"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"7980:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7979:9:8"},"scope":1005,"src":"7931:93:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1003,"nodeType":"Block","src":"8298:40:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":997,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8316:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"8316:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8329:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8316:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":996,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8308:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8308:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1002,"nodeType":"ExpressionStatement","src":"8308:23:8"}]},"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"8030:226:8","text":" @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\n emulate some proxy functions being non-payable while still allowing value to pass through."},"id":1004,"implemented":true,"kind":"function","modifiers":[],"name":"_requireZeroValue","nameLocation":"8270:17:8","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"8287:2:8"},"returnParameters":{"id":995,"nodeType":"ParameterList","parameters":[],"src":"8298:0:8"},"scope":1005,"src":"8261:77:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1006,"src":"3389:4951:8","usedErrors":[]}],"src":"133:8208:8"},"id":8},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1335]},"id":1336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1007,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"126:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1335,"linearizedBaseContracts":[1335],"name":"Address","nameLocation":"202:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1022,"nodeType":"Block","src":"1478:254:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1016,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"1702:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1702:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1015,"id":1021,"nodeType":"Return","src":"1695:30:9"}]},"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"216:1191:9","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1023,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:9","nodeType":"FunctionDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"account","nameLocation":"1440:7:9","nodeType":"VariableDeclaration","scope":1023,"src":"1432:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:9"},"returnParameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1023,"src":"1472:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1013,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:9"},"scope":1335,"src":"1412:320:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1056,"nodeType":"Block","src":"2718:241:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1034,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1335","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1335","typeString":"library Address"}],"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:9","typeDescriptions":{}}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2736:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1037,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"2761:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1031,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"ExpressionStatement","src":"2728:73:9"},{"assignments":[1043,null],"declarations":[{"constant":false,"id":1043,"mutability":"mutable","name":"success","nameLocation":"2818:7:9","nodeType":"VariableDeclaration","scope":1056,"src":"2813:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1042,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1050,"initialValue":{"arguments":[{"hexValue":"","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1044,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2831:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2831:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1046,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"2853:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:9"},{"expression":{"arguments":[{"id":1052,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"2882:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1051,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1055,"nodeType":"ExpressionStatement","src":"2874:78:9"}]},"documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"1738:904:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:9","nodeType":"FunctionDefinition","parameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:9","nodeType":"VariableDeclaration","scope":1057,"src":"2666:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"amount","nameLocation":"2701:6:9","nodeType":"VariableDeclaration","scope":1057,"src":"2693:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:9"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[],"src":"2718:0:9"},"scope":1335,"src":"2647:312:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1074,"nodeType":"Block","src":"3790:96:9","statements":[{"expression":{"arguments":[{"id":1068,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"3829:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1069,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"3837:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1067,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1115,1159],"referencedDeclaration":1159,"src":"3807:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3807:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1066,"id":1073,"nodeType":"Return","src":"3800:79:9"}]},"documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"2965:731:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1075,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:9","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"target","nameLocation":"3731:6:9","nodeType":"VariableDeclaration","scope":1075,"src":"3723:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1059,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"data","nameLocation":"3752:4:9","nodeType":"VariableDeclaration","scope":1075,"src":"3739:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1061,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:9"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1075,"src":"3776:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1064,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:9"},"scope":1335,"src":"3701:185:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1094,"nodeType":"Block","src":"4255:76:9","statements":[{"expression":{"arguments":[{"id":1088,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"4294:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1089,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"4302:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1091,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"4311:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1087,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1115,1159],"referencedDeclaration":1159,"src":"4272:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1086,"id":1093,"nodeType":"Return","src":"4265:59:9"}]},"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"3892:211:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1095,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:9","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"target","nameLocation":"4147:6:9","nodeType":"VariableDeclaration","scope":1095,"src":"4139:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"data","nameLocation":"4176:4:9","nodeType":"VariableDeclaration","scope":1095,"src":"4163:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1079,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:9","nodeType":"VariableDeclaration","scope":1095,"src":"4190:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1081,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:9"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1095,"src":"4241:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1084,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:9"},"scope":1335,"src":"4108:223:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1114,"nodeType":"Block","src":"4806:111:9","statements":[{"expression":{"arguments":[{"id":1108,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"4845:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1109,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"4853:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"4859:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1107,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1115,1159],"referencedDeclaration":1159,"src":"4823:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1106,"id":1113,"nodeType":"Return","src":"4816:94:9"}]},"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"4337:351:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1115,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:9","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"target","nameLocation":"4732:6:9","nodeType":"VariableDeclaration","scope":1115,"src":"4724:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"data","nameLocation":"4753:4:9","nodeType":"VariableDeclaration","scope":1115,"src":"4740:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1099,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"value","nameLocation":"4767:5:9","nodeType":"VariableDeclaration","scope":1115,"src":"4759:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:9"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1115,"src":"4792:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1104,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:9"},"scope":1335,"src":"4693:224:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1158,"nodeType":"Block","src":"5344:267:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1132,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1335","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1335","typeString":"library Address"}],"id":1131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:9","typeDescriptions":{}}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5362:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5362:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"5387:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1129,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1139,"nodeType":"ExpressionStatement","src":"5354:81:9"},{"assignments":[1141,1143],"declarations":[{"constant":false,"id":1141,"mutability":"mutable","name":"success","nameLocation":"5451:7:9","nodeType":"VariableDeclaration","scope":1158,"src":"5446:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1140,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:9","nodeType":"VariableDeclaration","scope":1158,"src":"5460:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1142,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1150,"initialValue":{"arguments":[{"id":1148,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"5513:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1144,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"5487:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5487:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"5506:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:9"},{"expression":{"arguments":[{"id":1152,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"5562:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1153,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"5570:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1154,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"5579:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1155,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"5591:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1151,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"5535:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5535:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1128,"id":1157,"nodeType":"Return","src":"5528:76:9"}]},"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"4923:237:9","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:9","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"target","nameLocation":"5213:6:9","nodeType":"VariableDeclaration","scope":1159,"src":"5205:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"data","nameLocation":"5242:4:9","nodeType":"VariableDeclaration","scope":1159,"src":"5229:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1119,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"value","nameLocation":"5264:5:9","nodeType":"VariableDeclaration","scope":1159,"src":"5256:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:9","nodeType":"VariableDeclaration","scope":1159,"src":"5279:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1123,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:9"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"5330:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1126,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:9"},"scope":1335,"src":"5165:446:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1175,"nodeType":"Block","src":"5888:97:9","statements":[{"expression":{"arguments":[{"id":1170,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"5924:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1171,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"5932:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1169,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1176,1205],"referencedDeclaration":1205,"src":"5905:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1168,"id":1174,"nodeType":"Return","src":"5898:80:9"}]},"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"5617:166:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1176,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:9","nodeType":"FunctionDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"target","nameLocation":"5824:6:9","nodeType":"VariableDeclaration","scope":1176,"src":"5816:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"data","nameLocation":"5845:4:9","nodeType":"VariableDeclaration","scope":1176,"src":"5832:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1163,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:9"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1176,"src":"5874:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1166,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:9"},"scope":1335,"src":"5788:197:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1204,"nodeType":"Block","src":"6327:168:9","statements":[{"assignments":[1189,1191],"declarations":[{"constant":false,"id":1189,"mutability":"mutable","name":"success","nameLocation":"6343:7:9","nodeType":"VariableDeclaration","scope":1204,"src":"6338:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1188,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:9","nodeType":"VariableDeclaration","scope":1204,"src":"6352:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1190,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1196,"initialValue":{"arguments":[{"id":1194,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"6397:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1192,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"6379:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:9"},{"expression":{"arguments":[{"id":1198,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"6446:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1199,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"6454:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1200,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"6463:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1201,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"6475:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1197,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6419:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6419:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1187,"id":1203,"nodeType":"Return","src":"6412:76:9"}]},"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"5991:173:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1205,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:9","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"target","nameLocation":"6214:6:9","nodeType":"VariableDeclaration","scope":1205,"src":"6206:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"data","nameLocation":"6243:4:9","nodeType":"VariableDeclaration","scope":1205,"src":"6230:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1180,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:9","nodeType":"VariableDeclaration","scope":1205,"src":"6257:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1182,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:9"},"returnParameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1205,"src":"6313:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1185,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:9"},"scope":1335,"src":"6169:326:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1221,"nodeType":"Block","src":"6771:101:9","statements":[{"expression":{"arguments":[{"id":1216,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"6809:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1217,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"6817:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1215,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1222,1251],"referencedDeclaration":1251,"src":"6788:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6788:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1214,"id":1220,"nodeType":"Return","src":"6781:84:9"}]},"documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"6501:168:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1222,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:9","nodeType":"FunctionDefinition","parameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"target","nameLocation":"6712:6:9","nodeType":"VariableDeclaration","scope":1222,"src":"6704:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1207,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1210,"mutability":"mutable","name":"data","nameLocation":"6733:4:9","nodeType":"VariableDeclaration","scope":1222,"src":"6720:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1209,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:9"},"returnParameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1222,"src":"6757:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1212,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:9"},"scope":1335,"src":"6674:198:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1250,"nodeType":"Block","src":"7213:170:9","statements":[{"assignments":[1235,1237],"declarations":[{"constant":false,"id":1235,"mutability":"mutable","name":"success","nameLocation":"7229:7:9","nodeType":"VariableDeclaration","scope":1250,"src":"7224:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1234,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:9","nodeType":"VariableDeclaration","scope":1250,"src":"7238:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1236,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1242,"initialValue":{"arguments":[{"id":1240,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"7285:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1238,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"7265:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:9"},{"expression":{"arguments":[{"id":1244,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"7334:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1245,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"7342:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1246,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"7351:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1247,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"7363:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1243,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"7307:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7307:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1233,"id":1249,"nodeType":"Return","src":"7300:76:9"}]},"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"6878:175:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1251,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:9","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"target","nameLocation":"7105:6:9","nodeType":"VariableDeclaration","scope":1251,"src":"7097:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"data","nameLocation":"7134:4:9","nodeType":"VariableDeclaration","scope":1251,"src":"7121:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1226,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:9","nodeType":"VariableDeclaration","scope":1251,"src":"7148:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1228,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:9"},"returnParameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1251,"src":"7199:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1231,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:9"},"scope":1335,"src":"7058:325:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1289,"nodeType":"Block","src":"7865:434:9","statements":[{"condition":{"id":1265,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"7879:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1287,"nodeType":"Block","src":"8235:58:9","statements":[{"expression":{"arguments":[{"id":1283,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"8257:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1284,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"8269:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1282,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"8249:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8249:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"ExpressionStatement","src":"8249:33:9"}]},"id":1288,"nodeType":"IfStatement","src":"7875:418:9","trueBody":{"id":1281,"nodeType":"Block","src":"7888:341:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1266,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"7906:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7906:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1278,"nodeType":"IfStatement","src":"7902:286:9","trueBody":{"id":1277,"nodeType":"Block","src":"7930:258:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1272,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"8132:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1271,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"8121:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8113:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1276,"nodeType":"ExpressionStatement","src":"8113:60:9"}]}},{"expression":{"id":1279,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"8208:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1264,"id":1280,"nodeType":"Return","src":"8201:17:9"}]}}]},"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"7389:277:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1290,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:9","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"target","nameLocation":"7724:6:9","nodeType":"VariableDeclaration","scope":1290,"src":"7716:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"success","nameLocation":"7745:7:9","nodeType":"VariableDeclaration","scope":1290,"src":"7740:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1255,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:9","nodeType":"VariableDeclaration","scope":1290,"src":"7762:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1257,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:9","nodeType":"VariableDeclaration","scope":1290,"src":"7795:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1259,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:9"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1290,"src":"7851:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1262,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:9"},"scope":1335,"src":"7671:628:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1313,"nodeType":"Block","src":"8680:135:9","statements":[{"condition":{"id":1302,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"8694:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1311,"nodeType":"Block","src":"8751:58:9","statements":[{"expression":{"arguments":[{"id":1307,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"8773:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1308,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"8785:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1306,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"8765:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8765:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1310,"nodeType":"ExpressionStatement","src":"8765:33:9"}]},"id":1312,"nodeType":"IfStatement","src":"8690:119:9","trueBody":{"id":1305,"nodeType":"Block","src":"8703:42:9","statements":[{"expression":{"id":1303,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"8724:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1301,"id":1304,"nodeType":"Return","src":"8717:17:9"}]}}]},"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"8305:210:9","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:9","nodeType":"FunctionDefinition","parameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"success","nameLocation":"8560:7:9","nodeType":"VariableDeclaration","scope":1314,"src":"8555:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1292,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:9","nodeType":"VariableDeclaration","scope":1314,"src":"8577:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1294,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:9","nodeType":"VariableDeclaration","scope":1314,"src":"8610:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1296,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:9"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1314,"src":"8666:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1299,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:9"},"scope":1335,"src":"8520:295:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1333,"nodeType":"Block","src":"8904:457:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1321,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"8980:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8980:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1331,"nodeType":"Block","src":"9310:45:9","statements":[{"expression":{"arguments":[{"id":1328,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"9331:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1327,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9324:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1330,"nodeType":"ExpressionStatement","src":"9324:20:9"}]},"id":1332,"nodeType":"IfStatement","src":"8976:379:9","trueBody":{"id":1326,"nodeType":"Block","src":"9003:301:9","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:9","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:9"},"nodeType":"YulFunctionCall","src":"9202:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:9"},"nodeType":"YulFunctionCall","src":"9243:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:9"},"nodeType":"YulFunctionCall","src":"9236:44:9"},"nodeType":"YulExpressionStatement","src":"9236:44:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1316,"isOffset":false,"isSlot":false,"src":"9208:10:9","valueSize":1},{"declaration":1316,"isOffset":false,"isSlot":false,"src":"9251:10:9","valueSize":1}],"id":1325,"nodeType":"InlineAssembly","src":"9152:142:9"}]}}]},"id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:9","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:9","nodeType":"VariableDeclaration","scope":1334,"src":"8838:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1315,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:9","nodeType":"VariableDeclaration","scope":1334,"src":"8863:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1317,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:9"},"returnParameters":{"id":1320,"nodeType":"ParameterList","parameters":[],"src":"8904:0:9"},"scope":1335,"src":"8821:540:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1336,"src":"194:9169:9","usedErrors":[]}],"src":"101:9263:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1357]},"id":1358,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1337,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:10"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"111:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1357,"linearizedBaseContracts":[1357],"name":"Context","nameLocation":"626:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1346,"nodeType":"Block","src":"702:34:10","statements":[{"expression":{"expression":{"id":1343,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1342,"id":1345,"nodeType":"Return","src":"712:17:10"}]},"id":1347,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:10","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[],"src":"659:2:10"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1347,"src":"693:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:10"},"scope":1357,"src":"640:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1355,"nodeType":"Block","src":"809:32:10","statements":[{"expression":{"expression":{"id":1352,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1351,"id":1354,"nodeType":"Return","src":"819:15:10"}]},"id":1356,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:10","nodeType":"FunctionDefinition","parameters":{"id":1348,"nodeType":"ParameterList","parameters":[],"src":"759:2:10"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1356,"src":"793:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1349,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:10"},"scope":1357,"src":"742:99:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1358,"src":"608:235:10","usedErrors":[]}],"src":"86:758:10"},"id":10},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1467]},"id":1468,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1359,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1360,"nodeType":"StructuredDocumentation","src":"218:1201:11","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":1467,"linearizedBaseContracts":[1467],"name":"StorageSlot","nameLocation":"1428:11:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1363,"members":[{"constant":false,"id":1362,"mutability":"mutable","name":"value","nameLocation":"1483:5:11","nodeType":"VariableDeclaration","scope":1363,"src":"1475:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:11","nodeType":"StructDefinition","scope":1467,"src":"1446:49:11","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1366,"members":[{"constant":false,"id":1365,"mutability":"mutable","name":"value","nameLocation":"1535:5:11","nodeType":"VariableDeclaration","scope":1366,"src":"1530:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1364,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:11","nodeType":"StructDefinition","scope":1467,"src":"1501:46:11","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1369,"members":[{"constant":false,"id":1368,"mutability":"mutable","name":"value","nameLocation":"1590:5:11","nodeType":"VariableDeclaration","scope":1369,"src":"1582:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:11","nodeType":"StructDefinition","scope":1467,"src":"1553:49:11","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1372,"members":[{"constant":false,"id":1371,"mutability":"mutable","name":"value","nameLocation":"1645:5:11","nodeType":"VariableDeclaration","scope":1372,"src":"1637:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:11","nodeType":"StructDefinition","scope":1467,"src":"1608:49:11","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1375,"members":[{"constant":false,"id":1374,"mutability":"mutable","name":"value","nameLocation":"1698:5:11","nodeType":"VariableDeclaration","scope":1375,"src":"1691:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1373,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:11","nodeType":"StructDefinition","scope":1467,"src":"1663:47:11","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1378,"members":[{"constant":false,"id":1377,"mutability":"mutable","name":"value","nameLocation":"1749:5:11","nodeType":"VariableDeclaration","scope":1378,"src":"1743:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1376,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:11","nodeType":"StructDefinition","scope":1467,"src":"1716:45:11","visibility":"public"},{"body":{"id":1388,"nodeType":"Block","src":"1943:106:11","statements":[{"AST":{"nodeType":"YulBlock","src":"2005:38:11","statements":[{"nodeType":"YulAssignment","src":"2019:14:11","value":{"name":"slot","nodeType":"YulIdentifier","src":"2029:4:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2019:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1385,"isOffset":false,"isSlot":true,"src":"2019:6:11","suffix":"slot","valueSize":1},{"declaration":1381,"isOffset":false,"isSlot":false,"src":"2029:4:11","valueSize":1}],"id":1387,"nodeType":"InlineAssembly","src":"1996:47:11"}]},"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"1767:87:11","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1389,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:11","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"slot","nameLocation":"1891:4:11","nodeType":"VariableDeclaration","scope":1389,"src":"1883:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:11"},"returnParameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"r","nameLocation":"1940:1:11","nodeType":"VariableDeclaration","scope":1389,"src":"1920:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1363_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1384,"nodeType":"UserDefinedTypeName","pathNode":{"id":1383,"name":"AddressSlot","nodeType":"IdentifierPath","referencedDeclaration":1363,"src":"1920:11:11"},"referencedDeclaration":1363,"src":"1920:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1363_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:11"},"scope":1467,"src":"1859:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1399,"nodeType":"Block","src":"2231:106:11","statements":[{"AST":{"nodeType":"YulBlock","src":"2293:38:11","statements":[{"nodeType":"YulAssignment","src":"2307:14:11","value":{"name":"slot","nodeType":"YulIdentifier","src":"2317:4:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2307:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1396,"isOffset":false,"isSlot":true,"src":"2307:6:11","suffix":"slot","valueSize":1},{"declaration":1392,"isOffset":false,"isSlot":false,"src":"2317:4:11","valueSize":1}],"id":1398,"nodeType":"InlineAssembly","src":"2284:47:11"}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"2055:87:11","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1400,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:11","nodeType":"FunctionDefinition","parameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"slot","nameLocation":"2179:4:11","nodeType":"VariableDeclaration","scope":1400,"src":"2171:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:11"},"returnParameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"r","nameLocation":"2228:1:11","nodeType":"VariableDeclaration","scope":1400,"src":"2208:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1366_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1395,"nodeType":"UserDefinedTypeName","pathNode":{"id":1394,"name":"BooleanSlot","nodeType":"IdentifierPath","referencedDeclaration":1366,"src":"2208:11:11"},"referencedDeclaration":1366,"src":"2208:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1366_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:11"},"scope":1467,"src":"2147:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1410,"nodeType":"Block","src":"2519:106:11","statements":[{"AST":{"nodeType":"YulBlock","src":"2581:38:11","statements":[{"nodeType":"YulAssignment","src":"2595:14:11","value":{"name":"slot","nodeType":"YulIdentifier","src":"2605:4:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2595:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1407,"isOffset":false,"isSlot":true,"src":"2595:6:11","suffix":"slot","valueSize":1},{"declaration":1403,"isOffset":false,"isSlot":false,"src":"2605:4:11","valueSize":1}],"id":1409,"nodeType":"InlineAssembly","src":"2572:47:11"}]},"documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"2343:87:11","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1411,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:11","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"slot","nameLocation":"2467:4:11","nodeType":"VariableDeclaration","scope":1411,"src":"2459:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:11"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"r","nameLocation":"2516:1:11","nodeType":"VariableDeclaration","scope":1411,"src":"2496:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1369_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1406,"nodeType":"UserDefinedTypeName","pathNode":{"id":1405,"name":"Bytes32Slot","nodeType":"IdentifierPath","referencedDeclaration":1369,"src":"2496:11:11"},"referencedDeclaration":1369,"src":"2496:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1369_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:11"},"scope":1467,"src":"2435:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1421,"nodeType":"Block","src":"2807:106:11","statements":[{"AST":{"nodeType":"YulBlock","src":"2869:38:11","statements":[{"nodeType":"YulAssignment","src":"2883:14:11","value":{"name":"slot","nodeType":"YulIdentifier","src":"2893:4:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2883:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1418,"isOffset":false,"isSlot":true,"src":"2883:6:11","suffix":"slot","valueSize":1},{"declaration":1414,"isOffset":false,"isSlot":false,"src":"2893:4:11","valueSize":1}],"id":1420,"nodeType":"InlineAssembly","src":"2860:47:11"}]},"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"2631:87:11","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1422,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:11","nodeType":"FunctionDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"slot","nameLocation":"2755:4:11","nodeType":"VariableDeclaration","scope":1422,"src":"2747:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:11"},"returnParameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"r","nameLocation":"2804:1:11","nodeType":"VariableDeclaration","scope":1422,"src":"2784:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1372_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1417,"nodeType":"UserDefinedTypeName","pathNode":{"id":1416,"name":"Uint256Slot","nodeType":"IdentifierPath","referencedDeclaration":1372,"src":"2784:11:11"},"referencedDeclaration":1372,"src":"2784:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1372_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:11"},"scope":1467,"src":"2723:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1432,"nodeType":"Block","src":"3092:106:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3154:38:11","statements":[{"nodeType":"YulAssignment","src":"3168:14:11","value":{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3168:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1429,"isOffset":false,"isSlot":true,"src":"3168:6:11","suffix":"slot","valueSize":1},{"declaration":1425,"isOffset":false,"isSlot":false,"src":"3178:4:11","valueSize":1}],"id":1431,"nodeType":"InlineAssembly","src":"3145:47:11"}]},"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"2919:86:11","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1433,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:11","nodeType":"FunctionDefinition","parameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"slot","nameLocation":"3041:4:11","nodeType":"VariableDeclaration","scope":1433,"src":"3033:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:11"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"r","nameLocation":"3089:1:11","nodeType":"VariableDeclaration","scope":1433,"src":"3070:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1375_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1428,"nodeType":"UserDefinedTypeName","pathNode":{"id":1427,"name":"StringSlot","nodeType":"IdentifierPath","referencedDeclaration":1375,"src":"3070:10:11"},"referencedDeclaration":1375,"src":"3070:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1375_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:11"},"scope":1467,"src":"3010:188:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1443,"nodeType":"Block","src":"3400:112:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3462:44:11","statements":[{"nodeType":"YulAssignment","src":"3476:20:11","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3486:10:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3476:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1440,"isOffset":false,"isSlot":true,"src":"3476:6:11","suffix":"slot","valueSize":1},{"declaration":1436,"isOffset":false,"isSlot":true,"src":"3486:10:11","suffix":"slot","valueSize":1}],"id":1442,"nodeType":"InlineAssembly","src":"3453:53:11"}]},"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"3204:101:11","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1444,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:11","nodeType":"FunctionDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"store","nameLocation":"3348:5:11","nodeType":"VariableDeclaration","scope":1444,"src":"3333:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1435,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:11"},"returnParameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"r","nameLocation":"3397:1:11","nodeType":"VariableDeclaration","scope":1444,"src":"3378:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1375_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1439,"nodeType":"UserDefinedTypeName","pathNode":{"id":1438,"name":"StringSlot","nodeType":"IdentifierPath","referencedDeclaration":1375,"src":"3378:10:11"},"referencedDeclaration":1375,"src":"3378:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1375_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:11"},"scope":1467,"src":"3310:202:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1454,"nodeType":"Block","src":"3688:106:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3750:38:11","statements":[{"nodeType":"YulAssignment","src":"3764:14:11","value":{"name":"slot","nodeType":"YulIdentifier","src":"3774:4:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3764:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1451,"isOffset":false,"isSlot":true,"src":"3764:6:11","suffix":"slot","valueSize":1},{"declaration":1447,"isOffset":false,"isSlot":false,"src":"3774:4:11","valueSize":1}],"id":1453,"nodeType":"InlineAssembly","src":"3741:47:11"}]},"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"3518:85:11","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1455,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:11","nodeType":"FunctionDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"slot","nameLocation":"3638:4:11","nodeType":"VariableDeclaration","scope":1455,"src":"3630:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:11"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"r","nameLocation":"3685:1:11","nodeType":"VariableDeclaration","scope":1455,"src":"3667:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1378_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1450,"nodeType":"UserDefinedTypeName","pathNode":{"id":1449,"name":"BytesSlot","nodeType":"IdentifierPath","referencedDeclaration":1378,"src":"3667:9:11"},"referencedDeclaration":1378,"src":"3667:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1378_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:11"},"scope":1467,"src":"3608:186:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1465,"nodeType":"Block","src":"3991:112:11","statements":[{"AST":{"nodeType":"YulBlock","src":"4053:44:11","statements":[{"nodeType":"YulAssignment","src":"4067:20:11","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4077:10:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4067:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1462,"isOffset":false,"isSlot":true,"src":"4067:6:11","suffix":"slot","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":true,"src":"4077:10:11","suffix":"slot","valueSize":1}],"id":1464,"nodeType":"InlineAssembly","src":"4044:53:11"}]},"documentation":{"id":1456,"nodeType":"StructuredDocumentation","src":"3800:99:11","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1466,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:11","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"store","nameLocation":"3940:5:11","nodeType":"VariableDeclaration","scope":1466,"src":"3926:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1457,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:11"},"returnParameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"r","nameLocation":"3988:1:11","nodeType":"VariableDeclaration","scope":1466,"src":"3970:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1378_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1461,"nodeType":"UserDefinedTypeName","pathNode":{"id":1460,"name":"BytesSlot","nodeType":"IdentifierPath","referencedDeclaration":1378,"src":"3970:9:11"},"referencedDeclaration":1378,"src":"3970:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1378_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:11"},"scope":1467,"src":"3904:199:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1468,"src":"1420:2685:11","usedErrors":[]}],"src":"193:3913:11"},"id":11},"contracts/Box.sol":{"ast":{"absolutePath":"contracts/Box.sol","exportedSymbols":{"Box":[1507]},"id":1508,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1469,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"71:23:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1507,"linearizedBaseContracts":[1507],"name":"Box","nameLocation":"105:3:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1471,"mutability":"mutable","name":"num","nameLocation":"132:3:12","nodeType":"VariableDeclaration","scope":1507,"src":"115:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"115:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"id":1475,"name":"ValueChanged","nameLocation":"148:12:12","nodeType":"EventDefinition","parameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"indexed":false,"mutability":"mutable","name":"NewValue","nameLocation":"169:8:12","nodeType":"VariableDeclaration","scope":1475,"src":"161:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"161:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"160:18:12"},"src":"142:37:12"},{"body":{"id":1489,"nodeType":"Block","src":"226:99:12","statements":[{"id":1484,"nodeType":"UncheckedBlock","src":"236:47:12","statements":[{"expression":{"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1480,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"260:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1481,"name":"newNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"266:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"260:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1483,"nodeType":"ExpressionStatement","src":"260:12:12"}]},{"eventCall":{"arguments":[{"id":1486,"name":"newNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"311:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1485,"name":"ValueChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"298:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"298:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"EmitStatement","src":"293:25:12"}]},"functionSelector":"55241077","id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"setValue","nameLocation":"194:8:12","nodeType":"FunctionDefinition","parameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"newNum","nameLocation":"211:6:12","nodeType":"VariableDeclaration","scope":1490,"src":"203:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1476,"name":"uint256","nodeType":"ElementaryTypeName","src":"203:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"202:16:12"},"returnParameters":{"id":1479,"nodeType":"ParameterList","parameters":[],"src":"226:0:12"},"scope":1507,"src":"185:140:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1497,"nodeType":"Block","src":"378:27:12","statements":[{"expression":{"id":1495,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"395:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1494,"id":1496,"nodeType":"Return","src":"388:10:12"}]},"functionSelector":"67e0badb","id":1498,"implemented":true,"kind":"function","modifiers":[],"name":"getNum","nameLocation":"340:6:12","nodeType":"FunctionDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[],"src":"346:2:12"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1498,"src":"369:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"369:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"368:9:12"},"scope":1507,"src":"331:74:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1505,"nodeType":"Block","src":"462:25:12","statements":[{"expression":{"hexValue":"31","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"479:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":1502,"id":1504,"nodeType":"Return","src":"472:8:12"}]},"functionSelector":"0d8e6e2c","id":1506,"implemented":true,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"420:10:12","nodeType":"FunctionDefinition","parameters":{"id":1499,"nodeType":"ParameterList","parameters":[],"src":"430:2:12"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1506,"src":"453:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"453:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"452:9:12"},"scope":1507,"src":"411:76:12","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":1508,"src":"96:393:12","usedErrors":[]}],"src":"71:418:12"},"id":12},"contracts/BoxV2.sol":{"ast":{"absolutePath":"contracts/BoxV2.sol","exportedSymbols":{"BoxV2":[1562]},"id":1563,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1509,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"71:23:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1562,"linearizedBaseContracts":[1562],"name":"BoxV2","nameLocation":"105:5:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1511,"mutability":"mutable","name":"num","nameLocation":"134:3:13","nodeType":"VariableDeclaration","scope":1562,"src":"117:20:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"117:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"id":1515,"name":"ValueChanged","nameLocation":"150:12:13","nodeType":"EventDefinition","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"indexed":false,"mutability":"mutable","name":"NewValue","nameLocation":"171:8:13","nodeType":"VariableDeclaration","scope":1515,"src":"163:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"163:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"162:18:13"},"src":"144:37:13"},{"body":{"id":1529,"nodeType":"Block","src":"228:99:13","statements":[{"id":1524,"nodeType":"UncheckedBlock","src":"238:47:13","statements":[{"expression":{"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1520,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"262:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1521,"name":"newNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"268:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"262:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1523,"nodeType":"ExpressionStatement","src":"262:12:13"}]},{"eventCall":{"arguments":[{"id":1526,"name":"newNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"313:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1525,"name":"ValueChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"300:12:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"300:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1528,"nodeType":"EmitStatement","src":"295:25:13"}]},"functionSelector":"55241077","id":1530,"implemented":true,"kind":"function","modifiers":[],"name":"setValue","nameLocation":"196:8:13","nodeType":"FunctionDefinition","parameters":{"id":1518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"newNum","nameLocation":"213:6:13","nodeType":"VariableDeclaration","scope":1530,"src":"205:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"205:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"204:16:13"},"returnParameters":{"id":1519,"nodeType":"ParameterList","parameters":[],"src":"228:0:13"},"scope":1562,"src":"187:140:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1537,"nodeType":"Block","src":"380:27:13","statements":[{"expression":{"id":1535,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"397:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1534,"id":1536,"nodeType":"Return","src":"390:10:13"}]},"functionSelector":"67e0badb","id":1538,"implemented":true,"kind":"function","modifiers":[],"name":"getNum","nameLocation":"342:6:13","nodeType":"FunctionDefinition","parameters":{"id":1531,"nodeType":"ParameterList","parameters":[],"src":"348:2:13"},"returnParameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1538,"src":"371:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"370:9:13"},"scope":1562,"src":"333:74:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1545,"nodeType":"Block","src":"464:25:13","statements":[{"expression":{"hexValue":"32","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"481:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"functionReturnParameters":1542,"id":1544,"nodeType":"Return","src":"474:8:13"}]},"functionSelector":"0d8e6e2c","id":1546,"implemented":true,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"422:10:13","nodeType":"FunctionDefinition","parameters":{"id":1539,"nodeType":"ParameterList","parameters":[],"src":"432:2:13"},"returnParameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1546,"src":"455:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"455:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"454:9:13"},"scope":1562,"src":"413:76:13","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":1560,"nodeType":"Block","src":"523:98:13","statements":[{"id":1555,"nodeType":"UncheckedBlock","src":"533:49:13","statements":[{"expression":{"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1549,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"557:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1550,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"563:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3131","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"569:2:13","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"563:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"557:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1554,"nodeType":"ExpressionStatement","src":"557:14:13"}]},{"eventCall":{"arguments":[{"id":1557,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"610:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1556,"name":"ValueChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"597:12:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"597:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1559,"nodeType":"EmitStatement","src":"592:22:13"}]},"functionSelector":"d09de08a","id":1561,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"504:9:13","nodeType":"FunctionDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[],"src":"513:2:13"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[],"src":"523:0:13"},"scope":1562,"src":"495:126:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1563,"src":"96:527:13","usedErrors":[]}],"src":"71:552:13"},"id":13},"contracts/Proxy/BoxProxyAdmin.sol":{"ast":{"absolutePath":"contracts/Proxy/BoxProxyAdmin.sol","exportedSymbols":{"Address":[1335],"BoxProxyAdmin":[1576],"Context":[1357],"ERC1967Proxy":[180],"ERC1967Upgrade":[484],"IBeacon":[546],"IERC1822Proxiable":[143],"IERC1967":[133],"ITransparentUpgradeableProxy":[716],"Ownable":[112],"Proxy":[536],"ProxyAdmin":[682],"StorageSlot":[1467],"TransparentUpgradeableProxy":[1005]},"id":1577,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1564,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:14"},{"absolutePath":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol","file":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol","id":1565,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1577,"sourceUnit":683,"src":"57:66:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1566,"name":"ProxyAdmin","nodeType":"IdentifierPath","referencedDeclaration":682,"src":"150:10:14"},"id":1567,"nodeType":"InheritanceSpecifier","src":"150:10:14"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1576,"linearizedBaseContracts":[1576,682,112,1357],"name":"BoxProxyAdmin","nameLocation":"133:13:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":1574,"nodeType":"Block","src":"213:16:14","statements":[]},"id":1575,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":1572,"kind":"baseConstructorSpecifier","modifierName":{"id":1571,"name":"ProxyAdmin","nodeType":"IdentifierPath","referencedDeclaration":682,"src":"200:10:14"},"nodeType":"ModifierInvocation","src":"200:12:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1575,"src":"179:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1568,"name":"address","nodeType":"ElementaryTypeName","src":"179:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"178:21:14"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[],"src":"213:0:14"},"scope":1576,"src":"167:62:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1577,"src":"124:107:14","usedErrors":[]}],"src":"32:199:14"},"id":14}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ERC1967Proxy":{"abi":[{"inputs":[{"internalType":"address","name":"_logic","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.","kind":"dev","methods":{"constructor":{"details":"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_167":{"entryPoint":null,"id":167,"parameterSlots":2,"returnSlots":0},"@_revert_1334":{"entryPoint":822,"id":1334,"parameterSlots":2,"returnSlots":0},"@_setImplementation_234":{"entryPoint":277,"id":234,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCall_279":{"entryPoint":69,"id":279,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_249":{"entryPoint":136,"id":249,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1222":{"entryPoint":223,"id":1222,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1251":{"entryPoint":491,"id":1251,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1389":{"entryPoint":672,"id":1389,"parameterSlots":1,"returnSlots":1},"@isContract_1023":{"entryPoint":637,"id":1023,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_1290":{"entryPoint":682,"id":1290,"parameterSlots":4,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":905,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":980,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":1003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory":{"entryPoint":1054,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1156,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":1211,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack":{"entryPoint":1276,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":1315,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1354,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1379,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1415,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1449,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1483,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1514,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1524,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1578,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1589,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1600,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1611,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1628,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1648,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1680,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1734,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":1788,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1835,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1840,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1845,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1850,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1855,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65":{"entryPoint":1872,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":1951,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1992,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7810:15","statements":[{"body":{"nodeType":"YulBlock","src":"101:325:15","statements":[{"nodeType":"YulAssignment","src":"111:74:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"177:6:15"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"136:40:15"},"nodeType":"YulFunctionCall","src":"136:48:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"120:15:15"},"nodeType":"YulFunctionCall","src":"120:65:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"111:5:15"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"201:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"208:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"194:6:15"},"nodeType":"YulFunctionCall","src":"194:21:15"},"nodeType":"YulExpressionStatement","src":"194:21:15"},{"nodeType":"YulVariableDeclaration","src":"224:27:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"239:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:15"},"nodeType":"YulFunctionCall","src":"235:16:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"228:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"289:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"291:77:15"},"nodeType":"YulFunctionCall","src":"291:79:15"},"nodeType":"YulExpressionStatement","src":"291:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"270:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"275:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"266:3:15"},"nodeType":"YulFunctionCall","src":"266:16:15"},{"name":"end","nodeType":"YulIdentifier","src":"284:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"263:2:15"},"nodeType":"YulFunctionCall","src":"263:25:15"},"nodeType":"YulIf","src":"260:112:15"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"403:3:15"},{"name":"dst","nodeType":"YulIdentifier","src":"408:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"413:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"381:21:15"},"nodeType":"YulFunctionCall","src":"381:39:15"},"nodeType":"YulExpressionStatement","src":"381:39:15"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"74:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"79:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"87:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"95:5:15","type":""}],"src":"7:419:15"},{"body":{"nodeType":"YulBlock","src":"495:80:15","statements":[{"nodeType":"YulAssignment","src":"505:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"520:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"514:5:15"},"nodeType":"YulFunctionCall","src":"514:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"505:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"563:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"536:26:15"},"nodeType":"YulFunctionCall","src":"536:33:15"},"nodeType":"YulExpressionStatement","src":"536:33:15"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"473:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"481:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"489:5:15","type":""}],"src":"432:143:15"},{"body":{"nodeType":"YulBlock","src":"666:281:15","statements":[{"body":{"nodeType":"YulBlock","src":"715:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"717:77:15"},"nodeType":"YulFunctionCall","src":"717:79:15"},"nodeType":"YulExpressionStatement","src":"717:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"694:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"702:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"690:3:15"},"nodeType":"YulFunctionCall","src":"690:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"709:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"686:3:15"},"nodeType":"YulFunctionCall","src":"686:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"679:6:15"},"nodeType":"YulFunctionCall","src":"679:35:15"},"nodeType":"YulIf","src":"676:122:15"},{"nodeType":"YulVariableDeclaration","src":"807:27:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"827:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"821:5:15"},"nodeType":"YulFunctionCall","src":"821:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"811:6:15","type":""}]},{"nodeType":"YulAssignment","src":"843:98:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"914:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"922:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"910:3:15"},"nodeType":"YulFunctionCall","src":"910:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"929:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"937:3:15"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"852:57:15"},"nodeType":"YulFunctionCall","src":"852:89:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"843:5:15"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"660:5:15","type":""}],"src":"594:353:15"},{"body":{"nodeType":"YulBlock","src":"1056:575:15","statements":[{"body":{"nodeType":"YulBlock","src":"1102:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1104:77:15"},"nodeType":"YulFunctionCall","src":"1104:79:15"},"nodeType":"YulExpressionStatement","src":"1104:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1077:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1086:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1073:3:15"},"nodeType":"YulFunctionCall","src":"1073:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1098:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1069:3:15"},"nodeType":"YulFunctionCall","src":"1069:32:15"},"nodeType":"YulIf","src":"1066:119:15"},{"nodeType":"YulBlock","src":"1195:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1210:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1224:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1214:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1239:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1285:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1296:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1281:3:15"},"nodeType":"YulFunctionCall","src":"1281:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1305:7:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1249:31:15"},"nodeType":"YulFunctionCall","src":"1249:64:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1239:6:15"}]}]},{"nodeType":"YulBlock","src":"1333:291:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1348:39:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1372:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1383:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1368:3:15"},"nodeType":"YulFunctionCall","src":"1368:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1362:5:15"},"nodeType":"YulFunctionCall","src":"1362:25:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1352:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1434:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1436:77:15"},"nodeType":"YulFunctionCall","src":"1436:79:15"},"nodeType":"YulExpressionStatement","src":"1436:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1406:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1414:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1403:2:15"},"nodeType":"YulFunctionCall","src":"1403:30:15"},"nodeType":"YulIf","src":"1400:117:15"},{"nodeType":"YulAssignment","src":"1531:83:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1586:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1597:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:15"},"nodeType":"YulFunctionCall","src":"1582:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1606:7:15"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1541:40:15"},"nodeType":"YulFunctionCall","src":"1541:73:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1531:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1018:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1029:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1041:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1049:6:15","type":""}],"src":"953:678:15"},{"body":{"nodeType":"YulBlock","src":"1745:265:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1755:52:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1801:5:15"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1769:31:15"},"nodeType":"YulFunctionCall","src":"1769:38:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1759:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1816:95:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1899:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"1904:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"1823:75:15"},"nodeType":"YulFunctionCall","src":"1823:88:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1816:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1946:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1953:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1942:3:15"},"nodeType":"YulFunctionCall","src":"1942:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"1960:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"1965:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1920:21:15"},"nodeType":"YulFunctionCall","src":"1920:52:15"},"nodeType":"YulExpressionStatement","src":"1920:52:15"},{"nodeType":"YulAssignment","src":"1981:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1992:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"1997:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1988:3:15"},"nodeType":"YulFunctionCall","src":"1988:16:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1981:3:15"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1726:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1733:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1741:3:15","type":""}],"src":"1637:373:15"},{"body":{"nodeType":"YulBlock","src":"2108:272:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2118:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2132:32:15"},"nodeType":"YulFunctionCall","src":"2132:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2122:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2180:78:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2246:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2251:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2187:58:15"},"nodeType":"YulFunctionCall","src":"2187:71:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2180:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2293:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2300:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:15"},"nodeType":"YulFunctionCall","src":"2289:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"2307:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2312:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2267:21:15"},"nodeType":"YulFunctionCall","src":"2267:52:15"},"nodeType":"YulExpressionStatement","src":"2267:52:15"},{"nodeType":"YulAssignment","src":"2328:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2339:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2366:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2344:21:15"},"nodeType":"YulFunctionCall","src":"2344:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2335:3:15"},"nodeType":"YulFunctionCall","src":"2335:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2328:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2089:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2096:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2104:3:15","type":""}],"src":"2016:364:15"},{"body":{"nodeType":"YulBlock","src":"2532:220:15","statements":[{"nodeType":"YulAssignment","src":"2542:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2608:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2613:2:15","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2549:58:15"},"nodeType":"YulFunctionCall","src":"2549:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2714:3:15"}],"functionName":{"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nodeType":"YulIdentifier","src":"2625:88:15"},"nodeType":"YulFunctionCall","src":"2625:93:15"},"nodeType":"YulExpressionStatement","src":"2625:93:15"},{"nodeType":"YulAssignment","src":"2727:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2738:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2743:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2734:3:15"},"nodeType":"YulFunctionCall","src":"2734:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2727:3:15"}]}]},"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2520:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2528:3:15","type":""}],"src":"2386:366:15"},{"body":{"nodeType":"YulBlock","src":"2904:220:15","statements":[{"nodeType":"YulAssignment","src":"2914:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2980:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2985:2:15","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2921:58:15"},"nodeType":"YulFunctionCall","src":"2921:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2914:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3086:3:15"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"2997:88:15"},"nodeType":"YulFunctionCall","src":"2997:93:15"},"nodeType":"YulExpressionStatement","src":"2997:93:15"},{"nodeType":"YulAssignment","src":"3099:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3110:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3115:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3106:3:15"},"nodeType":"YulFunctionCall","src":"3106:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3099:3:15"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2892:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2900:3:15","type":""}],"src":"2758:366:15"},{"body":{"nodeType":"YulBlock","src":"3264:137:15","statements":[{"nodeType":"YulAssignment","src":"3275:100:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3362:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"3371:3:15"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"3282:79:15"},"nodeType":"YulFunctionCall","src":"3282:93:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3275:3:15"}]},{"nodeType":"YulAssignment","src":"3385:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"3392:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3385:3:15"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3243:3:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3249:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3260:3:15","type":""}],"src":"3130:271:15"},{"body":{"nodeType":"YulBlock","src":"3525:195:15","statements":[{"nodeType":"YulAssignment","src":"3535:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3547:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3558:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3543:3:15"},"nodeType":"YulFunctionCall","src":"3543:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3535:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3582:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3593:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3578:3:15"},"nodeType":"YulFunctionCall","src":"3578:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3601:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3607:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3597:3:15"},"nodeType":"YulFunctionCall","src":"3597:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3571:6:15"},"nodeType":"YulFunctionCall","src":"3571:47:15"},"nodeType":"YulExpressionStatement","src":"3571:47:15"},{"nodeType":"YulAssignment","src":"3627:86:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3699:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"3708:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3635:63:15"},"nodeType":"YulFunctionCall","src":"3635:78:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3627:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3497:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3509:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3520:4:15","type":""}],"src":"3407:313:15"},{"body":{"nodeType":"YulBlock","src":"3897:248:15","statements":[{"nodeType":"YulAssignment","src":"3907:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3919:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3930:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3915:3:15"},"nodeType":"YulFunctionCall","src":"3915:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3907:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3954:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3965:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3950:3:15"},"nodeType":"YulFunctionCall","src":"3950:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3973:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3979:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3969:3:15"},"nodeType":"YulFunctionCall","src":"3969:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3943:6:15"},"nodeType":"YulFunctionCall","src":"3943:47:15"},"nodeType":"YulExpressionStatement","src":"3943:47:15"},{"nodeType":"YulAssignment","src":"3999:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4133:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4007:124:15"},"nodeType":"YulFunctionCall","src":"4007:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3999:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3877:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3892:4:15","type":""}],"src":"3726:419:15"},{"body":{"nodeType":"YulBlock","src":"4322:248:15","statements":[{"nodeType":"YulAssignment","src":"4332:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4344:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4355:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4340:3:15"},"nodeType":"YulFunctionCall","src":"4340:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4332:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4379:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4390:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4375:3:15"},"nodeType":"YulFunctionCall","src":"4375:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4398:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4404:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4394:3:15"},"nodeType":"YulFunctionCall","src":"4394:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4368:6:15"},"nodeType":"YulFunctionCall","src":"4368:47:15"},"nodeType":"YulExpressionStatement","src":"4368:47:15"},{"nodeType":"YulAssignment","src":"4424:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4558:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4432:124:15"},"nodeType":"YulFunctionCall","src":"4432:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4424:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4302:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4317:4:15","type":""}],"src":"4151:419:15"},{"body":{"nodeType":"YulBlock","src":"4617:88:15","statements":[{"nodeType":"YulAssignment","src":"4627:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4637:18:15"},"nodeType":"YulFunctionCall","src":"4637:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4627:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4686:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"4694:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4666:19:15"},"nodeType":"YulFunctionCall","src":"4666:33:15"},"nodeType":"YulExpressionStatement","src":"4666:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4601:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4610:6:15","type":""}],"src":"4576:129:15"},{"body":{"nodeType":"YulBlock","src":"4751:35:15","statements":[{"nodeType":"YulAssignment","src":"4761:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4777:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4771:5:15"},"nodeType":"YulFunctionCall","src":"4771:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4761:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4744:6:15","type":""}],"src":"4711:75:15"},{"body":{"nodeType":"YulBlock","src":"4858:241:15","statements":[{"body":{"nodeType":"YulBlock","src":"4963:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4965:16:15"},"nodeType":"YulFunctionCall","src":"4965:18:15"},"nodeType":"YulExpressionStatement","src":"4965:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4935:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4943:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4932:2:15"},"nodeType":"YulFunctionCall","src":"4932:30:15"},"nodeType":"YulIf","src":"4929:56:15"},{"nodeType":"YulAssignment","src":"4995:37:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5025:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5003:21:15"},"nodeType":"YulFunctionCall","src":"5003:29:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4995:4:15"}]},{"nodeType":"YulAssignment","src":"5069:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5081:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"5087:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5077:3:15"},"nodeType":"YulFunctionCall","src":"5077:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5069:4:15"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4842:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4853:4:15","type":""}],"src":"4792:307:15"},{"body":{"nodeType":"YulBlock","src":"5163:40:15","statements":[{"nodeType":"YulAssignment","src":"5174:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5190:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5184:5:15"},"nodeType":"YulFunctionCall","src":"5184:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5174:6:15"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5146:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5156:6:15","type":""}],"src":"5105:98:15"},{"body":{"nodeType":"YulBlock","src":"5268:40:15","statements":[{"nodeType":"YulAssignment","src":"5279:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5295:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5289:5:15"},"nodeType":"YulFunctionCall","src":"5289:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5279:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5251:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5261:6:15","type":""}],"src":"5209:99:15"},{"body":{"nodeType":"YulBlock","src":"5427:34:15","statements":[{"nodeType":"YulAssignment","src":"5437:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"5452:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5437:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5399:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"5404:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5415:11:15","type":""}],"src":"5314:147:15"},{"body":{"nodeType":"YulBlock","src":"5563:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5580:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"5585:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5573:6:15"},"nodeType":"YulFunctionCall","src":"5573:19:15"},"nodeType":"YulExpressionStatement","src":"5573:19:15"},{"nodeType":"YulAssignment","src":"5601:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5620:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5625:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5616:3:15"},"nodeType":"YulFunctionCall","src":"5616:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5601:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5535:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"5540:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5551:11:15","type":""}],"src":"5467:169:15"},{"body":{"nodeType":"YulBlock","src":"5687:51:15","statements":[{"nodeType":"YulAssignment","src":"5697:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5726:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5708:17:15"},"nodeType":"YulFunctionCall","src":"5708:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5697:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5669:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5679:7:15","type":""}],"src":"5642:96:15"},{"body":{"nodeType":"YulBlock","src":"5789:81:15","statements":[{"nodeType":"YulAssignment","src":"5799:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5814:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"5821:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5810:3:15"},"nodeType":"YulFunctionCall","src":"5810:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5799:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5771:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5781:7:15","type":""}],"src":"5744:126:15"},{"body":{"nodeType":"YulBlock","src":"5925:258:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5935:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5944:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5939:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"6004:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6029:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"6034:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6025:3:15"},"nodeType":"YulFunctionCall","src":"6025:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6048:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"6053:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6044:3:15"},"nodeType":"YulFunctionCall","src":"6044:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6038:5:15"},"nodeType":"YulFunctionCall","src":"6038:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6018:6:15"},"nodeType":"YulFunctionCall","src":"6018:39:15"},"nodeType":"YulExpressionStatement","src":"6018:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5965:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"5968:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5962:2:15"},"nodeType":"YulFunctionCall","src":"5962:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5976:19:15","statements":[{"nodeType":"YulAssignment","src":"5978:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5987:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"5990:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5983:3:15"},"nodeType":"YulFunctionCall","src":"5983:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5978:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"5958:3:15","statements":[]},"src":"5954:113:15"},{"body":{"nodeType":"YulBlock","src":"6101:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6151:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"6156:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6147:3:15"},"nodeType":"YulFunctionCall","src":"6147:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"6165:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6140:6:15"},"nodeType":"YulFunctionCall","src":"6140:27:15"},"nodeType":"YulExpressionStatement","src":"6140:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6082:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"6085:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6079:2:15"},"nodeType":"YulFunctionCall","src":"6079:13:15"},"nodeType":"YulIf","src":"6076:101:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5907:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5912:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"5917:6:15","type":""}],"src":"5876:307:15"},{"body":{"nodeType":"YulBlock","src":"6232:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6242:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6264:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6294:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6272:21:15"},"nodeType":"YulFunctionCall","src":"6272:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6260:3:15"},"nodeType":"YulFunctionCall","src":"6260:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6246:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"6411:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6413:16:15"},"nodeType":"YulFunctionCall","src":"6413:18:15"},"nodeType":"YulExpressionStatement","src":"6413:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6354:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"6366:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6351:2:15"},"nodeType":"YulFunctionCall","src":"6351:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6390:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6402:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6387:2:15"},"nodeType":"YulFunctionCall","src":"6387:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6348:2:15"},"nodeType":"YulFunctionCall","src":"6348:62:15"},"nodeType":"YulIf","src":"6345:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6449:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6453:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6442:6:15"},"nodeType":"YulFunctionCall","src":"6442:22:15"},"nodeType":"YulExpressionStatement","src":"6442:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6218:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"6226:4:15","type":""}],"src":"6189:281:15"},{"body":{"nodeType":"YulBlock","src":"6504:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6521:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6524:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6514:6:15"},"nodeType":"YulFunctionCall","src":"6514:88:15"},"nodeType":"YulExpressionStatement","src":"6514:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6618:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6621:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6611:6:15"},"nodeType":"YulFunctionCall","src":"6611:15:15"},"nodeType":"YulExpressionStatement","src":"6611:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6642:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6645:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6635:6:15"},"nodeType":"YulFunctionCall","src":"6635:15:15"},"nodeType":"YulExpressionStatement","src":"6635:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6476:180:15"},{"body":{"nodeType":"YulBlock","src":"6751:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6768:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6771:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6761:6:15"},"nodeType":"YulFunctionCall","src":"6761:12:15"},"nodeType":"YulExpressionStatement","src":"6761:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6662:117:15"},{"body":{"nodeType":"YulBlock","src":"6874:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6891:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6894:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6884:6:15"},"nodeType":"YulFunctionCall","src":"6884:12:15"},"nodeType":"YulExpressionStatement","src":"6884:12:15"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"6785:117:15"},{"body":{"nodeType":"YulBlock","src":"6997:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7014:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7017:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7007:6:15"},"nodeType":"YulFunctionCall","src":"7007:12:15"},"nodeType":"YulExpressionStatement","src":"7007:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"6908:117:15"},{"body":{"nodeType":"YulBlock","src":"7120:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7137:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7140:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7130:6:15"},"nodeType":"YulFunctionCall","src":"7130:12:15"},"nodeType":"YulExpressionStatement","src":"7130:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"7031:117:15"},{"body":{"nodeType":"YulBlock","src":"7202:54:15","statements":[{"nodeType":"YulAssignment","src":"7212:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7230:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"7237:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7226:3:15"},"nodeType":"YulFunctionCall","src":"7226:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7246:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7242:3:15"},"nodeType":"YulFunctionCall","src":"7242:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7222:3:15"},"nodeType":"YulFunctionCall","src":"7222:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7212:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7185:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7195:6:15","type":""}],"src":"7154:102:15"},{"body":{"nodeType":"YulBlock","src":"7368:126:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7390:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"7398:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7386:3:15"},"nodeType":"YulFunctionCall","src":"7386:14:15"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"7402:34:15","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7379:6:15"},"nodeType":"YulFunctionCall","src":"7379:58:15"},"nodeType":"YulExpressionStatement","src":"7379:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7458:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"7466:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7454:3:15"},"nodeType":"YulFunctionCall","src":"7454:15:15"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"7471:15:15","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7447:6:15"},"nodeType":"YulFunctionCall","src":"7447:40:15"},"nodeType":"YulExpressionStatement","src":"7447:40:15"}]},"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7360:6:15","type":""}],"src":"7262:232:15"},{"body":{"nodeType":"YulBlock","src":"7606:73:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7628:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"7636:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7624:3:15"},"nodeType":"YulFunctionCall","src":"7624:14:15"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"7640:31:15","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7617:6:15"},"nodeType":"YulFunctionCall","src":"7617:55:15"},"nodeType":"YulExpressionStatement","src":"7617:55:15"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7598:6:15","type":""}],"src":"7500:179:15"},{"body":{"nodeType":"YulBlock","src":"7728:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"7785:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7794:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7797:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7787:6:15"},"nodeType":"YulFunctionCall","src":"7787:12:15"},"nodeType":"YulExpressionStatement","src":"7787:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7751:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7776:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7758:17:15"},"nodeType":"YulFunctionCall","src":"7758:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7748:2:15"},"nodeType":"YulFunctionCall","src":"7748:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7741:6:15"},"nodeType":"YulFunctionCall","src":"7741:43:15"},"nodeType":"YulIf","src":"7738:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7721:5:15","type":""}],"src":"7685:122:15"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new implementation is n\")\n\n        mstore(add(memPtr, 32), \"ot a contract\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405260405162000c6638038062000c6683398181016040528101906200002991906200041e565b6200003d828260006200004560201b60201c565b5050620007e2565b62000056836200008860201b60201c565b600082511180620000645750805b156200008357620000818383620000df60201b620000371760201c565b505b505050565b62000099816200011560201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606200010d838360405180606001604052806027815260200162000c3f60279139620001eb60201b60201c565b905092915050565b6200012b816200027d60201b620000641760201c565b6200016d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001649062000587565b60405180910390fd5b80620001a77f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b620002a060201b620000871760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516200021791906200054a565b600060405180830381855af49150503d806000811462000254576040519150601f19603f3d011682016040523d82523d6000602084013e62000259565b606091505b50915091506200027286838387620002aa60201b60201c565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b606083156200031b576000835114156200031257620002cf856200027d60201b60201c565b62000311576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200030890620005a9565b60405180910390fd5b5b8290506200032e565b6200032d83836200033660201b60201c565b5b949350505050565b6000825111156200034a5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000380919062000563565b60405180910390fd5b6000620003a06200039a84620005f4565b620005cb565b905082815260208101848484011115620003bf57620003be62000730565b5b620003cc84828562000690565b509392505050565b600081519050620003e581620007c8565b92915050565b600082601f8301126200040357620004026200072b565b5b81516200041584826020860162000389565b91505092915050565b600080604083850312156200043857620004376200073a565b5b60006200044885828601620003d4565b925050602083015167ffffffffffffffff8111156200046c576200046b62000735565b5b6200047a85828601620003eb565b9150509250929050565b600062000491826200062a565b6200049d818562000640565b9350620004af81856020860162000690565b80840191505092915050565b6000620004c88262000635565b620004d481856200064b565b9350620004e681856020860162000690565b620004f1816200073f565b840191505092915050565b60006200050b602d836200064b565b9150620005188262000750565b604082019050919050565b600062000532601d836200064b565b91506200053f826200079f565b602082019050919050565b600062000558828462000484565b915081905092915050565b600060208201905081810360008301526200057f8184620004bb565b905092915050565b60006020820190508181036000830152620005a281620004fc565b9050919050565b60006020820190508181036000830152620005c48162000523565b9050919050565b6000620005d7620005ea565b9050620005e58282620006c6565b919050565b6000604051905090565b600067ffffffffffffffff821115620006125762000611620006fc565b5b6200061d826200073f565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000620006698262000670565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620006b057808201518184015260208101905062000693565b83811115620006c0576000848401525b50505050565b620006d1826200073f565b810181811067ffffffffffffffff82111715620006f357620006f2620006fc565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b620007d3816200065c565b8114620007df57600080fd5b50565b61044d80620007f26000396000f3fe6080604052366100135761001161001d565b005b61001b61001d565b005b610025610091565b610035610030610093565b6100a2565b565b606061005c83836040518060600160405280602781526020016103f1602791396100c8565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b565b600061009d61014e565b905090565b3660008037600080366000845af43d6000803e80600081146100c3573d6000f35b3d6000fd5b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516100f291906102f8565b600060405180830381855af49150503d806000811461012d576040519150601f19603f3d011682016040523d82523d6000602084013e610132565b606091505b5091509150610143868383876101a5565b925050509392505050565b600061017c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610087565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060831561020857600083511415610200576101c085610064565b6101ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f690610331565b60405180910390fd5b5b829050610213565b610212838361021b565b5b949350505050565b60008251111561022e5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610262919061030f565b60405180910390fd5b600061027682610351565b6102808185610367565b9350610290818560208601610383565b80840191505092915050565b60006102a78261035c565b6102b18185610372565b93506102c1818560208601610383565b6102ca816103b6565b840191505092915050565b60006102e2601d83610372565b91506102ed826103c7565b602082019050919050565b6000610304828461026b565b915081905092915050565b60006020820190508181036000830152610329818461029c565b905092915050565b6000602082019050818103600083015261034a816102d5565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60005b838110156103a1578082015181840152602081019050610386565b838111156103b0576000848401525b50505050565b6000601f19601f8301169050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060008201525056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e2653fe2771b1478bb842c06503e3fc32a3655bdd2a3ad9a3bf6b709497fb90064736f6c63430008070033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0xC66 CODESIZE SUB DUP1 PUSH3 0xC66 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x29 SWAP2 SWAP1 PUSH3 0x41E JUMP JUMPDEST PUSH3 0x3D DUP3 DUP3 PUSH1 0x0 PUSH3 0x45 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x7E2 JUMP JUMPDEST PUSH3 0x56 DUP4 PUSH3 0x88 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH3 0x64 JUMPI POP DUP1 JUMPDEST ISZERO PUSH3 0x83 JUMPI PUSH3 0x81 DUP4 DUP4 PUSH3 0xDF PUSH1 0x20 SHL PUSH3 0x37 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x99 DUP2 PUSH3 0x115 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x10D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xC3F PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x1EB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x12B DUP2 PUSH3 0x27D PUSH1 0x20 SHL PUSH3 0x64 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x16D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x164 SWAP1 PUSH3 0x587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH3 0x1A7 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH3 0x2A0 PUSH1 0x20 SHL PUSH3 0x87 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH3 0x217 SWAP2 SWAP1 PUSH3 0x54A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x254 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x259 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH3 0x272 DUP7 DUP4 DUP4 DUP8 PUSH3 0x2AA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x31B JUMPI PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH3 0x312 JUMPI PUSH3 0x2CF DUP6 PUSH3 0x27D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x311 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x308 SWAP1 PUSH3 0x5A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH3 0x32E JUMP JUMPDEST PUSH3 0x32D DUP4 DUP4 PUSH3 0x336 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH3 0x34A JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x380 SWAP2 SWAP1 PUSH3 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x3A0 PUSH3 0x39A DUP5 PUSH3 0x5F4 JUMP JUMPDEST PUSH3 0x5CB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x3BF JUMPI PUSH3 0x3BE PUSH3 0x730 JUMP JUMPDEST JUMPDEST PUSH3 0x3CC DUP5 DUP3 DUP6 PUSH3 0x690 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3E5 DUP2 PUSH3 0x7C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x403 JUMPI PUSH3 0x402 PUSH3 0x72B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x415 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x389 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x438 JUMPI PUSH3 0x437 PUSH3 0x73A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x448 DUP6 DUP3 DUP7 ADD PUSH3 0x3D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x46C JUMPI PUSH3 0x46B PUSH3 0x735 JUMP JUMPDEST JUMPDEST PUSH3 0x47A DUP6 DUP3 DUP7 ADD PUSH3 0x3EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x491 DUP3 PUSH3 0x62A JUMP JUMPDEST PUSH3 0x49D DUP2 DUP6 PUSH3 0x640 JUMP JUMPDEST SWAP4 POP PUSH3 0x4AF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x690 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4C8 DUP3 PUSH3 0x635 JUMP JUMPDEST PUSH3 0x4D4 DUP2 DUP6 PUSH3 0x64B JUMP JUMPDEST SWAP4 POP PUSH3 0x4E6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x690 JUMP JUMPDEST PUSH3 0x4F1 DUP2 PUSH3 0x73F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x50B PUSH1 0x2D DUP4 PUSH3 0x64B JUMP JUMPDEST SWAP2 POP PUSH3 0x518 DUP3 PUSH3 0x750 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x532 PUSH1 0x1D DUP4 PUSH3 0x64B JUMP JUMPDEST SWAP2 POP PUSH3 0x53F DUP3 PUSH3 0x79F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x558 DUP3 DUP5 PUSH3 0x484 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x57F DUP2 DUP5 PUSH3 0x4BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x5A2 DUP2 PUSH3 0x4FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x5C4 DUP2 PUSH3 0x523 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5D7 PUSH3 0x5EA JUMP JUMPDEST SWAP1 POP PUSH3 0x5E5 DUP3 DUP3 PUSH3 0x6C6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x612 JUMPI PUSH3 0x611 PUSH3 0x6FC JUMP JUMPDEST JUMPDEST PUSH3 0x61D DUP3 PUSH3 0x73F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x669 DUP3 PUSH3 0x670 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x6B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x693 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x6C0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH3 0x6D1 DUP3 PUSH3 0x73F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x6F3 JUMPI PUSH3 0x6F2 PUSH3 0x6FC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH3 0x7D3 DUP2 PUSH3 0x65C JUMP JUMPDEST DUP2 EQ PUSH3 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x44D DUP1 PUSH3 0x7F2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25 PUSH2 0x91 JUMP JUMPDEST PUSH2 0x35 PUSH2 0x30 PUSH2 0x93 JUMP JUMPDEST PUSH2 0xA2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F1 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D PUSH2 0x14E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC3 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x132 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x143 DUP7 DUP4 DUP4 DUP8 PUSH2 0x1A5 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x87 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x200 JUMPI PUSH2 0x1C0 DUP6 PUSH2 0x64 JUMP JUMPDEST PUSH2 0x1FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6 SWAP1 PUSH2 0x331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x213 JUMP JUMPDEST PUSH2 0x212 DUP4 DUP4 PUSH2 0x21B JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x22E JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x276 DUP3 PUSH2 0x351 JUMP JUMPDEST PUSH2 0x280 DUP2 DUP6 PUSH2 0x367 JUMP JUMPDEST SWAP4 POP PUSH2 0x290 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x383 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A7 DUP3 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x2B1 DUP2 DUP6 PUSH2 0x372 JUMP JUMPDEST SWAP4 POP PUSH2 0x2C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x383 JUMP JUMPDEST PUSH2 0x2CA DUP2 PUSH2 0x3B6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2 PUSH1 0x1D DUP4 PUSH2 0x372 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ED DUP3 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x304 DUP3 DUP5 PUSH2 0x26B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x329 DUP2 DUP5 PUSH2 0x29C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34A DUP2 PUSH2 0x2D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x386 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220E2653F 0xE2 PUSH24 0x1B1478BB842C06503E3FC32A3655BDD2A3AD9A3BF6B70949 PUSH32 0xB90064736F6C63430008070033416464726573733A206C6F772D6C6576656C20 PUSH5 0x656C656761 PUSH21 0x652063616C6C206661696C65640000000000000000 ","sourceMap":"567:723:3:-:0;;;958:112;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1024:39;1042:6;1050:5;1057;1024:17;;;:39;;:::i;:::-;958:112;;567:723;;2057:265:4;2165:29;2176:17;2165:10;;;:29;;:::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;;;;;:53;;:::i;:::-;;2204:112;2057:265;;;:::o;1771:152::-;1837:37;1856:17;1837:18;;;:37;;:::i;:::-;1898:17;1889:27;;;;;;;;;;;;1771:152;:::o;6674:198:9:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;;;:77;;:::i;:::-;6781:84;;6674:198;;;;:::o;1406:259:4:-;1487:37;1506:17;1487:18;;;;;:37;;:::i;:::-;1479:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1641:17;1584:48;1030:66;1611:20;;1584:26;;;;;:48;;:::i;:::-;:54;;;:74;;;;;;;;;;;;;;;;;;1406:259;:::o;7058:325:9:-;7199:12;7224;7238:23;7265:6;:19;;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;;;:69;;:::i;:::-;7300:76;;;;7058:325;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;1859:190:11:-;1920:21;2029:4;2019:14;;1859:190;;;:::o;7671:628:9:-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;;8121:18;8132:6;8121:10;;;:18;;:::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;;;:33;;:::i;:::-;7671:628;;;;;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:419:15;95:5;120:65;136:48;177:6;136:48;:::i;:::-;120:65;:::i;:::-;111:74;;208:6;201:5;194:21;246:4;239:5;235:16;284:3;275:6;270:3;266:16;263:25;260:112;;;291:79;;:::i;:::-;260:112;381:39;413:6;408:3;403;381:39;:::i;:::-;101:325;7:419;;;;;:::o;432:143::-;489:5;520:6;514:13;505:22;;536:33;563:5;536:33;:::i;:::-;432:143;;;;:::o;594:353::-;660:5;709:3;702:4;694:6;690:17;686:27;676:122;;717:79;;:::i;:::-;676:122;827:6;821:13;852:89;937:3;929:6;922:4;914:6;910:17;852:89;:::i;:::-;843:98;;666:281;594:353;;;;:::o;953:678::-;1041:6;1049;1098:2;1086:9;1077:7;1073:23;1069:32;1066:119;;;1104:79;;:::i;:::-;1066:119;1224:1;1249:64;1305:7;1296:6;1285:9;1281:22;1249:64;:::i;:::-;1239:74;;1195:128;1383:2;1372:9;1368:18;1362:25;1414:18;1406:6;1403:30;1400:117;;;1436:79;;:::i;:::-;1400:117;1541:73;1606:7;1597:6;1586:9;1582:22;1541:73;:::i;:::-;1531:83;;1333:291;953:678;;;;;:::o;1637:373::-;1741:3;1769:38;1801:5;1769:38;:::i;:::-;1823:88;1904:6;1899:3;1823:88;:::i;:::-;1816:95;;1920:52;1965:6;1960:3;1953:4;1946:5;1942:16;1920:52;:::i;:::-;1997:6;1992:3;1988:16;1981:23;;1745:265;1637:373;;;;:::o;2016:364::-;2104:3;2132:39;2165:5;2132:39;:::i;:::-;2187:71;2251:6;2246:3;2187:71;:::i;:::-;2180:78;;2267:52;2312:6;2307:3;2300:4;2293:5;2289:16;2267:52;:::i;:::-;2344:29;2366:6;2344:29;:::i;:::-;2339:3;2335:39;2328:46;;2108:272;2016:364;;;;:::o;2386:366::-;2528:3;2549:67;2613:2;2608:3;2549:67;:::i;:::-;2542:74;;2625:93;2714:3;2625:93;:::i;:::-;2743:2;2738:3;2734:12;2727:19;;2386:366;;;:::o;2758:::-;2900:3;2921:67;2985:2;2980:3;2921:67;:::i;:::-;2914:74;;2997:93;3086:3;2997:93;:::i;:::-;3115:2;3110:3;3106:12;3099:19;;2758:366;;;:::o;3130:271::-;3260:3;3282:93;3371:3;3362:6;3282:93;:::i;:::-;3275:100;;3392:3;3385:10;;3130:271;;;;:::o;3407:313::-;3520:4;3558:2;3547:9;3543:18;3535:26;;3607:9;3601:4;3597:20;3593:1;3582:9;3578:17;3571:47;3635:78;3708:4;3699:6;3635:78;:::i;:::-;3627:86;;3407:313;;;;:::o;3726:419::-;3892:4;3930:2;3919:9;3915:18;3907:26;;3979:9;3973:4;3969:20;3965:1;3954:9;3950:17;3943:47;4007:131;4133:4;4007:131;:::i;:::-;3999:139;;3726:419;;;:::o;4151:::-;4317:4;4355:2;4344:9;4340:18;4332:26;;4404:9;4398:4;4394:20;4390:1;4379:9;4375:17;4368:47;4432:131;4558:4;4432:131;:::i;:::-;4424:139;;4151:419;;;:::o;4576:129::-;4610:6;4637:20;;:::i;:::-;4627:30;;4666:33;4694:4;4686:6;4666:33;:::i;:::-;4576:129;;;:::o;4711:75::-;4744:6;4777:2;4771:9;4761:19;;4711:75;:::o;4792:307::-;4853:4;4943:18;4935:6;4932:30;4929:56;;;4965:18;;:::i;:::-;4929:56;5003:29;5025:6;5003:29;:::i;:::-;4995:37;;5087:4;5081;5077:15;5069:23;;4792:307;;;:::o;5105:98::-;5156:6;5190:5;5184:12;5174:22;;5105:98;;;:::o;5209:99::-;5261:6;5295:5;5289:12;5279:22;;5209:99;;;:::o;5314:147::-;5415:11;5452:3;5437:18;;5314:147;;;;:::o;5467:169::-;5551:11;5585:6;5580:3;5573:19;5625:4;5620:3;5616:14;5601:29;;5467:169;;;;:::o;5642:96::-;5679:7;5708:24;5726:5;5708:24;:::i;:::-;5697:35;;5642:96;;;:::o;5744:126::-;5781:7;5821:42;5814:5;5810:54;5799:65;;5744:126;;;:::o;5876:307::-;5944:1;5954:113;5968:6;5965:1;5962:13;5954:113;;;6053:1;6048:3;6044:11;6038:18;6034:1;6029:3;6025:11;6018:39;5990:2;5987:1;5983:10;5978:15;;5954:113;;;6085:6;6082:1;6079:13;6076:101;;;6165:1;6156:6;6151:3;6147:16;6140:27;6076:101;5925:258;5876:307;;;:::o;6189:281::-;6272:27;6294:4;6272:27;:::i;:::-;6264:6;6260:40;6402:6;6390:10;6387:22;6366:18;6354:10;6351:34;6348:62;6345:88;;;6413:18;;:::i;:::-;6345:88;6453:10;6449:2;6442:22;6232:238;6189:281;;:::o;6476:180::-;6524:77;6521:1;6514:88;6621:4;6618:1;6611:15;6645:4;6642:1;6635:15;6662:117;6771:1;6768;6761:12;6785:117;6894:1;6891;6884:12;6908:117;7017:1;7014;7007:12;7031:117;7140:1;7137;7130:12;7154:102;7195:6;7246:2;7242:7;7237:2;7230:5;7226:14;7222:28;7212:38;;7154:102;;;:::o;7262:232::-;7402:34;7398:1;7390:6;7386:14;7379:58;7471:15;7466:2;7458:6;7454:15;7447:40;7262:232;:::o;7500:179::-;7640:31;7636:1;7628:6;7624:14;7617:55;7500:179;:::o;7685:122::-;7758:24;7776:5;7758:24;:::i;:::-;7751:5;7748:35;7738:63;;7797:1;7794;7787:12;7738:63;7685:122;:::o;567:723:3:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_522":{"entryPoint":null,"id":522,"parameterSlots":0,"returnSlots":0},"@_530":{"entryPoint":null,"id":530,"parameterSlots":0,"returnSlots":0},"@_beforeFallback_535":{"entryPoint":145,"id":535,"parameterSlots":0,"returnSlots":0},"@_delegate_495":{"entryPoint":162,"id":495,"parameterSlots":1,"returnSlots":0},"@_fallback_514":{"entryPoint":29,"id":514,"parameterSlots":0,"returnSlots":0},"@_getImplementation_210":{"entryPoint":334,"id":210,"parameterSlots":0,"returnSlots":1},"@_implementation_179":{"entryPoint":147,"id":179,"parameterSlots":0,"returnSlots":1},"@_revert_1334":{"entryPoint":539,"id":1334,"parameterSlots":2,"returnSlots":0},"@functionDelegateCall_1222":{"entryPoint":55,"id":1222,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1251":{"entryPoint":200,"id":1251,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1389":{"entryPoint":135,"id":1389,"parameterSlots":1,"returnSlots":1},"@isContract_1023":{"entryPoint":100,"id":1023,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_1290":{"entryPoint":421,"id":1290,"parameterSlots":4,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":619,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":668,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":725,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":817,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":849,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":860,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":871,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":882,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":899,"id":null,"parameterSlots":3,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":950,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":967,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3289:15","statements":[{"body":{"nodeType":"YulBlock","src":"115:265:15","statements":[{"nodeType":"YulVariableDeclaration","src":"125:52:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"171:5:15"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"139:31:15"},"nodeType":"YulFunctionCall","src":"139:38:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"129:6:15","type":""}]},{"nodeType":"YulAssignment","src":"186:95:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"269:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"274:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"193:75:15"},"nodeType":"YulFunctionCall","src":"193:88:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"186:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"316:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"323:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"312:3:15"},"nodeType":"YulFunctionCall","src":"312:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"330:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"335:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"290:21:15"},"nodeType":"YulFunctionCall","src":"290:52:15"},"nodeType":"YulExpressionStatement","src":"290:52:15"},{"nodeType":"YulAssignment","src":"351:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"362:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"367:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"358:3:15"},"nodeType":"YulFunctionCall","src":"358:16:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"351:3:15"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"96:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"103:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"111:3:15","type":""}],"src":"7:373:15"},{"body":{"nodeType":"YulBlock","src":"478:272:15","statements":[{"nodeType":"YulVariableDeclaration","src":"488:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"535:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"502:32:15"},"nodeType":"YulFunctionCall","src":"502:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"492:6:15","type":""}]},{"nodeType":"YulAssignment","src":"550:78:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"616:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"621:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"557:58:15"},"nodeType":"YulFunctionCall","src":"557:71:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"550:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"663:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"670:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"659:3:15"},"nodeType":"YulFunctionCall","src":"659:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"677:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"682:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"637:21:15"},"nodeType":"YulFunctionCall","src":"637:52:15"},"nodeType":"YulExpressionStatement","src":"637:52:15"},{"nodeType":"YulAssignment","src":"698:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"709:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"736:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"714:21:15"},"nodeType":"YulFunctionCall","src":"714:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"705:3:15"},"nodeType":"YulFunctionCall","src":"705:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"698:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"459:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"466:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"474:3:15","type":""}],"src":"386:364:15"},{"body":{"nodeType":"YulBlock","src":"902:220:15","statements":[{"nodeType":"YulAssignment","src":"912:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"978:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"983:2:15","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"919:58:15"},"nodeType":"YulFunctionCall","src":"919:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"912:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1084:3:15"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"995:88:15"},"nodeType":"YulFunctionCall","src":"995:93:15"},"nodeType":"YulExpressionStatement","src":"995:93:15"},{"nodeType":"YulAssignment","src":"1097:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1108:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"1113:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1104:3:15"},"nodeType":"YulFunctionCall","src":"1104:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1097:3:15"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"890:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"898:3:15","type":""}],"src":"756:366:15"},{"body":{"nodeType":"YulBlock","src":"1262:137:15","statements":[{"nodeType":"YulAssignment","src":"1273:100:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"1369:3:15"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"1280:79:15"},"nodeType":"YulFunctionCall","src":"1280:93:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1273:3:15"}]},{"nodeType":"YulAssignment","src":"1383:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"1390:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1383:3:15"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1241:3:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1247:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1258:3:15","type":""}],"src":"1128:271:15"},{"body":{"nodeType":"YulBlock","src":"1523:195:15","statements":[{"nodeType":"YulAssignment","src":"1533:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1545:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1556:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1541:3:15"},"nodeType":"YulFunctionCall","src":"1541:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1533:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1580:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1591:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1576:3:15"},"nodeType":"YulFunctionCall","src":"1576:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1599:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1605:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1595:3:15"},"nodeType":"YulFunctionCall","src":"1595:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1569:6:15"},"nodeType":"YulFunctionCall","src":"1569:47:15"},"nodeType":"YulExpressionStatement","src":"1569:47:15"},{"nodeType":"YulAssignment","src":"1625:86:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1697:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"1706:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1633:63:15"},"nodeType":"YulFunctionCall","src":"1633:78:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1625:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1495:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1507:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1518:4:15","type":""}],"src":"1405:313:15"},{"body":{"nodeType":"YulBlock","src":"1895:248:15","statements":[{"nodeType":"YulAssignment","src":"1905:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1917:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1928:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1913:3:15"},"nodeType":"YulFunctionCall","src":"1913:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1905:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1952:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1963:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1948:3:15"},"nodeType":"YulFunctionCall","src":"1948:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1971:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1977:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1967:3:15"},"nodeType":"YulFunctionCall","src":"1967:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1941:6:15"},"nodeType":"YulFunctionCall","src":"1941:47:15"},"nodeType":"YulExpressionStatement","src":"1941:47:15"},{"nodeType":"YulAssignment","src":"1997:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2131:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2005:124:15"},"nodeType":"YulFunctionCall","src":"2005:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1997:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1875:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1890:4:15","type":""}],"src":"1724:419:15"},{"body":{"nodeType":"YulBlock","src":"2207:40:15","statements":[{"nodeType":"YulAssignment","src":"2218:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2234:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2228:5:15"},"nodeType":"YulFunctionCall","src":"2228:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2218:6:15"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2190:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2200:6:15","type":""}],"src":"2149:98:15"},{"body":{"nodeType":"YulBlock","src":"2312:40:15","statements":[{"nodeType":"YulAssignment","src":"2323:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2339:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2333:5:15"},"nodeType":"YulFunctionCall","src":"2333:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2323:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2295:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2305:6:15","type":""}],"src":"2253:99:15"},{"body":{"nodeType":"YulBlock","src":"2471:34:15","statements":[{"nodeType":"YulAssignment","src":"2481:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"2496:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2481:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2443:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"2448:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2459:11:15","type":""}],"src":"2358:147:15"},{"body":{"nodeType":"YulBlock","src":"2607:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2624:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2629:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2617:6:15"},"nodeType":"YulFunctionCall","src":"2617:19:15"},"nodeType":"YulExpressionStatement","src":"2617:19:15"},{"nodeType":"YulAssignment","src":"2645:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2664:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2669:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2660:3:15"},"nodeType":"YulFunctionCall","src":"2660:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2645:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2579:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"2584:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2595:11:15","type":""}],"src":"2511:169:15"},{"body":{"nodeType":"YulBlock","src":"2735:258:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2745:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2754:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2749:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2814:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2839:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"2844:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2835:3:15"},"nodeType":"YulFunctionCall","src":"2835:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2858:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"2863:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2854:3:15"},"nodeType":"YulFunctionCall","src":"2854:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2848:5:15"},"nodeType":"YulFunctionCall","src":"2848:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2828:6:15"},"nodeType":"YulFunctionCall","src":"2828:39:15"},"nodeType":"YulExpressionStatement","src":"2828:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2775:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"2778:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2772:2:15"},"nodeType":"YulFunctionCall","src":"2772:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2786:19:15","statements":[{"nodeType":"YulAssignment","src":"2788:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2797:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"2800:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2793:3:15"},"nodeType":"YulFunctionCall","src":"2793:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2788:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"2768:3:15","statements":[]},"src":"2764:113:15"},{"body":{"nodeType":"YulBlock","src":"2911:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2961:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2966:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2957:3:15"},"nodeType":"YulFunctionCall","src":"2957:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"2975:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2950:6:15"},"nodeType":"YulFunctionCall","src":"2950:27:15"},"nodeType":"YulExpressionStatement","src":"2950:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2892:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"2895:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2889:2:15"},"nodeType":"YulFunctionCall","src":"2889:13:15"},"nodeType":"YulIf","src":"2886:101:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2717:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2722:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"2727:6:15","type":""}],"src":"2686:307:15"},{"body":{"nodeType":"YulBlock","src":"3047:54:15","statements":[{"nodeType":"YulAssignment","src":"3057:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3075:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"3082:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3071:3:15"},"nodeType":"YulFunctionCall","src":"3071:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3091:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3087:3:15"},"nodeType":"YulFunctionCall","src":"3087:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3067:3:15"},"nodeType":"YulFunctionCall","src":"3067:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3057:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3030:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3040:6:15","type":""}],"src":"2999:102:15"},{"body":{"nodeType":"YulBlock","src":"3213:73:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3235:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3243:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3231:3:15"},"nodeType":"YulFunctionCall","src":"3231:14:15"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"3247:31:15","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3224:6:15"},"nodeType":"YulFunctionCall","src":"3224:55:15"},"nodeType":"YulExpressionStatement","src":"3224:55:15"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3205:6:15","type":""}],"src":"3107:179:15"}]},"contents":"{\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052366100135761001161001d565b005b61001b61001d565b005b610025610091565b610035610030610093565b6100a2565b565b606061005c83836040518060600160405280602781526020016103f1602791396100c8565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b565b600061009d61014e565b905090565b3660008037600080366000845af43d6000803e80600081146100c3573d6000f35b3d6000fd5b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516100f291906102f8565b600060405180830381855af49150503d806000811461012d576040519150601f19603f3d011682016040523d82523d6000602084013e610132565b606091505b5091509150610143868383876101a5565b925050509392505050565b600061017c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610087565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060831561020857600083511415610200576101c085610064565b6101ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f690610331565b60405180910390fd5b5b829050610213565b610212838361021b565b5b949350505050565b60008251111561022e5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610262919061030f565b60405180910390fd5b600061027682610351565b6102808185610367565b9350610290818560208601610383565b80840191505092915050565b60006102a78261035c565b6102b18185610372565b93506102c1818560208601610383565b6102ca816103b6565b840191505092915050565b60006102e2601d83610372565b91506102ed826103c7565b602082019050919050565b6000610304828461026b565b915081905092915050565b60006020820190508181036000830152610329818461029c565b905092915050565b6000602082019050818103600083015261034a816102d5565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60005b838110156103a1578082015181840152602081019050610386565b838111156103b0576000848401525b50505050565b6000601f19601f8301169050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060008201525056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e2653fe2771b1478bb842c06503e3fc32a3655bdd2a3ad9a3bf6b709497fb90064736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25 PUSH2 0x91 JUMP JUMPDEST PUSH2 0x35 PUSH2 0x30 PUSH2 0x93 JUMP JUMPDEST PUSH2 0xA2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F1 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D PUSH2 0x14E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC3 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x132 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x143 DUP7 DUP4 DUP4 DUP8 PUSH2 0x1A5 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x87 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x200 JUMPI PUSH2 0x1C0 DUP6 PUSH2 0x64 JUMP JUMPDEST PUSH2 0x1FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6 SWAP1 PUSH2 0x331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x213 JUMP JUMPDEST PUSH2 0x212 DUP4 DUP4 PUSH2 0x21B JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x22E JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x276 DUP3 PUSH2 0x351 JUMP JUMPDEST PUSH2 0x280 DUP2 DUP6 PUSH2 0x367 JUMP JUMPDEST SWAP4 POP PUSH2 0x290 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x383 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A7 DUP3 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x2B1 DUP2 DUP6 PUSH2 0x372 JUMP JUMPDEST SWAP4 POP PUSH2 0x2C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x383 JUMP JUMPDEST PUSH2 0x2CA DUP2 PUSH2 0x3B6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2 PUSH1 0x1D DUP4 PUSH2 0x372 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ED DUP3 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x304 DUP3 DUP5 PUSH2 0x26B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x329 DUP2 DUP5 PUSH2 0x29C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34A DUP2 PUSH2 0x2D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x386 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220E2653F 0xE2 PUSH24 0x1B1478BB842C06503E3FC32A3655BDD2A3AD9A3BF6B70949 PUSH32 0xB90064736F6C6343000807003300000000000000000000000000000000000000 ","sourceMap":"567:723:3:-:0;;;;;;2898:11:5;:9;:11::i;:::-;567:723:3;;2675:11:5;:9;:11::i;:::-;567:723:3;2322:110:5;2370:17;:15;:17::i;:::-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;6674:198:9:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;;6674:198;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;1859:190:11:-;1920:21;2029:4;2019:14;;1859:190;;;:::o;3198:46:5:-;:::o;1148:140:3:-;1215:12;1246:35;:33;:35::i;:::-;1239:42;;1148:140;:::o;948:895:5:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1686:1;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;7058:325:9;7199:12;7224;7238:23;7265:6;:19;;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;:69::i;:::-;7300:76;;;;7058:325;;;;;:::o;1175:140:4:-;1228:7;1254:48;1030:66;1281:20;;1254:26;:48::i;:::-;:54;;;;;;;;;;;;1247:61;;1175:140;:::o;7671:628:9:-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:373:15;111:3;139:38;171:5;139:38;:::i;:::-;193:88;274:6;269:3;193:88;:::i;:::-;186:95;;290:52;335:6;330:3;323:4;316:5;312:16;290:52;:::i;:::-;367:6;362:3;358:16;351:23;;115:265;7:373;;;;:::o;386:364::-;474:3;502:39;535:5;502:39;:::i;:::-;557:71;621:6;616:3;557:71;:::i;:::-;550:78;;637:52;682:6;677:3;670:4;663:5;659:16;637:52;:::i;:::-;714:29;736:6;714:29;:::i;:::-;709:3;705:39;698:46;;478:272;386:364;;;;:::o;756:366::-;898:3;919:67;983:2;978:3;919:67;:::i;:::-;912:74;;995:93;1084:3;995:93;:::i;:::-;1113:2;1108:3;1104:12;1097:19;;756:366;;;:::o;1128:271::-;1258:3;1280:93;1369:3;1360:6;1280:93;:::i;:::-;1273:100;;1390:3;1383:10;;1128:271;;;;:::o;1405:313::-;1518:4;1556:2;1545:9;1541:18;1533:26;;1605:9;1599:4;1595:20;1591:1;1580:9;1576:17;1569:47;1633:78;1706:4;1697:6;1633:78;:::i;:::-;1625:86;;1405:313;;;;:::o;1724:419::-;1890:4;1928:2;1917:9;1913:18;1905:26;;1977:9;1971:4;1967:20;1963:1;1952:9;1948:17;1941:47;2005:131;2131:4;2005:131;:::i;:::-;1997:139;;1724:419;;;:::o;2149:98::-;2200:6;2234:5;2228:12;2218:22;;2149:98;;;:::o;2253:99::-;2305:6;2339:5;2333:12;2323:22;;2253:99;;;:::o;2358:147::-;2459:11;2496:3;2481:18;;2358:147;;;;:::o;2511:169::-;2595:11;2629:6;2624:3;2617:19;2669:4;2664:3;2660:14;2645:29;;2511:169;;;;:::o;2686:307::-;2754:1;2764:113;2778:6;2775:1;2772:13;2764:113;;;2863:1;2858:3;2854:11;2848:18;2844:1;2839:3;2835:11;2828:39;2800:2;2797:1;2793:10;2788:15;;2764:113;;;2895:6;2892:1;2889:13;2886:101;;;2975:1;2966:6;2961:3;2957:16;2950:27;2886:101;2735:258;2686:307;;;:::o;2999:102::-;3040:6;3091:2;3087:7;3082:2;3075:5;3071:14;3067:28;3057:38;;2999:102;;;:::o;3107:179::-;3247:31;3243:1;3235:6;3231:14;3224:55;3107:179;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"220200","executionCost":"infinite","totalCost":"infinite"},"external":{"":"infinite"},"internal":{"_implementation()":"2249"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ERC1967Upgrade":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._","kind":"dev","methods":{},"stateVariables":{"_ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."},"_BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"_IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"ProxyAdmin":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"newAdmin","type":"address"}],"name":"changeProxyAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"}],"name":"upgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.","kind":"dev","methods":{"changeProxyAdmin(address,address)":{"details":"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`."},"getProxyAdmin(address)":{"details":"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"getProxyImplementation(address)":{"details":"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgrade(address,address)":{"details":"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`."},"upgradeAndCall(address,address,bytes)":{"details":"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_msgSender_1347":{"entryPoint":50,"id":1347,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":58,"id":111,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ccd8061010d6000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461012857806399a88ec414610144578063f2fde38b1461016d578063f3b7dead146101965761007b565b8063204e1c7a14610080578063715018a6146100bd5780637eff275e146100d45780638da5cb5b146100fd575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610778565b6101d3565b6040516100b49190610952565b60405180910390f35b3480156100c957600080fd5b506100d2610267565b005b3480156100e057600080fd5b506100fb60048036038101906100f691906107a5565b61027b565b005b34801561010957600080fd5b506101126102f2565b60405161011f9190610952565b60405180910390f35b610142600480360381019061013d91906107e5565b61031b565b005b34801561015057600080fd5b5061016b600480360381019061016691906107a5565b610396565b005b34801561017957600080fd5b50610194600480360381019061018f919061071e565b61040d565b005b3480156101a257600080fd5b506101bd60048036038101906101b89190610778565b610491565b6040516101ca9190610952565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516101fb90610928565b600060405180830381855afa9150503d8060008114610236576040519150601f19603f3d011682016040523d82523d6000602084013e61023b565b606091505b50915091508161024a57600080fd5b8080602001905181019061025e919061074b565b92505050919050565b61026f610525565b61027960006105a3565b565b610283610525565b8173ffffffffffffffffffffffffffffffffffffffff16638f283970826040518263ffffffff1660e01b81526004016102bc9190610952565b600060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610323610525565b8273ffffffffffffffffffffffffffffffffffffffff16634f1ef2863484846040518463ffffffff1660e01b815260040161035f92919061096d565b6000604051808303818588803b15801561037857600080fd5b505af115801561038c573d6000803e3d6000fd5b5050505050505050565b61039e610525565b8173ffffffffffffffffffffffffffffffffffffffff16633659cfe6826040518263ffffffff1660e01b81526004016103d79190610952565b600060405180830381600087803b1580156103f157600080fd5b505af1158015610405573d6000803e3d6000fd5b505050505050565b610415610525565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047c9061099d565b60405180910390fd5b61048e816105a3565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516104b99061093d565b600060405180830381855afa9150503d80600081146104f4576040519150601f19603f3d011682016040523d82523d6000602084013e6104f9565b606091505b50915091508161050857600080fd5b8080602001905181019061051c919061074b565b92505050919050565b61052d610667565b73ffffffffffffffffffffffffffffffffffffffff1661054b6102f2565b73ffffffffffffffffffffffffffffffffffffffff16146105a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610598906109bd565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600061068261067d84610a02565b6109dd565b90508281526020810184848401111561069e5761069d610b68565b5b6106a9848285610ac1565b509392505050565b6000813590506106c081610c52565b92915050565b6000815190506106d581610c69565b92915050565b600082601f8301126106f0576106ef610b63565b5b813561070084826020860161066f565b91505092915050565b60008135905061071881610c80565b92915050565b60006020828403121561073457610733610b72565b5b6000610742848285016106b1565b91505092915050565b60006020828403121561076157610760610b72565b5b600061076f848285016106c6565b91505092915050565b60006020828403121561078e5761078d610b72565b5b600061079c84828501610709565b91505092915050565b600080604083850312156107bc576107bb610b72565b5b60006107ca85828601610709565b92505060206107db858286016106b1565b9150509250929050565b6000806000606084860312156107fe576107fd610b72565b5b600061080c86828701610709565b935050602061081d868287016106b1565b925050604084013567ffffffffffffffff81111561083e5761083d610b6d565b5b61084a868287016106db565b9150509250925092565b61085d81610a6b565b82525050565b600061086e82610a33565b6108788185610a3e565b9350610888818560208601610ad0565b61089181610b77565b840191505092915050565b60006108a9602683610a5a565b91506108b482610b88565b604082019050919050565b60006108cc600483610a4f565b91506108d782610bd7565b600482019050919050565b60006108ef602083610a5a565b91506108fa82610c00565b602082019050919050565b6000610912600483610a4f565b915061091d82610c29565b600482019050919050565b6000610933826108bf565b9150819050919050565b600061094882610905565b9150819050919050565b60006020820190506109676000830184610854565b92915050565b60006040820190506109826000830185610854565b81810360208301526109948184610863565b90509392505050565b600060208201905081810360008301526109b68161089c565b9050919050565b600060208201905081810360008301526109d6816108e2565b9050919050565b60006109e76109f8565b90506109f38282610b03565b919050565b6000604051905090565b600067ffffffffffffffff821115610a1d57610a1c610b34565b5b610a2682610b77565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610a7682610aa1565b9050919050565b6000610a8882610aa1565b9050919050565b6000610a9a82610a6b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610aee578082015181840152602081019050610ad3565b83811115610afd576000848401525b50505050565b610b0c82610b77565b810181811067ffffffffffffffff82111715610b2b57610b2a610b34565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5c60da1b00000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7ff851a44000000000000000000000000000000000000000000000000000000000600082015250565b610c5b81610a6b565b8114610c6657600080fd5b50565b610c7281610a7d565b8114610c7d57600080fd5b50565b610c8981610a8f565b8114610c9457600080fd5b5056fea26469706673582212205c3db8eb731f42a667a3586c4c86749558b2e9d6d5f731367eb44e519299d74864736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCCD DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x99A88EC4 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xF3B7DEAD EQ PUSH2 0x196 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x204E1C7A EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x7EFF275E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x267 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP1 PUSH2 0x928 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x74B JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F PUSH2 0x525 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x0 PUSH2 0x5A3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x283 PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8F283970 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x525 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4F1EF286 CALLVALUE DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP3 SWAP2 SWAP1 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3659CFE6 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x405 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x415 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47C SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48E DUP2 PUSH2 0x5A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x4B9 SWAP1 PUSH2 0x93D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x74B JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52D PUSH2 0x667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x54B PUSH2 0x2F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x598 SWAP1 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 PUSH2 0x67D DUP5 PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x9DD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x69E JUMPI PUSH2 0x69D PUSH2 0xB68 JUMP JUMPDEST JUMPDEST PUSH2 0x6A9 DUP5 DUP3 DUP6 PUSH2 0xAC1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C0 DUP2 PUSH2 0xC52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6D5 DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6F0 JUMPI PUSH2 0x6EF PUSH2 0xB63 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x700 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x66F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x718 DUP2 PUSH2 0xC80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x734 JUMPI PUSH2 0x733 PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x742 DUP5 DUP3 DUP6 ADD PUSH2 0x6B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x761 JUMPI PUSH2 0x760 PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x76F DUP5 DUP3 DUP6 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78E JUMPI PUSH2 0x78D PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x79C DUP5 DUP3 DUP6 ADD PUSH2 0x709 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7BC JUMPI PUSH2 0x7BB PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7CA DUP6 DUP3 DUP7 ADD PUSH2 0x709 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7DB DUP6 DUP3 DUP7 ADD PUSH2 0x6B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x80C DUP7 DUP3 DUP8 ADD PUSH2 0x709 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x81D DUP7 DUP3 DUP8 ADD PUSH2 0x6B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83E JUMPI PUSH2 0x83D PUSH2 0xB6D JUMP JUMPDEST JUMPDEST PUSH2 0x84A DUP7 DUP3 DUP8 ADD PUSH2 0x6DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x85D DUP2 PUSH2 0xA6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86E DUP3 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x878 DUP2 DUP6 PUSH2 0xA3E JUMP JUMPDEST SWAP4 POP PUSH2 0x888 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x891 DUP2 PUSH2 0xB77 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A9 PUSH1 0x26 DUP4 PUSH2 0xA5A JUMP JUMPDEST SWAP2 POP PUSH2 0x8B4 DUP3 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CC PUSH1 0x4 DUP4 PUSH2 0xA4F JUMP JUMPDEST SWAP2 POP PUSH2 0x8D7 DUP3 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EF PUSH1 0x20 DUP4 PUSH2 0xA5A JUMP JUMPDEST SWAP2 POP PUSH2 0x8FA DUP3 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x912 PUSH1 0x4 DUP4 PUSH2 0xA4F JUMP JUMPDEST SWAP2 POP PUSH2 0x91D DUP3 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP3 PUSH2 0x8BF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x948 DUP3 PUSH2 0x905 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x967 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x854 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x982 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x854 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x994 DUP2 DUP5 PUSH2 0x863 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9B6 DUP2 PUSH2 0x89C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9D6 DUP2 PUSH2 0x8E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E7 PUSH2 0x9F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F3 DUP3 DUP3 PUSH2 0xB03 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA1D JUMPI PUSH2 0xA1C PUSH2 0xB34 JUMP JUMPDEST JUMPDEST PUSH2 0xA26 DUP3 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA76 DUP3 PUSH2 0xAA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA88 DUP3 PUSH2 0xAA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9A DUP3 PUSH2 0xA6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAEE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAD3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xB0C DUP3 PUSH2 0xB77 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB2B JUMPI PUSH2 0xB2A PUSH2 0xB34 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xC5B DUP2 PUSH2 0xA6B JUMP JUMPDEST DUP2 EQ PUSH2 0xC66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC72 DUP2 PUSH2 0xA7D JUMP JUMPDEST DUP2 EQ PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC89 DUP2 PUSH2 0xA8F JUMP JUMPDEST DUP2 EQ PUSH2 0xC94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C RETURNDATASIZE 0xB8 0xEB PUSH20 0x1F42A667A3586C4C86749558B2E9D6D5F731367E 0xB4 0x4E MLOAD SWAP3 SWAP10 0xD7 BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"450:2409:7:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;450:2409:7;;640:96:10;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;450:2409:7:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_54":{"entryPoint":1317,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_1347":{"entryPoint":1639,"id":1347,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":1443,"id":111,"parameterSlots":1,"returnSlots":0},"@changeProxyAdmin_639":{"entryPoint":635,"id":639,"parameterSlots":2,"returnSlots":0},"@getProxyAdmin_621":{"entryPoint":1169,"id":621,"parameterSlots":1,"returnSlots":1},"@getProxyImplementation_587":{"entryPoint":467,"id":587,"parameterSlots":1,"returnSlots":1},"@owner_40":{"entryPoint":754,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":615,"id":68,"parameterSlots":0,"returnSlots":0},"@transferOwnership_91":{"entryPoint":1037,"id":91,"parameterSlots":1,"returnSlots":0},"@upgradeAndCall_681":{"entryPoint":795,"id":681,"parameterSlots":3,"returnSlots":0},"@upgrade_657":{"entryPoint":918,"id":657,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":1647,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1713,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":1734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":1755,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_ITransparentUpgradeableProxy_$716":{"entryPoint":1801,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1822,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable_fromMemory":{"entryPoint":1867,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716":{"entryPoint":1912,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716t_address":{"entryPoint":1957,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716t_addresst_bytes_memory_ptr":{"entryPoint":2021,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2132,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":2147,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":2204,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2239,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":2274,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2309,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2344,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2365,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2413,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2461,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2493,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":2525,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2552,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":2562,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2611,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":2622,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2639,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2650,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2667,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":2685,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ITransparentUpgradeableProxy_$716":{"entryPoint":2703,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2721,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":2753,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":2768,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":2819,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":2868,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2915,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2920,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2925,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2930,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2935,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":2952,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29":{"entryPoint":3031,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":3072,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7":{"entryPoint":3113,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3154,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":3177,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_ITransparentUpgradeableProxy_$716":{"entryPoint":3200,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12655:15","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:15","statements":[{"nodeType":"YulAssignment","src":"100:74:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:15"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:15"},"nodeType":"YulFunctionCall","src":"125:48:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:15"},"nodeType":"YulFunctionCall","src":"109:65:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:15"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:15"},"nodeType":"YulFunctionCall","src":"183:21:15"},"nodeType":"YulExpressionStatement","src":"183:21:15"},{"nodeType":"YulVariableDeclaration","src":"213:27:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:15"},"nodeType":"YulFunctionCall","src":"224:16:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:15"},"nodeType":"YulFunctionCall","src":"280:79:15"},"nodeType":"YulExpressionStatement","src":"280:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:15"},"nodeType":"YulFunctionCall","src":"255:16:15"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:15"},"nodeType":"YulFunctionCall","src":"252:25:15"},"nodeType":"YulIf","src":"249:112:15"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:15"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:15"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:15"},"nodeType":"YulFunctionCall","src":"370:41:15"},"nodeType":"YulExpressionStatement","src":"370:41:15"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:15","type":""}],"src":"7:410:15"},{"body":{"nodeType":"YulBlock","src":"475:87:15","statements":[{"nodeType":"YulAssignment","src":"485:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"507:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"494:12:15"},"nodeType":"YulFunctionCall","src":"494:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"523:26:15"},"nodeType":"YulFunctionCall","src":"523:33:15"},"nodeType":"YulExpressionStatement","src":"523:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"453:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"461:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"469:5:15","type":""}],"src":"423:139:15"},{"body":{"nodeType":"YulBlock","src":"639:88:15","statements":[{"nodeType":"YulAssignment","src":"649:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"664:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"658:5:15"},"nodeType":"YulFunctionCall","src":"658:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"649:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"715:5:15"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"680:34:15"},"nodeType":"YulFunctionCall","src":"680:41:15"},"nodeType":"YulExpressionStatement","src":"680:41:15"}]},"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"617:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"625:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"633:5:15","type":""}],"src":"568:159:15"},{"body":{"nodeType":"YulBlock","src":"807:277:15","statements":[{"body":{"nodeType":"YulBlock","src":"856:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"858:77:15"},"nodeType":"YulFunctionCall","src":"858:79:15"},"nodeType":"YulExpressionStatement","src":"858:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"835:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"843:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"831:3:15"},"nodeType":"YulFunctionCall","src":"831:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"850:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"827:3:15"},"nodeType":"YulFunctionCall","src":"827:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"820:6:15"},"nodeType":"YulFunctionCall","src":"820:35:15"},"nodeType":"YulIf","src":"817:122:15"},{"nodeType":"YulVariableDeclaration","src":"948:34:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"975:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"962:12:15"},"nodeType":"YulFunctionCall","src":"962:20:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"952:6:15","type":""}]},{"nodeType":"YulAssignment","src":"991:87:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1059:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1047:3:15"},"nodeType":"YulFunctionCall","src":"1047:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"1066:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"1074:3:15"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1000:46:15"},"nodeType":"YulFunctionCall","src":"1000:78:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"991:5:15"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"785:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"793:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"801:5:15","type":""}],"src":"746:338:15"},{"body":{"nodeType":"YulBlock","src":"1178:123:15","statements":[{"nodeType":"YulAssignment","src":"1188:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1210:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1197:12:15"},"nodeType":"YulFunctionCall","src":"1197:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1188:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1289:5:15"}],"functionName":{"name":"validator_revert_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulIdentifier","src":"1226:62:15"},"nodeType":"YulFunctionCall","src":"1226:69:15"},"nodeType":"YulExpressionStatement","src":"1226:69:15"}]},"name":"abi_decode_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1156:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"1164:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1172:5:15","type":""}],"src":"1090:211:15"},{"body":{"nodeType":"YulBlock","src":"1373:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"1419:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1421:77:15"},"nodeType":"YulFunctionCall","src":"1421:79:15"},"nodeType":"YulExpressionStatement","src":"1421:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1394:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1403:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1390:3:15"},"nodeType":"YulFunctionCall","src":"1390:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1415:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1386:3:15"},"nodeType":"YulFunctionCall","src":"1386:32:15"},"nodeType":"YulIf","src":"1383:119:15"},{"nodeType":"YulBlock","src":"1512:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1527:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1541:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1531:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1556:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1591:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1602:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1587:3:15"},"nodeType":"YulFunctionCall","src":"1587:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1611:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1566:20:15"},"nodeType":"YulFunctionCall","src":"1566:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1556:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1343:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1354:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1366:6:15","type":""}],"src":"1307:329:15"},{"body":{"nodeType":"YulBlock","src":"1727:282:15","statements":[{"body":{"nodeType":"YulBlock","src":"1773:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1775:77:15"},"nodeType":"YulFunctionCall","src":"1775:79:15"},"nodeType":"YulExpressionStatement","src":"1775:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1748:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1757:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1744:3:15"},"nodeType":"YulFunctionCall","src":"1744:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1769:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1740:3:15"},"nodeType":"YulFunctionCall","src":"1740:32:15"},"nodeType":"YulIf","src":"1737:119:15"},{"nodeType":"YulBlock","src":"1866:136:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1881:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1895:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1885:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1910:82:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1964:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1975:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:15"},"nodeType":"YulFunctionCall","src":"1960:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1984:7:15"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulIdentifier","src":"1920:39:15"},"nodeType":"YulFunctionCall","src":"1920:72:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1910:6:15"}]}]}]},"name":"abi_decode_tuple_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1697:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1708:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1720:6:15","type":""}],"src":"1642:367:15"},{"body":{"nodeType":"YulBlock","src":"2117:299:15","statements":[{"body":{"nodeType":"YulBlock","src":"2163:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2165:77:15"},"nodeType":"YulFunctionCall","src":"2165:79:15"},"nodeType":"YulExpressionStatement","src":"2165:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2138:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2147:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2134:3:15"},"nodeType":"YulFunctionCall","src":"2134:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2159:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2130:3:15"},"nodeType":"YulFunctionCall","src":"2130:32:15"},"nodeType":"YulIf","src":"2127:119:15"},{"nodeType":"YulBlock","src":"2256:153:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2271:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2285:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2275:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2300:99:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2371:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2382:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2367:3:15"},"nodeType":"YulFunctionCall","src":"2367:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2391:7:15"}],"functionName":{"name":"abi_decode_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulIdentifier","src":"2310:56:15"},"nodeType":"YulFunctionCall","src":"2310:89:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2300:6:15"}]}]}]},"name":"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2087:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2098:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2110:6:15","type":""}],"src":"2015:401:15"},{"body":{"nodeType":"YulBlock","src":"2541:427:15","statements":[{"body":{"nodeType":"YulBlock","src":"2587:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2589:77:15"},"nodeType":"YulFunctionCall","src":"2589:79:15"},"nodeType":"YulExpressionStatement","src":"2589:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2562:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2571:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2558:3:15"},"nodeType":"YulFunctionCall","src":"2558:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2583:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2554:3:15"},"nodeType":"YulFunctionCall","src":"2554:32:15"},"nodeType":"YulIf","src":"2551:119:15"},{"nodeType":"YulBlock","src":"2680:153:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2695:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2709:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2699:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2724:99:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2795:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2806:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2791:3:15"},"nodeType":"YulFunctionCall","src":"2791:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2815:7:15"}],"functionName":{"name":"abi_decode_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulIdentifier","src":"2734:56:15"},"nodeType":"YulFunctionCall","src":"2734:89:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2724:6:15"}]}]},{"nodeType":"YulBlock","src":"2843:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2858:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2872:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2862:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2888:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2923:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2934:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2919:3:15"},"nodeType":"YulFunctionCall","src":"2919:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2943:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2898:20:15"},"nodeType":"YulFunctionCall","src":"2898:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2888:6:15"}]}]}]},"name":"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2503:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2514:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2526:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2534:6:15","type":""}],"src":"2422:546:15"},{"body":{"nodeType":"YulBlock","src":"3119:724:15","statements":[{"body":{"nodeType":"YulBlock","src":"3165:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3167:77:15"},"nodeType":"YulFunctionCall","src":"3167:79:15"},"nodeType":"YulExpressionStatement","src":"3167:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3140:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3149:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3136:3:15"},"nodeType":"YulFunctionCall","src":"3136:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3161:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3132:3:15"},"nodeType":"YulFunctionCall","src":"3132:32:15"},"nodeType":"YulIf","src":"3129:119:15"},{"nodeType":"YulBlock","src":"3258:153:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3273:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3287:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3277:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3302:99:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3373:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3384:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3369:3:15"},"nodeType":"YulFunctionCall","src":"3369:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3393:7:15"}],"functionName":{"name":"abi_decode_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulIdentifier","src":"3312:56:15"},"nodeType":"YulFunctionCall","src":"3312:89:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3302:6:15"}]}]},{"nodeType":"YulBlock","src":"3421:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3466:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3501:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3512:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3497:3:15"},"nodeType":"YulFunctionCall","src":"3497:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3521:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3476:20:15"},"nodeType":"YulFunctionCall","src":"3476:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3466:6:15"}]}]},{"nodeType":"YulBlock","src":"3549:287:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3564:46:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3595:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3606:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3591:3:15"},"nodeType":"YulFunctionCall","src":"3591:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3578:12:15"},"nodeType":"YulFunctionCall","src":"3578:32:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3568:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3657:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3659:77:15"},"nodeType":"YulFunctionCall","src":"3659:79:15"},"nodeType":"YulExpressionStatement","src":"3659:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3629:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3637:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3626:2:15"},"nodeType":"YulFunctionCall","src":"3626:30:15"},"nodeType":"YulIf","src":"3623:117:15"},{"nodeType":"YulAssignment","src":"3754:72:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3798:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3809:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3794:3:15"},"nodeType":"YulFunctionCall","src":"3794:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3818:7:15"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3764:29:15"},"nodeType":"YulFunctionCall","src":"3764:62:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3754:6:15"}]}]}]},"name":"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3073:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3084:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3096:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3104:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3112:6:15","type":""}],"src":"2974:869:15"},{"body":{"nodeType":"YulBlock","src":"3914:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3931:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3954:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3936:17:15"},"nodeType":"YulFunctionCall","src":"3936:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3924:6:15"},"nodeType":"YulFunctionCall","src":"3924:37:15"},"nodeType":"YulExpressionStatement","src":"3924:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3902:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3909:3:15","type":""}],"src":"3849:118:15"},{"body":{"nodeType":"YulBlock","src":"4063:270:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4073:52:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4119:5:15"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4087:31:15"},"nodeType":"YulFunctionCall","src":"4087:38:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4077:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4134:77:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4199:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"4204:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4141:57:15"},"nodeType":"YulFunctionCall","src":"4141:70:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4134:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4246:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4253:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4242:3:15"},"nodeType":"YulFunctionCall","src":"4242:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"4260:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"4265:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4220:21:15"},"nodeType":"YulFunctionCall","src":"4220:52:15"},"nodeType":"YulExpressionStatement","src":"4220:52:15"},{"nodeType":"YulAssignment","src":"4281:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4292:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4319:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4297:21:15"},"nodeType":"YulFunctionCall","src":"4297:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:15"},"nodeType":"YulFunctionCall","src":"4288:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4281:3:15"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4044:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4051:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4059:3:15","type":""}],"src":"3973:360:15"},{"body":{"nodeType":"YulBlock","src":"4485:220:15","statements":[{"nodeType":"YulAssignment","src":"4495:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4561:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4566:2:15","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4502:58:15"},"nodeType":"YulFunctionCall","src":"4502:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4495:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4667:3:15"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"4578:88:15"},"nodeType":"YulFunctionCall","src":"4578:93:15"},"nodeType":"YulExpressionStatement","src":"4578:93:15"},{"nodeType":"YulAssignment","src":"4680:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4691:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4696:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4687:3:15"},"nodeType":"YulFunctionCall","src":"4687:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4680:3:15"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4473:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4481:3:15","type":""}],"src":"4339:366:15"},{"body":{"nodeType":"YulBlock","src":"4874:235:15","statements":[{"nodeType":"YulAssignment","src":"4884:90:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4967:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4972:1:15","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4891:75:15"},"nodeType":"YulFunctionCall","src":"4891:83:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4884:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5072:3:15"}],"functionName":{"name":"store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","nodeType":"YulIdentifier","src":"4983:88:15"},"nodeType":"YulFunctionCall","src":"4983:93:15"},"nodeType":"YulExpressionStatement","src":"4983:93:15"},{"nodeType":"YulAssignment","src":"5085:18:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5096:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5101:1:15","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5092:3:15"},"nodeType":"YulFunctionCall","src":"5092:11:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5085:3:15"}]}]},"name":"abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4862:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4870:3:15","type":""}],"src":"4711:398:15"},{"body":{"nodeType":"YulBlock","src":"5261:220:15","statements":[{"nodeType":"YulAssignment","src":"5271:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5337:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5342:2:15","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5278:58:15"},"nodeType":"YulFunctionCall","src":"5278:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5271:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5443:3:15"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"5354:88:15"},"nodeType":"YulFunctionCall","src":"5354:93:15"},"nodeType":"YulExpressionStatement","src":"5354:93:15"},{"nodeType":"YulAssignment","src":"5456:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5467:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5472:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5463:3:15"},"nodeType":"YulFunctionCall","src":"5463:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5456:3:15"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5249:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5257:3:15","type":""}],"src":"5115:366:15"},{"body":{"nodeType":"YulBlock","src":"5650:235:15","statements":[{"nodeType":"YulAssignment","src":"5660:90:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5743:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5748:1:15","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5667:75:15"},"nodeType":"YulFunctionCall","src":"5667:83:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5660:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5848:3:15"}],"functionName":{"name":"store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","nodeType":"YulIdentifier","src":"5759:88:15"},"nodeType":"YulFunctionCall","src":"5759:93:15"},"nodeType":"YulExpressionStatement","src":"5759:93:15"},{"nodeType":"YulAssignment","src":"5861:18:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5872:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5877:1:15","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5868:3:15"},"nodeType":"YulFunctionCall","src":"5868:11:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5861:3:15"}]}]},"name":"abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5638:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5646:3:15","type":""}],"src":"5487:398:15"},{"body":{"nodeType":"YulBlock","src":"6079:191:15","statements":[{"nodeType":"YulAssignment","src":"6090:154:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6240:3:15"}],"functionName":{"name":"abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6097:141:15"},"nodeType":"YulFunctionCall","src":"6097:147:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6090:3:15"}]},{"nodeType":"YulAssignment","src":"6254:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"6261:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6254:3:15"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6066:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6075:3:15","type":""}],"src":"5891:379:15"},{"body":{"nodeType":"YulBlock","src":"6464:191:15","statements":[{"nodeType":"YulAssignment","src":"6475:154:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6625:3:15"}],"functionName":{"name":"abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6482:141:15"},"nodeType":"YulFunctionCall","src":"6482:147:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6475:3:15"}]},{"nodeType":"YulAssignment","src":"6639:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"6646:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6639:3:15"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6451:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6460:3:15","type":""}],"src":"6276:379:15"},{"body":{"nodeType":"YulBlock","src":"6759:124:15","statements":[{"nodeType":"YulAssignment","src":"6769:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6781:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6792:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6777:3:15"},"nodeType":"YulFunctionCall","src":"6777:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6769:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6849:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6862:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6873:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6858:3:15"},"nodeType":"YulFunctionCall","src":"6858:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6805:43:15"},"nodeType":"YulFunctionCall","src":"6805:71:15"},"nodeType":"YulExpressionStatement","src":"6805:71:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6731:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6743:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6754:4:15","type":""}],"src":"6661:222:15"},{"body":{"nodeType":"YulBlock","src":"7033:275:15","statements":[{"nodeType":"YulAssignment","src":"7043:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7055:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7066:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7051:3:15"},"nodeType":"YulFunctionCall","src":"7051:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7043:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7123:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7136:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7147:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7132:3:15"},"nodeType":"YulFunctionCall","src":"7132:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7079:43:15"},"nodeType":"YulFunctionCall","src":"7079:71:15"},"nodeType":"YulExpressionStatement","src":"7079:71:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7171:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7182:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7167:3:15"},"nodeType":"YulFunctionCall","src":"7167:18:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7191:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7197:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7187:3:15"},"nodeType":"YulFunctionCall","src":"7187:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7160:6:15"},"nodeType":"YulFunctionCall","src":"7160:48:15"},"nodeType":"YulExpressionStatement","src":"7160:48:15"},{"nodeType":"YulAssignment","src":"7217:84:15","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7287:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"7296:4:15"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7225:61:15"},"nodeType":"YulFunctionCall","src":"7225:76:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7217:4:15"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6997:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7009:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7017:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7028:4:15","type":""}],"src":"6889:419:15"},{"body":{"nodeType":"YulBlock","src":"7485:248:15","statements":[{"nodeType":"YulAssignment","src":"7495:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7507:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7518:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7503:3:15"},"nodeType":"YulFunctionCall","src":"7503:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7495:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7542:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7553:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7538:3:15"},"nodeType":"YulFunctionCall","src":"7538:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7561:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7567:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7557:3:15"},"nodeType":"YulFunctionCall","src":"7557:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7531:6:15"},"nodeType":"YulFunctionCall","src":"7531:47:15"},"nodeType":"YulExpressionStatement","src":"7531:47:15"},{"nodeType":"YulAssignment","src":"7587:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7721:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7595:124:15"},"nodeType":"YulFunctionCall","src":"7595:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7587:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7465:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7480:4:15","type":""}],"src":"7314:419:15"},{"body":{"nodeType":"YulBlock","src":"7910:248:15","statements":[{"nodeType":"YulAssignment","src":"7920:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7932:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7943:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7928:3:15"},"nodeType":"YulFunctionCall","src":"7928:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7920:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7967:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7978:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7963:3:15"},"nodeType":"YulFunctionCall","src":"7963:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7986:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7992:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7982:3:15"},"nodeType":"YulFunctionCall","src":"7982:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7956:6:15"},"nodeType":"YulFunctionCall","src":"7956:47:15"},"nodeType":"YulExpressionStatement","src":"7956:47:15"},{"nodeType":"YulAssignment","src":"8012:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8146:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8020:124:15"},"nodeType":"YulFunctionCall","src":"8020:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8012:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7890:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7905:4:15","type":""}],"src":"7739:419:15"},{"body":{"nodeType":"YulBlock","src":"8205:88:15","statements":[{"nodeType":"YulAssignment","src":"8215:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"8225:18:15"},"nodeType":"YulFunctionCall","src":"8225:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8215:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8274:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"8282:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"8254:19:15"},"nodeType":"YulFunctionCall","src":"8254:33:15"},"nodeType":"YulExpressionStatement","src":"8254:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8189:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8198:6:15","type":""}],"src":"8164:129:15"},{"body":{"nodeType":"YulBlock","src":"8339:35:15","statements":[{"nodeType":"YulAssignment","src":"8349:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8365:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8359:5:15"},"nodeType":"YulFunctionCall","src":"8359:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8349:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8332:6:15","type":""}],"src":"8299:75:15"},{"body":{"nodeType":"YulBlock","src":"8446:241:15","statements":[{"body":{"nodeType":"YulBlock","src":"8551:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8553:16:15"},"nodeType":"YulFunctionCall","src":"8553:18:15"},"nodeType":"YulExpressionStatement","src":"8553:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8523:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8531:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8520:2:15"},"nodeType":"YulFunctionCall","src":"8520:30:15"},"nodeType":"YulIf","src":"8517:56:15"},{"nodeType":"YulAssignment","src":"8583:37:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8613:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8591:21:15"},"nodeType":"YulFunctionCall","src":"8591:29:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8583:4:15"}]},{"nodeType":"YulAssignment","src":"8657:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8669:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"8675:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8665:3:15"},"nodeType":"YulFunctionCall","src":"8665:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8657:4:15"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8430:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8441:4:15","type":""}],"src":"8380:307:15"},{"body":{"nodeType":"YulBlock","src":"8751:40:15","statements":[{"nodeType":"YulAssignment","src":"8762:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8778:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8772:5:15"},"nodeType":"YulFunctionCall","src":"8772:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8762:6:15"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8734:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8744:6:15","type":""}],"src":"8693:98:15"},{"body":{"nodeType":"YulBlock","src":"8892:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8909:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"8914:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8902:6:15"},"nodeType":"YulFunctionCall","src":"8902:19:15"},"nodeType":"YulExpressionStatement","src":"8902:19:15"},{"nodeType":"YulAssignment","src":"8930:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8949:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8954:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8945:3:15"},"nodeType":"YulFunctionCall","src":"8945:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8930:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8864:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"8869:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8880:11:15","type":""}],"src":"8797:168:15"},{"body":{"nodeType":"YulBlock","src":"9084:34:15","statements":[{"nodeType":"YulAssignment","src":"9094:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"9109:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9094:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9056:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9061:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9072:11:15","type":""}],"src":"8971:147:15"},{"body":{"nodeType":"YulBlock","src":"9220:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9237:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"9242:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9230:6:15"},"nodeType":"YulFunctionCall","src":"9230:19:15"},"nodeType":"YulExpressionStatement","src":"9230:19:15"},{"nodeType":"YulAssignment","src":"9258:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9277:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9282:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9273:3:15"},"nodeType":"YulFunctionCall","src":"9273:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9258:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9192:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9197:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9208:11:15","type":""}],"src":"9124:169:15"},{"body":{"nodeType":"YulBlock","src":"9344:51:15","statements":[{"nodeType":"YulAssignment","src":"9354:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9383:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9365:17:15"},"nodeType":"YulFunctionCall","src":"9365:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9354:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9326:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9336:7:15","type":""}],"src":"9299:96:15"},{"body":{"nodeType":"YulBlock","src":"9454:51:15","statements":[{"nodeType":"YulAssignment","src":"9464:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9493:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9475:17:15"},"nodeType":"YulFunctionCall","src":"9475:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9464:7:15"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9436:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9446:7:15","type":""}],"src":"9401:104:15"},{"body":{"nodeType":"YulBlock","src":"9592:51:15","statements":[{"nodeType":"YulAssignment","src":"9602:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9631:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9613:17:15"},"nodeType":"YulFunctionCall","src":"9613:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9602:7:15"}]}]},"name":"cleanup_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9574:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9584:7:15","type":""}],"src":"9511:132:15"},{"body":{"nodeType":"YulBlock","src":"9694:81:15","statements":[{"nodeType":"YulAssignment","src":"9704:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9719:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9726:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9715:3:15"},"nodeType":"YulFunctionCall","src":"9715:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9704:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9676:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9686:7:15","type":""}],"src":"9649:126:15"},{"body":{"nodeType":"YulBlock","src":"9832:103:15","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9855:3:15"},{"name":"src","nodeType":"YulIdentifier","src":"9860:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"9865:6:15"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9842:12:15"},"nodeType":"YulFunctionCall","src":"9842:30:15"},"nodeType":"YulExpressionStatement","src":"9842:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9913:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"9918:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9909:3:15"},"nodeType":"YulFunctionCall","src":"9909:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"9927:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9902:6:15"},"nodeType":"YulFunctionCall","src":"9902:27:15"},"nodeType":"YulExpressionStatement","src":"9902:27:15"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9814:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9819:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9824:6:15","type":""}],"src":"9781:154:15"},{"body":{"nodeType":"YulBlock","src":"9990:258:15","statements":[{"nodeType":"YulVariableDeclaration","src":"10000:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10009:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10004:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"10069:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10094:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"10099:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10090:3:15"},"nodeType":"YulFunctionCall","src":"10090:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10113:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"10118:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10109:3:15"},"nodeType":"YulFunctionCall","src":"10109:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10103:5:15"},"nodeType":"YulFunctionCall","src":"10103:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10083:6:15"},"nodeType":"YulFunctionCall","src":"10083:39:15"},"nodeType":"YulExpressionStatement","src":"10083:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10030:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"10033:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10027:2:15"},"nodeType":"YulFunctionCall","src":"10027:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10041:19:15","statements":[{"nodeType":"YulAssignment","src":"10043:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10052:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"10055:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10048:3:15"},"nodeType":"YulFunctionCall","src":"10048:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10043:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"10023:3:15","statements":[]},"src":"10019:113:15"},{"body":{"nodeType":"YulBlock","src":"10166:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10216:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"10221:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10212:3:15"},"nodeType":"YulFunctionCall","src":"10212:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"10230:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10205:6:15"},"nodeType":"YulFunctionCall","src":"10205:27:15"},"nodeType":"YulExpressionStatement","src":"10205:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10147:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"10150:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10144:2:15"},"nodeType":"YulFunctionCall","src":"10144:13:15"},"nodeType":"YulIf","src":"10141:101:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9972:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9977:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9982:6:15","type":""}],"src":"9941:307:15"},{"body":{"nodeType":"YulBlock","src":"10297:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"10307:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10329:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10359:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10337:21:15"},"nodeType":"YulFunctionCall","src":"10337:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10325:3:15"},"nodeType":"YulFunctionCall","src":"10325:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"10311:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"10476:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10478:16:15"},"nodeType":"YulFunctionCall","src":"10478:18:15"},"nodeType":"YulExpressionStatement","src":"10478:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10419:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"10431:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10416:2:15"},"nodeType":"YulFunctionCall","src":"10416:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10455:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"10467:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10452:2:15"},"nodeType":"YulFunctionCall","src":"10452:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10413:2:15"},"nodeType":"YulFunctionCall","src":"10413:62:15"},"nodeType":"YulIf","src":"10410:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10514:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10518:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10507:6:15"},"nodeType":"YulFunctionCall","src":"10507:22:15"},"nodeType":"YulExpressionStatement","src":"10507:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10283:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"10291:4:15","type":""}],"src":"10254:281:15"},{"body":{"nodeType":"YulBlock","src":"10569:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10586:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10589:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10579:6:15"},"nodeType":"YulFunctionCall","src":"10579:88:15"},"nodeType":"YulExpressionStatement","src":"10579:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10683:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10686:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10676:6:15"},"nodeType":"YulFunctionCall","src":"10676:15:15"},"nodeType":"YulExpressionStatement","src":"10676:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10707:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10710:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10700:6:15"},"nodeType":"YulFunctionCall","src":"10700:15:15"},"nodeType":"YulExpressionStatement","src":"10700:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"10541:180:15"},{"body":{"nodeType":"YulBlock","src":"10816:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10833:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10836:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10826:6:15"},"nodeType":"YulFunctionCall","src":"10826:12:15"},"nodeType":"YulExpressionStatement","src":"10826:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"10727:117:15"},{"body":{"nodeType":"YulBlock","src":"10939:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10956:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10959:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10949:6:15"},"nodeType":"YulFunctionCall","src":"10949:12:15"},"nodeType":"YulExpressionStatement","src":"10949:12:15"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"10850:117:15"},{"body":{"nodeType":"YulBlock","src":"11062:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11079:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11082:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11072:6:15"},"nodeType":"YulFunctionCall","src":"11072:12:15"},"nodeType":"YulExpressionStatement","src":"11072:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"10973:117:15"},{"body":{"nodeType":"YulBlock","src":"11185:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11202:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11205:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11195:6:15"},"nodeType":"YulFunctionCall","src":"11195:12:15"},"nodeType":"YulExpressionStatement","src":"11195:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"11096:117:15"},{"body":{"nodeType":"YulBlock","src":"11267:54:15","statements":[{"nodeType":"YulAssignment","src":"11277:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11295:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"11302:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11291:3:15"},"nodeType":"YulFunctionCall","src":"11291:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11311:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11307:3:15"},"nodeType":"YulFunctionCall","src":"11307:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11287:3:15"},"nodeType":"YulFunctionCall","src":"11287:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11277:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11250:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11260:6:15","type":""}],"src":"11219:102:15"},{"body":{"nodeType":"YulBlock","src":"11433:119:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11455:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11451:3:15"},"nodeType":"YulFunctionCall","src":"11451:14:15"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"11467:34:15","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11444:6:15"},"nodeType":"YulFunctionCall","src":"11444:58:15"},"nodeType":"YulExpressionStatement","src":"11444:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11523:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11531:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11519:3:15"},"nodeType":"YulFunctionCall","src":"11519:15:15"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"11536:8:15","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11512:6:15"},"nodeType":"YulFunctionCall","src":"11512:33:15"},"nodeType":"YulExpressionStatement","src":"11512:33:15"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11425:6:15","type":""}],"src":"11327:225:15"},{"body":{"nodeType":"YulBlock","src":"11664:108:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11686:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11694:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11682:3:15"},"nodeType":"YulFunctionCall","src":"11682:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"11698:66:15","type":"","value":"0x5c60da1b00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11675:6:15"},"nodeType":"YulFunctionCall","src":"11675:90:15"},"nodeType":"YulExpressionStatement","src":"11675:90:15"}]},"name":"store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11656:6:15","type":""}],"src":"11558:214:15"},{"body":{"nodeType":"YulBlock","src":"11884:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11906:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11914:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11902:3:15"},"nodeType":"YulFunctionCall","src":"11902:14:15"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11918:34:15","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11895:6:15"},"nodeType":"YulFunctionCall","src":"11895:58:15"},"nodeType":"YulExpressionStatement","src":"11895:58:15"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11876:6:15","type":""}],"src":"11778:182:15"},{"body":{"nodeType":"YulBlock","src":"12072:108:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12094:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12102:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12090:3:15"},"nodeType":"YulFunctionCall","src":"12090:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"12106:66:15","type":"","value":"0xf851a44000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12083:6:15"},"nodeType":"YulFunctionCall","src":"12083:90:15"},"nodeType":"YulExpressionStatement","src":"12083:90:15"}]},"name":"store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12064:6:15","type":""}],"src":"11966:214:15"},{"body":{"nodeType":"YulBlock","src":"12229:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"12286:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12295:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12298:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12288:6:15"},"nodeType":"YulFunctionCall","src":"12288:12:15"},"nodeType":"YulExpressionStatement","src":"12288:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12252:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12277:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12259:17:15"},"nodeType":"YulFunctionCall","src":"12259:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12249:2:15"},"nodeType":"YulFunctionCall","src":"12249:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12242:6:15"},"nodeType":"YulFunctionCall","src":"12242:43:15"},"nodeType":"YulIf","src":"12239:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12222:5:15","type":""}],"src":"12186:122:15"},{"body":{"nodeType":"YulBlock","src":"12365:87:15","statements":[{"body":{"nodeType":"YulBlock","src":"12430:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12439:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12442:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12432:6:15"},"nodeType":"YulFunctionCall","src":"12432:12:15"},"nodeType":"YulExpressionStatement","src":"12432:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12388:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12421:5:15"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"12395:25:15"},"nodeType":"YulFunctionCall","src":"12395:32:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12385:2:15"},"nodeType":"YulFunctionCall","src":"12385:43:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12378:6:15"},"nodeType":"YulFunctionCall","src":"12378:51:15"},"nodeType":"YulIf","src":"12375:71:15"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12358:5:15","type":""}],"src":"12314:138:15"},{"body":{"nodeType":"YulBlock","src":"12537:115:15","statements":[{"body":{"nodeType":"YulBlock","src":"12630:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12639:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12642:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12632:6:15"},"nodeType":"YulFunctionCall","src":"12632:12:15"},"nodeType":"YulExpressionStatement","src":"12632:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12560:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12621:5:15"}],"functionName":{"name":"cleanup_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulIdentifier","src":"12567:53:15"},"nodeType":"YulFunctionCall","src":"12567:60:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12557:2:15"},"nodeType":"YulFunctionCall","src":"12557:71:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12550:6:15"},"nodeType":"YulFunctionCall","src":"12550:79:15"},"nodeType":"YulIf","src":"12547:99:15"}]},"name":"validator_revert_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12530:5:15","type":""}],"src":"12458:194:15"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_ITransparentUpgradeableProxy_$716(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ITransparentUpgradeableProxy_$716(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ITransparentUpgradeableProxy_$716(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ITransparentUpgradeableProxy_$716(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ITransparentUpgradeableProxy_$716(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ITransparentUpgradeableProxy_$716(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29(memPtr) {\n\n        mstore(add(memPtr, 0), 0x5c60da1b00000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7(memPtr) {\n\n        mstore(add(memPtr, 0), 0xf851a44000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ITransparentUpgradeableProxy_$716(value) {\n        if iszero(eq(value, cleanup_t_contract$_ITransparentUpgradeableProxy_$716(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461012857806399a88ec414610144578063f2fde38b1461016d578063f3b7dead146101965761007b565b8063204e1c7a14610080578063715018a6146100bd5780637eff275e146100d45780638da5cb5b146100fd575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610778565b6101d3565b6040516100b49190610952565b60405180910390f35b3480156100c957600080fd5b506100d2610267565b005b3480156100e057600080fd5b506100fb60048036038101906100f691906107a5565b61027b565b005b34801561010957600080fd5b506101126102f2565b60405161011f9190610952565b60405180910390f35b610142600480360381019061013d91906107e5565b61031b565b005b34801561015057600080fd5b5061016b600480360381019061016691906107a5565b610396565b005b34801561017957600080fd5b50610194600480360381019061018f919061071e565b61040d565b005b3480156101a257600080fd5b506101bd60048036038101906101b89190610778565b610491565b6040516101ca9190610952565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516101fb90610928565b600060405180830381855afa9150503d8060008114610236576040519150601f19603f3d011682016040523d82523d6000602084013e61023b565b606091505b50915091508161024a57600080fd5b8080602001905181019061025e919061074b565b92505050919050565b61026f610525565b61027960006105a3565b565b610283610525565b8173ffffffffffffffffffffffffffffffffffffffff16638f283970826040518263ffffffff1660e01b81526004016102bc9190610952565b600060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610323610525565b8273ffffffffffffffffffffffffffffffffffffffff16634f1ef2863484846040518463ffffffff1660e01b815260040161035f92919061096d565b6000604051808303818588803b15801561037857600080fd5b505af115801561038c573d6000803e3d6000fd5b5050505050505050565b61039e610525565b8173ffffffffffffffffffffffffffffffffffffffff16633659cfe6826040518263ffffffff1660e01b81526004016103d79190610952565b600060405180830381600087803b1580156103f157600080fd5b505af1158015610405573d6000803e3d6000fd5b505050505050565b610415610525565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047c9061099d565b60405180910390fd5b61048e816105a3565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516104b99061093d565b600060405180830381855afa9150503d80600081146104f4576040519150601f19603f3d011682016040523d82523d6000602084013e6104f9565b606091505b50915091508161050857600080fd5b8080602001905181019061051c919061074b565b92505050919050565b61052d610667565b73ffffffffffffffffffffffffffffffffffffffff1661054b6102f2565b73ffffffffffffffffffffffffffffffffffffffff16146105a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610598906109bd565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600061068261067d84610a02565b6109dd565b90508281526020810184848401111561069e5761069d610b68565b5b6106a9848285610ac1565b509392505050565b6000813590506106c081610c52565b92915050565b6000815190506106d581610c69565b92915050565b600082601f8301126106f0576106ef610b63565b5b813561070084826020860161066f565b91505092915050565b60008135905061071881610c80565b92915050565b60006020828403121561073457610733610b72565b5b6000610742848285016106b1565b91505092915050565b60006020828403121561076157610760610b72565b5b600061076f848285016106c6565b91505092915050565b60006020828403121561078e5761078d610b72565b5b600061079c84828501610709565b91505092915050565b600080604083850312156107bc576107bb610b72565b5b60006107ca85828601610709565b92505060206107db858286016106b1565b9150509250929050565b6000806000606084860312156107fe576107fd610b72565b5b600061080c86828701610709565b935050602061081d868287016106b1565b925050604084013567ffffffffffffffff81111561083e5761083d610b6d565b5b61084a868287016106db565b9150509250925092565b61085d81610a6b565b82525050565b600061086e82610a33565b6108788185610a3e565b9350610888818560208601610ad0565b61089181610b77565b840191505092915050565b60006108a9602683610a5a565b91506108b482610b88565b604082019050919050565b60006108cc600483610a4f565b91506108d782610bd7565b600482019050919050565b60006108ef602083610a5a565b91506108fa82610c00565b602082019050919050565b6000610912600483610a4f565b915061091d82610c29565b600482019050919050565b6000610933826108bf565b9150819050919050565b600061094882610905565b9150819050919050565b60006020820190506109676000830184610854565b92915050565b60006040820190506109826000830185610854565b81810360208301526109948184610863565b90509392505050565b600060208201905081810360008301526109b68161089c565b9050919050565b600060208201905081810360008301526109d6816108e2565b9050919050565b60006109e76109f8565b90506109f38282610b03565b919050565b6000604051905090565b600067ffffffffffffffff821115610a1d57610a1c610b34565b5b610a2682610b77565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610a7682610aa1565b9050919050565b6000610a8882610aa1565b9050919050565b6000610a9a82610a6b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610aee578082015181840152602081019050610ad3565b83811115610afd576000848401525b50505050565b610b0c82610b77565b810181811067ffffffffffffffff82111715610b2b57610b2a610b34565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5c60da1b00000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7ff851a44000000000000000000000000000000000000000000000000000000000600082015250565b610c5b81610a6b565b8114610c6657600080fd5b50565b610c7281610a7d565b8114610c7d57600080fd5b50565b610c8981610a8f565b8114610c9457600080fd5b5056fea26469706673582212205c3db8eb731f42a667a3586c4c86749558b2e9d6d5f731367eb44e519299d74864736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x99A88EC4 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xF3B7DEAD EQ PUSH2 0x196 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x204E1C7A EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x7EFF275E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x267 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP1 PUSH2 0x928 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x74B JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F PUSH2 0x525 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x0 PUSH2 0x5A3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x283 PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8F283970 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x525 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4F1EF286 CALLVALUE DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP3 SWAP2 SWAP1 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3659CFE6 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x405 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x415 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47C SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48E DUP2 PUSH2 0x5A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x4B9 SWAP1 PUSH2 0x93D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x74B JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52D PUSH2 0x667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x54B PUSH2 0x2F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x598 SWAP1 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 PUSH2 0x67D DUP5 PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x9DD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x69E JUMPI PUSH2 0x69D PUSH2 0xB68 JUMP JUMPDEST JUMPDEST PUSH2 0x6A9 DUP5 DUP3 DUP6 PUSH2 0xAC1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C0 DUP2 PUSH2 0xC52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6D5 DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6F0 JUMPI PUSH2 0x6EF PUSH2 0xB63 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x700 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x66F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x718 DUP2 PUSH2 0xC80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x734 JUMPI PUSH2 0x733 PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x742 DUP5 DUP3 DUP6 ADD PUSH2 0x6B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x761 JUMPI PUSH2 0x760 PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x76F DUP5 DUP3 DUP6 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78E JUMPI PUSH2 0x78D PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x79C DUP5 DUP3 DUP6 ADD PUSH2 0x709 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7BC JUMPI PUSH2 0x7BB PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7CA DUP6 DUP3 DUP7 ADD PUSH2 0x709 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7DB DUP6 DUP3 DUP7 ADD PUSH2 0x6B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x80C DUP7 DUP3 DUP8 ADD PUSH2 0x709 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x81D DUP7 DUP3 DUP8 ADD PUSH2 0x6B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83E JUMPI PUSH2 0x83D PUSH2 0xB6D JUMP JUMPDEST JUMPDEST PUSH2 0x84A DUP7 DUP3 DUP8 ADD PUSH2 0x6DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x85D DUP2 PUSH2 0xA6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86E DUP3 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x878 DUP2 DUP6 PUSH2 0xA3E JUMP JUMPDEST SWAP4 POP PUSH2 0x888 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x891 DUP2 PUSH2 0xB77 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A9 PUSH1 0x26 DUP4 PUSH2 0xA5A JUMP JUMPDEST SWAP2 POP PUSH2 0x8B4 DUP3 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CC PUSH1 0x4 DUP4 PUSH2 0xA4F JUMP JUMPDEST SWAP2 POP PUSH2 0x8D7 DUP3 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EF PUSH1 0x20 DUP4 PUSH2 0xA5A JUMP JUMPDEST SWAP2 POP PUSH2 0x8FA DUP3 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x912 PUSH1 0x4 DUP4 PUSH2 0xA4F JUMP JUMPDEST SWAP2 POP PUSH2 0x91D DUP3 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP3 PUSH2 0x8BF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x948 DUP3 PUSH2 0x905 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x967 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x854 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x982 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x854 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x994 DUP2 DUP5 PUSH2 0x863 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9B6 DUP2 PUSH2 0x89C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9D6 DUP2 PUSH2 0x8E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E7 PUSH2 0x9F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F3 DUP3 DUP3 PUSH2 0xB03 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA1D JUMPI PUSH2 0xA1C PUSH2 0xB34 JUMP JUMPDEST JUMPDEST PUSH2 0xA26 DUP3 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA76 DUP3 PUSH2 0xAA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA88 DUP3 PUSH2 0xAA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9A DUP3 PUSH2 0xA6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAEE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAD3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xB0C DUP3 PUSH2 0xB77 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB2B JUMPI PUSH2 0xB2A PUSH2 0xB34 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xC5B DUP2 PUSH2 0xA6B JUMP JUMPDEST DUP2 EQ PUSH2 0xC66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC72 DUP2 PUSH2 0xA7D JUMP JUMPDEST DUP2 EQ PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC89 DUP2 PUSH2 0xA8F JUMP JUMPDEST DUP2 EQ PUSH2 0xC94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C RETURNDATASIZE 0xB8 0xEB PUSH20 0x1F42A667A3586C4C86749558B2E9D6D5F731367E 0xB4 0x4E MLOAD SWAP3 SWAP10 0xD7 BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"450:2409:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:438;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;;;;;;;;;;;:::i;:::-;;1842:149:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2612:245:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2196:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1248:420:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;650:438;747:7;924:12;938:23;973:5;965:25;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;923:82;;;;1023:7;1015:16;;;;;;1059:10;1048:33;;;;;;;;;;;;:::i;:::-;1041:40;;;;650:438;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1842:149:7:-;1094:13:0;:11;:13::i;:::-;1957:5:7::1;:17;;;1975:8;1957:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1842:149:::0;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2612:245:7:-;1094:13:0;:11;:13::i;:::-;2788:5:7::1;:22;;;2818:9;2829:14;2845:4;2788:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2612:245:::0;;;:::o;2196:150::-;1094:13:0;:11;:13::i;:::-;2308:5:7::1;:15;;;2324:14;2308:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2196:150:::0;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;;;2154:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1248:420:7:-;1336:7;1504:12;1518:23;1553:5;1545:25;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1503:82;;;;1603:7;1595:16;;;;;;1639:10;1628:33;;;;;;;;;;;;:::i;:::-;1621:40;;;;1248:420;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;640:96:10:-;693:7;719:10;712:17;;640:96;:::o;7:410:15:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:159::-;633:5;664:6;658:13;649:22;;680:41;715:5;680:41;:::i;:::-;568:159;;;;:::o;746:338::-;801:5;850:3;843:4;835:6;831:17;827:27;817:122;;858:79;;:::i;:::-;817:122;975:6;962:20;1000:78;1074:3;1066:6;1059:4;1051:6;1047:17;1000:78;:::i;:::-;991:87;;807:277;746:338;;;;:::o;1090:211::-;1172:5;1210:6;1197:20;1188:29;;1226:69;1289:5;1226:69;:::i;:::-;1090:211;;;;:::o;1307:329::-;1366:6;1415:2;1403:9;1394:7;1390:23;1386:32;1383:119;;;1421:79;;:::i;:::-;1383:119;1541:1;1566:53;1611:7;1602:6;1591:9;1587:22;1566:53;:::i;:::-;1556:63;;1512:117;1307:329;;;;:::o;1642:367::-;1720:6;1769:2;1757:9;1748:7;1744:23;1740:32;1737:119;;;1775:79;;:::i;:::-;1737:119;1895:1;1920:72;1984:7;1975:6;1964:9;1960:22;1920:72;:::i;:::-;1910:82;;1866:136;1642:367;;;;:::o;2015:401::-;2110:6;2159:2;2147:9;2138:7;2134:23;2130:32;2127:119;;;2165:79;;:::i;:::-;2127:119;2285:1;2310:89;2391:7;2382:6;2371:9;2367:22;2310:89;:::i;:::-;2300:99;;2256:153;2015:401;;;;:::o;2422:546::-;2526:6;2534;2583:2;2571:9;2562:7;2558:23;2554:32;2551:119;;;2589:79;;:::i;:::-;2551:119;2709:1;2734:89;2815:7;2806:6;2795:9;2791:22;2734:89;:::i;:::-;2724:99;;2680:153;2872:2;2898:53;2943:7;2934:6;2923:9;2919:22;2898:53;:::i;:::-;2888:63;;2843:118;2422:546;;;;;:::o;2974:869::-;3096:6;3104;3112;3161:2;3149:9;3140:7;3136:23;3132:32;3129:119;;;3167:79;;:::i;:::-;3129:119;3287:1;3312:89;3393:7;3384:6;3373:9;3369:22;3312:89;:::i;:::-;3302:99;;3258:153;3450:2;3476:53;3521:7;3512:6;3501:9;3497:22;3476:53;:::i;:::-;3466:63;;3421:118;3606:2;3595:9;3591:18;3578:32;3637:18;3629:6;3626:30;3623:117;;;3659:79;;:::i;:::-;3623:117;3764:62;3818:7;3809:6;3798:9;3794:22;3764:62;:::i;:::-;3754:72;;3549:287;2974:869;;;;;:::o;3849:118::-;3936:24;3954:5;3936:24;:::i;:::-;3931:3;3924:37;3849:118;;:::o;3973:360::-;4059:3;4087:38;4119:5;4087:38;:::i;:::-;4141:70;4204:6;4199:3;4141:70;:::i;:::-;4134:77;;4220:52;4265:6;4260:3;4253:4;4246:5;4242:16;4220:52;:::i;:::-;4297:29;4319:6;4297:29;:::i;:::-;4292:3;4288:39;4281:46;;4063:270;3973:360;;;;:::o;4339:366::-;4481:3;4502:67;4566:2;4561:3;4502:67;:::i;:::-;4495:74;;4578:93;4667:3;4578:93;:::i;:::-;4696:2;4691:3;4687:12;4680:19;;4339:366;;;:::o;4711:398::-;4870:3;4891:83;4972:1;4967:3;4891:83;:::i;:::-;4884:90;;4983:93;5072:3;4983:93;:::i;:::-;5101:1;5096:3;5092:11;5085:18;;4711:398;;;:::o;5115:366::-;5257:3;5278:67;5342:2;5337:3;5278:67;:::i;:::-;5271:74;;5354:93;5443:3;5354:93;:::i;:::-;5472:2;5467:3;5463:12;5456:19;;5115:366;;;:::o;5487:398::-;5646:3;5667:83;5748:1;5743:3;5667:83;:::i;:::-;5660:90;;5759:93;5848:3;5759:93;:::i;:::-;5877:1;5872:3;5868:11;5861:18;;5487:398;;;:::o;5891:379::-;6075:3;6097:147;6240:3;6097:147;:::i;:::-;6090:154;;6261:3;6254:10;;5891:379;;;:::o;6276:::-;6460:3;6482:147;6625:3;6482:147;:::i;:::-;6475:154;;6646:3;6639:10;;6276:379;;;:::o;6661:222::-;6754:4;6792:2;6781:9;6777:18;6769:26;;6805:71;6873:1;6862:9;6858:17;6849:6;6805:71;:::i;:::-;6661:222;;;;:::o;6889:419::-;7028:4;7066:2;7055:9;7051:18;7043:26;;7079:71;7147:1;7136:9;7132:17;7123:6;7079:71;:::i;:::-;7197:9;7191:4;7187:20;7182:2;7171:9;7167:18;7160:48;7225:76;7296:4;7287:6;7225:76;:::i;:::-;7217:84;;6889:419;;;;;:::o;7314:::-;7480:4;7518:2;7507:9;7503:18;7495:26;;7567:9;7561:4;7557:20;7553:1;7542:9;7538:17;7531:47;7595:131;7721:4;7595:131;:::i;:::-;7587:139;;7314:419;;;:::o;7739:::-;7905:4;7943:2;7932:9;7928:18;7920:26;;7992:9;7986:4;7982:20;7978:1;7967:9;7963:17;7956:47;8020:131;8146:4;8020:131;:::i;:::-;8012:139;;7739:419;;;:::o;8164:129::-;8198:6;8225:20;;:::i;:::-;8215:30;;8254:33;8282:4;8274:6;8254:33;:::i;:::-;8164:129;;;:::o;8299:75::-;8332:6;8365:2;8359:9;8349:19;;8299:75;:::o;8380:307::-;8441:4;8531:18;8523:6;8520:30;8517:56;;;8553:18;;:::i;:::-;8517:56;8591:29;8613:6;8591:29;:::i;:::-;8583:37;;8675:4;8669;8665:15;8657:23;;8380:307;;;:::o;8693:98::-;8744:6;8778:5;8772:12;8762:22;;8693:98;;;:::o;8797:168::-;8880:11;8914:6;8909:3;8902:19;8954:4;8949:3;8945:14;8930:29;;8797:168;;;;:::o;8971:147::-;9072:11;9109:3;9094:18;;8971:147;;;;:::o;9124:169::-;9208:11;9242:6;9237:3;9230:19;9282:4;9277:3;9273:14;9258:29;;9124:169;;;;:::o;9299:96::-;9336:7;9365:24;9383:5;9365:24;:::i;:::-;9354:35;;9299:96;;;:::o;9401:104::-;9446:7;9475:24;9493:5;9475:24;:::i;:::-;9464:35;;9401:104;;;:::o;9511:132::-;9584:7;9613:24;9631:5;9613:24;:::i;:::-;9602:35;;9511:132;;;:::o;9649:126::-;9686:7;9726:42;9719:5;9715:54;9704:65;;9649:126;;;:::o;9781:154::-;9865:6;9860:3;9855;9842:30;9927:1;9918:6;9913:3;9909:16;9902:27;9781:154;;;:::o;9941:307::-;10009:1;10019:113;10033:6;10030:1;10027:13;10019:113;;;10118:1;10113:3;10109:11;10103:18;10099:1;10094:3;10090:11;10083:39;10055:2;10052:1;10048:10;10043:15;;10019:113;;;10150:6;10147:1;10144:13;10141:101;;;10230:1;10221:6;10216:3;10212:16;10205:27;10141:101;9990:258;9941:307;;;:::o;10254:281::-;10337:27;10359:4;10337:27;:::i;:::-;10329:6;10325:40;10467:6;10455:10;10452:22;10431:18;10419:10;10416:34;10413:62;10410:88;;;10478:18;;:::i;:::-;10410:88;10518:10;10514:2;10507:22;10297:238;10254:281;;:::o;10541:180::-;10589:77;10586:1;10579:88;10686:4;10683:1;10676:15;10710:4;10707:1;10700:15;10727:117;10836:1;10833;10826:12;10850:117;10959:1;10956;10949:12;10973:117;11082:1;11079;11072:12;11096:117;11205:1;11202;11195:12;11219:102;11260:6;11311:2;11307:7;11302:2;11295:5;11291:14;11287:28;11277:38;;11219:102;;;:::o;11327:225::-;11467:34;11463:1;11455:6;11451:14;11444:58;11536:8;11531:2;11523:6;11519:15;11512:33;11327:225;:::o;11558:214::-;11698:66;11694:1;11686:6;11682:14;11675:90;11558:214;:::o;11778:182::-;11918:34;11914:1;11906:6;11902:14;11895:58;11778:182;:::o;11966:214::-;12106:66;12102:1;12094:6;12090:14;12083:90;11966:214;:::o;12186:122::-;12259:24;12277:5;12259:24;:::i;:::-;12252:5;12249:35;12239:63;;12298:1;12295;12288:12;12239:63;12186:122;:::o;12314:138::-;12395:32;12421:5;12395:32;:::i;:::-;12388:5;12385:43;12375:71;;12442:1;12439;12432:12;12375:71;12314:138;:::o;12458:194::-;12567:60;12621:5;12567:60;:::i;:::-;12560:5;12557:71;12547:99;;12642:1;12639;12632:12;12547:99;12458:194;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"655400","executionCost":"infinite","totalCost":"infinite"},"external":{"changeProxyAdmin(address,address)":"infinite","getProxyAdmin(address)":"infinite","getProxyImplementation(address)":"infinite","owner()":"2589","renounceOwnership()":"30421","transferOwnership(address)":"30791","upgrade(address,address)":"infinite","upgradeAndCall(address,address,bytes)":"infinite"}},"methodIdentifiers":{"changeProxyAdmin(address,address)":"7eff275e","getProxyAdmin(address)":"f3b7dead","getProxyImplementation(address)":"204e1c7a","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgrade(address,address)":"99a88ec4","upgradeAndCall(address,address,bytes)":"9623609d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeProxyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\",\"kind\":\"dev\",\"methods\":{\"changeProxyAdmin(address,address)\":{\"details\":\"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`.\"},\"getProxyAdmin(address)\":{\"details\":\"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"getProxyImplementation(address)\":{\"details\":\"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgrade(address,address)\":{\"details\":\"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":\"ProxyAdmin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.3) (proxy/transparent/ProxyAdmin.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./TransparentUpgradeableProxy.sol\\\";\\nimport \\\"../../access/Ownable.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract ProxyAdmin is Ownable {\\n    /**\\n     * @dev Returns the current implementation of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyImplementation(ITransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"implementation()\\\")) == 0x5c60da1b\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"5c60da1b\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Returns the current admin of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyAdmin(ITransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"admin()\\\")) == 0xf851a440\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"f851a440\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Changes the admin of `proxy` to `newAdmin`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the current admin of `proxy`.\\n     */\\n    function changeProxyAdmin(ITransparentUpgradeableProxy proxy, address newAdmin) public virtual onlyOwner {\\n        proxy.changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgrade(ITransparentUpgradeableProxy proxy, address implementation) public virtual onlyOwner {\\n        proxy.upgradeTo(implementation);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\\n     * {TransparentUpgradeableProxy-upgradeToAndCall}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgradeAndCall(\\n        ITransparentUpgradeableProxy proxy,\\n        address implementation,\\n        bytes memory data\\n    ) public payable virtual onlyOwner {\\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\\n    }\\n}\\n\",\"keccak256\":\"0x8e99882a991853dc446278576c8cb9b3a5ded84642e9bcc917b1677807c2f18c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\\n * include them in the ABI so this interface must be used to interact with it.\\n */\\ninterface ITransparentUpgradeableProxy is IERC1967 {\\n    function admin() external view returns (address);\\n\\n    function implementation() external view returns (address);\\n\\n    function changeAdmin(address) external;\\n\\n    function upgradeTo(address) external;\\n\\n    function upgradeToAndCall(address, bytes memory) external payable;\\n}\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n *\\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\\n * implementation.\\n *\\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     *\\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\\n     * implementation provides a function with the same selector.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\\n     */\\n    function _fallback() internal virtual override {\\n        if (msg.sender == _getAdmin()) {\\n            bytes memory ret;\\n            bytes4 selector = msg.sig;\\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\\n                ret = _dispatchUpgradeTo();\\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\\n                ret = _dispatchUpgradeToAndCall();\\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\\n                ret = _dispatchChangeAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\\n                ret = _dispatchAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\\n                ret = _dispatchImplementation();\\n            } else {\\n                revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n            }\\n            assembly {\\n                return(add(ret, 0x20), mload(ret))\\n            }\\n        } else {\\n            super._fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function _dispatchAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address admin = _getAdmin();\\n        return abi.encode(admin);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function _dispatchImplementation() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address implementation = _implementation();\\n        return abi.encode(implementation);\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _dispatchChangeAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newAdmin = abi.decode(msg.data[4:], (address));\\n        _changeAdmin(newAdmin);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     */\\n    function _dispatchUpgradeTo() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newImplementation = abi.decode(msg.data[4:], (address));\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     */\\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\\n        _upgradeToAndCall(newImplementation, data, true);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\\n     */\\n    function _requireZeroValue() private {\\n        require(msg.value == 0);\\n    }\\n}\\n\",\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"ITransparentUpgradeableProxy":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"changeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and some of its functions are implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"admin()":"f851a440","changeAdmin(address)":"8f283970","implementation()":"5c60da1b","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and some of its functions are implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"ITransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\\n * include them in the ABI so this interface must be used to interact with it.\\n */\\ninterface ITransparentUpgradeableProxy is IERC1967 {\\n    function admin() external view returns (address);\\n\\n    function implementation() external view returns (address);\\n\\n    function changeAdmin(address) external;\\n\\n    function upgradeTo(address) external;\\n\\n    function upgradeToAndCall(address, bytes memory) external payable;\\n}\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n *\\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\\n * implementation.\\n *\\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     *\\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\\n     * implementation provides a function with the same selector.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\\n     */\\n    function _fallback() internal virtual override {\\n        if (msg.sender == _getAdmin()) {\\n            bytes memory ret;\\n            bytes4 selector = msg.sig;\\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\\n                ret = _dispatchUpgradeTo();\\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\\n                ret = _dispatchUpgradeToAndCall();\\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\\n                ret = _dispatchChangeAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\\n                ret = _dispatchAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\\n                ret = _dispatchImplementation();\\n            } else {\\n                revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n            }\\n            assembly {\\n                return(add(ret, 0x20), mload(ret))\\n            }\\n        } else {\\n            super._fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function _dispatchAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address admin = _getAdmin();\\n        return abi.encode(admin);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function _dispatchImplementation() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address implementation = _implementation();\\n        return abi.encode(implementation);\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _dispatchChangeAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newAdmin = abi.decode(msg.data[4:], (address));\\n        _changeAdmin(newAdmin);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     */\\n    function _dispatchUpgradeTo() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newImplementation = abi.decode(msg.data[4:], (address));\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     */\\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\\n        _upgradeToAndCall(newImplementation, data, true);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\\n     */\\n    function _requireZeroValue() private {\\n        require(msg.value == 0);\\n    }\\n}\\n\",\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"TransparentUpgradeableProxy":{"abi":[{"inputs":[{"internalType":"address","name":"_logic","type":"address"},{"internalType":"address","name":"admin_","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy. NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.","kind":"dev","methods":{"constructor":{"details":"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_167":{"entryPoint":null,"id":167,"parameterSlots":2,"returnSlots":0},"@_738":{"entryPoint":null,"id":738,"parameterSlots":3,"returnSlots":0},"@_changeAdmin_392":{"entryPoint":158,"id":392,"parameterSlots":1,"returnSlots":0},"@_getAdmin_349":{"entryPoint":393,"id":349,"parameterSlots":0,"returnSlots":1},"@_revert_1334":{"entryPoint":1279,"id":1334,"parameterSlots":2,"returnSlots":0},"@_setAdmin_375":{"entryPoint":493,"id":375,"parameterSlots":1,"returnSlots":0},"@_setImplementation_234":{"entryPoint":734,"id":234,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCall_279":{"entryPoint":91,"id":279,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_249":{"entryPoint":252,"id":249,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1222":{"entryPoint":339,"id":1222,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1251":{"entryPoint":948,"id":1251,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1389":{"entryPoint":1094,"id":1389,"parameterSlots":1,"returnSlots":1},"@isContract_1023":{"entryPoint":1104,"id":1023,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_1290":{"entryPoint":1139,"id":1290,"parameterSlots":4,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":1362,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1437,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":1460,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory":{"entryPoint":1511,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1634,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":1706,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack":{"entryPoint":1771,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack":{"entryPoint":1810,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":1849,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1888,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":1913,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1994,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2028,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2062,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":2096,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2127,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":2137,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2191,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2202,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2213,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2224,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2241,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2261,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2293,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":2347,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":2401,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2448,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2453,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2458,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2463,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2468,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5":{"entryPoint":2485,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65":{"entryPoint":2564,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":2643,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9456:15","statements":[{"body":{"nodeType":"YulBlock","src":"101:325:15","statements":[{"nodeType":"YulAssignment","src":"111:74:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"177:6:15"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"136:40:15"},"nodeType":"YulFunctionCall","src":"136:48:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"120:15:15"},"nodeType":"YulFunctionCall","src":"120:65:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"111:5:15"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"201:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"208:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"194:6:15"},"nodeType":"YulFunctionCall","src":"194:21:15"},"nodeType":"YulExpressionStatement","src":"194:21:15"},{"nodeType":"YulVariableDeclaration","src":"224:27:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"239:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:15"},"nodeType":"YulFunctionCall","src":"235:16:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"228:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"289:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"291:77:15"},"nodeType":"YulFunctionCall","src":"291:79:15"},"nodeType":"YulExpressionStatement","src":"291:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"270:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"275:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"266:3:15"},"nodeType":"YulFunctionCall","src":"266:16:15"},{"name":"end","nodeType":"YulIdentifier","src":"284:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"263:2:15"},"nodeType":"YulFunctionCall","src":"263:25:15"},"nodeType":"YulIf","src":"260:112:15"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"403:3:15"},{"name":"dst","nodeType":"YulIdentifier","src":"408:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"413:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"381:21:15"},"nodeType":"YulFunctionCall","src":"381:39:15"},"nodeType":"YulExpressionStatement","src":"381:39:15"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"74:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"79:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"87:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"95:5:15","type":""}],"src":"7:419:15"},{"body":{"nodeType":"YulBlock","src":"495:80:15","statements":[{"nodeType":"YulAssignment","src":"505:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"520:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"514:5:15"},"nodeType":"YulFunctionCall","src":"514:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"505:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"563:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"536:26:15"},"nodeType":"YulFunctionCall","src":"536:33:15"},"nodeType":"YulExpressionStatement","src":"536:33:15"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"473:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"481:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"489:5:15","type":""}],"src":"432:143:15"},{"body":{"nodeType":"YulBlock","src":"666:281:15","statements":[{"body":{"nodeType":"YulBlock","src":"715:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"717:77:15"},"nodeType":"YulFunctionCall","src":"717:79:15"},"nodeType":"YulExpressionStatement","src":"717:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"694:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"702:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"690:3:15"},"nodeType":"YulFunctionCall","src":"690:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"709:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"686:3:15"},"nodeType":"YulFunctionCall","src":"686:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"679:6:15"},"nodeType":"YulFunctionCall","src":"679:35:15"},"nodeType":"YulIf","src":"676:122:15"},{"nodeType":"YulVariableDeclaration","src":"807:27:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"827:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"821:5:15"},"nodeType":"YulFunctionCall","src":"821:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"811:6:15","type":""}]},{"nodeType":"YulAssignment","src":"843:98:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"914:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"922:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"910:3:15"},"nodeType":"YulFunctionCall","src":"910:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"929:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"937:3:15"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"852:57:15"},"nodeType":"YulFunctionCall","src":"852:89:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"843:5:15"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"660:5:15","type":""}],"src":"594:353:15"},{"body":{"nodeType":"YulBlock","src":"1073:714:15","statements":[{"body":{"nodeType":"YulBlock","src":"1119:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1121:77:15"},"nodeType":"YulFunctionCall","src":"1121:79:15"},"nodeType":"YulExpressionStatement","src":"1121:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1094:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1103:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1090:3:15"},"nodeType":"YulFunctionCall","src":"1090:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1115:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1086:3:15"},"nodeType":"YulFunctionCall","src":"1086:32:15"},"nodeType":"YulIf","src":"1083:119:15"},{"nodeType":"YulBlock","src":"1212:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1227:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1241:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1231:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1256:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1302:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1313:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1298:3:15"},"nodeType":"YulFunctionCall","src":"1298:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1322:7:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1266:31:15"},"nodeType":"YulFunctionCall","src":"1266:64:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1256:6:15"}]}]},{"nodeType":"YulBlock","src":"1350:129:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1365:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1379:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1369:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1395:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1441:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1452:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1437:3:15"},"nodeType":"YulFunctionCall","src":"1437:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1461:7:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1405:31:15"},"nodeType":"YulFunctionCall","src":"1405:64:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1395:6:15"}]}]},{"nodeType":"YulBlock","src":"1489:291:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1504:39:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1528:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1539:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1524:3:15"},"nodeType":"YulFunctionCall","src":"1524:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1518:5:15"},"nodeType":"YulFunctionCall","src":"1518:25:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1508:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1590:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1592:77:15"},"nodeType":"YulFunctionCall","src":"1592:79:15"},"nodeType":"YulExpressionStatement","src":"1592:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1562:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1570:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1559:2:15"},"nodeType":"YulFunctionCall","src":"1559:30:15"},"nodeType":"YulIf","src":"1556:117:15"},{"nodeType":"YulAssignment","src":"1687:83:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1742:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1753:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1738:3:15"},"nodeType":"YulFunctionCall","src":"1738:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1762:7:15"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1697:40:15"},"nodeType":"YulFunctionCall","src":"1697:73:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1687:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1027:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1038:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1050:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1058:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1066:6:15","type":""}],"src":"953:834:15"},{"body":{"nodeType":"YulBlock","src":"1858:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1875:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1898:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1880:17:15"},"nodeType":"YulFunctionCall","src":"1880:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:15"},"nodeType":"YulFunctionCall","src":"1868:37:15"},"nodeType":"YulExpressionStatement","src":"1868:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1846:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1853:3:15","type":""}],"src":"1793:118:15"},{"body":{"nodeType":"YulBlock","src":"2025:265:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2035:52:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2081:5:15"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2049:31:15"},"nodeType":"YulFunctionCall","src":"2049:38:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2039:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2096:95:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2179:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2184:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"2103:75:15"},"nodeType":"YulFunctionCall","src":"2103:88:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2096:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2226:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2233:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2222:3:15"},"nodeType":"YulFunctionCall","src":"2222:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"2240:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2245:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2200:21:15"},"nodeType":"YulFunctionCall","src":"2200:52:15"},"nodeType":"YulExpressionStatement","src":"2200:52:15"},{"nodeType":"YulAssignment","src":"2261:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2272:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2277:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2268:3:15"},"nodeType":"YulFunctionCall","src":"2268:16:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2261:3:15"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2006:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2013:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2021:3:15","type":""}],"src":"1917:373:15"},{"body":{"nodeType":"YulBlock","src":"2388:272:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2398:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2445:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2412:32:15"},"nodeType":"YulFunctionCall","src":"2412:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2402:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2460:78:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2526:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2531:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2467:58:15"},"nodeType":"YulFunctionCall","src":"2467:71:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2460:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2573:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2580:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2569:3:15"},"nodeType":"YulFunctionCall","src":"2569:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"2587:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2592:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2547:21:15"},"nodeType":"YulFunctionCall","src":"2547:52:15"},"nodeType":"YulExpressionStatement","src":"2547:52:15"},{"nodeType":"YulAssignment","src":"2608:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2619:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2646:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2624:21:15"},"nodeType":"YulFunctionCall","src":"2624:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2615:3:15"},"nodeType":"YulFunctionCall","src":"2615:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2608:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2369:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2376:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2384:3:15","type":""}],"src":"2296:364:15"},{"body":{"nodeType":"YulBlock","src":"2812:220:15","statements":[{"nodeType":"YulAssignment","src":"2822:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2888:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2893:2:15","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2829:58:15"},"nodeType":"YulFunctionCall","src":"2829:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2822:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2994:3:15"}],"functionName":{"name":"store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","nodeType":"YulIdentifier","src":"2905:88:15"},"nodeType":"YulFunctionCall","src":"2905:93:15"},"nodeType":"YulExpressionStatement","src":"2905:93:15"},{"nodeType":"YulAssignment","src":"3007:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3018:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3023:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3014:3:15"},"nodeType":"YulFunctionCall","src":"3014:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3007:3:15"}]}]},"name":"abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2800:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2808:3:15","type":""}],"src":"2666:366:15"},{"body":{"nodeType":"YulBlock","src":"3184:220:15","statements":[{"nodeType":"YulAssignment","src":"3194:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3260:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3265:2:15","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3201:58:15"},"nodeType":"YulFunctionCall","src":"3201:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3194:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3366:3:15"}],"functionName":{"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nodeType":"YulIdentifier","src":"3277:88:15"},"nodeType":"YulFunctionCall","src":"3277:93:15"},"nodeType":"YulExpressionStatement","src":"3277:93:15"},{"nodeType":"YulAssignment","src":"3379:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3390:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3395:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3386:3:15"},"nodeType":"YulFunctionCall","src":"3386:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3379:3:15"}]}]},"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3172:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3180:3:15","type":""}],"src":"3038:366:15"},{"body":{"nodeType":"YulBlock","src":"3556:220:15","statements":[{"nodeType":"YulAssignment","src":"3566:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3632:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3637:2:15","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3573:58:15"},"nodeType":"YulFunctionCall","src":"3573:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3566:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3738:3:15"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"3649:88:15"},"nodeType":"YulFunctionCall","src":"3649:93:15"},"nodeType":"YulExpressionStatement","src":"3649:93:15"},{"nodeType":"YulAssignment","src":"3751:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3762:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3767:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3758:3:15"},"nodeType":"YulFunctionCall","src":"3758:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3751:3:15"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3544:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3552:3:15","type":""}],"src":"3410:366:15"},{"body":{"nodeType":"YulBlock","src":"3916:137:15","statements":[{"nodeType":"YulAssignment","src":"3927:100:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4014:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"4023:3:15"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"3934:79:15"},"nodeType":"YulFunctionCall","src":"3934:93:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3927:3:15"}]},{"nodeType":"YulAssignment","src":"4037:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"4044:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4037:3:15"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3895:3:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3901:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3912:3:15","type":""}],"src":"3782:271:15"},{"body":{"nodeType":"YulBlock","src":"4185:206:15","statements":[{"nodeType":"YulAssignment","src":"4195:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4207:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4218:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4203:3:15"},"nodeType":"YulFunctionCall","src":"4203:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4195:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4275:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4288:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4299:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4284:3:15"},"nodeType":"YulFunctionCall","src":"4284:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4231:43:15"},"nodeType":"YulFunctionCall","src":"4231:71:15"},"nodeType":"YulExpressionStatement","src":"4231:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4356:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4369:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4380:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4365:3:15"},"nodeType":"YulFunctionCall","src":"4365:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4312:43:15"},"nodeType":"YulFunctionCall","src":"4312:72:15"},"nodeType":"YulExpressionStatement","src":"4312:72:15"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4149:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4161:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4169:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4180:4:15","type":""}],"src":"4059:332:15"},{"body":{"nodeType":"YulBlock","src":"4515:195:15","statements":[{"nodeType":"YulAssignment","src":"4525:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4537:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4548:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4533:3:15"},"nodeType":"YulFunctionCall","src":"4533:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4525:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4572:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4583:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4568:3:15"},"nodeType":"YulFunctionCall","src":"4568:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4591:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4597:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4587:3:15"},"nodeType":"YulFunctionCall","src":"4587:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4561:6:15"},"nodeType":"YulFunctionCall","src":"4561:47:15"},"nodeType":"YulExpressionStatement","src":"4561:47:15"},{"nodeType":"YulAssignment","src":"4617:86:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4689:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"4698:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4625:63:15"},"nodeType":"YulFunctionCall","src":"4625:78:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4617:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4487:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4499:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4510:4:15","type":""}],"src":"4397:313:15"},{"body":{"nodeType":"YulBlock","src":"4887:248:15","statements":[{"nodeType":"YulAssignment","src":"4897:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4909:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4920:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4905:3:15"},"nodeType":"YulFunctionCall","src":"4905:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4897:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4944:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4955:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4940:3:15"},"nodeType":"YulFunctionCall","src":"4940:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4963:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4969:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4959:3:15"},"nodeType":"YulFunctionCall","src":"4959:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4933:6:15"},"nodeType":"YulFunctionCall","src":"4933:47:15"},"nodeType":"YulExpressionStatement","src":"4933:47:15"},{"nodeType":"YulAssignment","src":"4989:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5123:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4997:124:15"},"nodeType":"YulFunctionCall","src":"4997:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4989:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4867:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4882:4:15","type":""}],"src":"4716:419:15"},{"body":{"nodeType":"YulBlock","src":"5312:248:15","statements":[{"nodeType":"YulAssignment","src":"5322:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5334:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5345:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5330:3:15"},"nodeType":"YulFunctionCall","src":"5330:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5322:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5369:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5380:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5365:3:15"},"nodeType":"YulFunctionCall","src":"5365:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5388:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5394:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5384:3:15"},"nodeType":"YulFunctionCall","src":"5384:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5358:6:15"},"nodeType":"YulFunctionCall","src":"5358:47:15"},"nodeType":"YulExpressionStatement","src":"5358:47:15"},{"nodeType":"YulAssignment","src":"5414:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5548:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5422:124:15"},"nodeType":"YulFunctionCall","src":"5422:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5414:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5292:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5307:4:15","type":""}],"src":"5141:419:15"},{"body":{"nodeType":"YulBlock","src":"5737:248:15","statements":[{"nodeType":"YulAssignment","src":"5747:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5759:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5770:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5755:3:15"},"nodeType":"YulFunctionCall","src":"5755:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5747:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5794:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5805:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5790:3:15"},"nodeType":"YulFunctionCall","src":"5790:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5813:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5819:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5809:3:15"},"nodeType":"YulFunctionCall","src":"5809:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5783:6:15"},"nodeType":"YulFunctionCall","src":"5783:47:15"},"nodeType":"YulExpressionStatement","src":"5783:47:15"},{"nodeType":"YulAssignment","src":"5839:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5973:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5847:124:15"},"nodeType":"YulFunctionCall","src":"5847:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5839:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5717:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5732:4:15","type":""}],"src":"5566:419:15"},{"body":{"nodeType":"YulBlock","src":"6032:88:15","statements":[{"nodeType":"YulAssignment","src":"6042:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6052:18:15"},"nodeType":"YulFunctionCall","src":"6052:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6042:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6101:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"6109:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6081:19:15"},"nodeType":"YulFunctionCall","src":"6081:33:15"},"nodeType":"YulExpressionStatement","src":"6081:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6016:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6025:6:15","type":""}],"src":"5991:129:15"},{"body":{"nodeType":"YulBlock","src":"6166:35:15","statements":[{"nodeType":"YulAssignment","src":"6176:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6192:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6186:5:15"},"nodeType":"YulFunctionCall","src":"6186:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6176:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6159:6:15","type":""}],"src":"6126:75:15"},{"body":{"nodeType":"YulBlock","src":"6273:241:15","statements":[{"body":{"nodeType":"YulBlock","src":"6378:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6380:16:15"},"nodeType":"YulFunctionCall","src":"6380:18:15"},"nodeType":"YulExpressionStatement","src":"6380:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6350:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"6358:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6347:2:15"},"nodeType":"YulFunctionCall","src":"6347:30:15"},"nodeType":"YulIf","src":"6344:56:15"},{"nodeType":"YulAssignment","src":"6410:37:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6440:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6418:21:15"},"nodeType":"YulFunctionCall","src":"6418:29:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6410:4:15"}]},{"nodeType":"YulAssignment","src":"6484:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6496:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"6502:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6492:3:15"},"nodeType":"YulFunctionCall","src":"6492:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6484:4:15"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6257:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6268:4:15","type":""}],"src":"6207:307:15"},{"body":{"nodeType":"YulBlock","src":"6578:40:15","statements":[{"nodeType":"YulAssignment","src":"6589:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6605:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6599:5:15"},"nodeType":"YulFunctionCall","src":"6599:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6589:6:15"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6561:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6571:6:15","type":""}],"src":"6520:98:15"},{"body":{"nodeType":"YulBlock","src":"6683:40:15","statements":[{"nodeType":"YulAssignment","src":"6694:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6710:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6704:5:15"},"nodeType":"YulFunctionCall","src":"6704:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6694:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6666:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6676:6:15","type":""}],"src":"6624:99:15"},{"body":{"nodeType":"YulBlock","src":"6842:34:15","statements":[{"nodeType":"YulAssignment","src":"6852:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"6867:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6852:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6814:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"6819:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6830:11:15","type":""}],"src":"6729:147:15"},{"body":{"nodeType":"YulBlock","src":"6978:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6995:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"7000:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6988:6:15"},"nodeType":"YulFunctionCall","src":"6988:19:15"},"nodeType":"YulExpressionStatement","src":"6988:19:15"},{"nodeType":"YulAssignment","src":"7016:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7035:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7040:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7031:3:15"},"nodeType":"YulFunctionCall","src":"7031:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7016:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6950:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"6955:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6966:11:15","type":""}],"src":"6882:169:15"},{"body":{"nodeType":"YulBlock","src":"7102:51:15","statements":[{"nodeType":"YulAssignment","src":"7112:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7141:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7123:17:15"},"nodeType":"YulFunctionCall","src":"7123:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7112:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7084:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7094:7:15","type":""}],"src":"7057:96:15"},{"body":{"nodeType":"YulBlock","src":"7204:81:15","statements":[{"nodeType":"YulAssignment","src":"7214:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7229:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"7236:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7225:3:15"},"nodeType":"YulFunctionCall","src":"7225:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7214:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7186:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7196:7:15","type":""}],"src":"7159:126:15"},{"body":{"nodeType":"YulBlock","src":"7340:258:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7350:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7359:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7354:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"7419:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7444:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"7449:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:15"},"nodeType":"YulFunctionCall","src":"7440:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7463:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"7468:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7459:3:15"},"nodeType":"YulFunctionCall","src":"7459:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7453:5:15"},"nodeType":"YulFunctionCall","src":"7453:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7433:6:15"},"nodeType":"YulFunctionCall","src":"7433:39:15"},"nodeType":"YulExpressionStatement","src":"7433:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7380:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"7383:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7377:2:15"},"nodeType":"YulFunctionCall","src":"7377:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7391:19:15","statements":[{"nodeType":"YulAssignment","src":"7393:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7402:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"7405:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7398:3:15"},"nodeType":"YulFunctionCall","src":"7398:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7393:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"7373:3:15","statements":[]},"src":"7369:113:15"},{"body":{"nodeType":"YulBlock","src":"7516:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7566:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"7571:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7562:3:15"},"nodeType":"YulFunctionCall","src":"7562:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"7580:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7555:6:15"},"nodeType":"YulFunctionCall","src":"7555:27:15"},"nodeType":"YulExpressionStatement","src":"7555:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7497:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"7500:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7494:2:15"},"nodeType":"YulFunctionCall","src":"7494:13:15"},"nodeType":"YulIf","src":"7491:101:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7322:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7327:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"7332:6:15","type":""}],"src":"7291:307:15"},{"body":{"nodeType":"YulBlock","src":"7647:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7657:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7679:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7709:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7687:21:15"},"nodeType":"YulFunctionCall","src":"7687:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7675:3:15"},"nodeType":"YulFunctionCall","src":"7675:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7661:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"7826:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7828:16:15"},"nodeType":"YulFunctionCall","src":"7828:18:15"},"nodeType":"YulExpressionStatement","src":"7828:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7769:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"7781:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7766:2:15"},"nodeType":"YulFunctionCall","src":"7766:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7805:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7817:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7802:2:15"},"nodeType":"YulFunctionCall","src":"7802:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7763:2:15"},"nodeType":"YulFunctionCall","src":"7763:62:15"},"nodeType":"YulIf","src":"7760:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7864:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7868:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7857:6:15"},"nodeType":"YulFunctionCall","src":"7857:22:15"},"nodeType":"YulExpressionStatement","src":"7857:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7633:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"7641:4:15","type":""}],"src":"7604:281:15"},{"body":{"nodeType":"YulBlock","src":"7919:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7936:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7939:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7929:6:15"},"nodeType":"YulFunctionCall","src":"7929:88:15"},"nodeType":"YulExpressionStatement","src":"7929:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8033:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8036:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8026:6:15"},"nodeType":"YulFunctionCall","src":"8026:15:15"},"nodeType":"YulExpressionStatement","src":"8026:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8057:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8060:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8050:6:15"},"nodeType":"YulFunctionCall","src":"8050:15:15"},"nodeType":"YulExpressionStatement","src":"8050:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7891:180:15"},{"body":{"nodeType":"YulBlock","src":"8166:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8183:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8186:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8176:6:15"},"nodeType":"YulFunctionCall","src":"8176:12:15"},"nodeType":"YulExpressionStatement","src":"8176:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"8077:117:15"},{"body":{"nodeType":"YulBlock","src":"8289:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8306:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8299:6:15"},"nodeType":"YulFunctionCall","src":"8299:12:15"},"nodeType":"YulExpressionStatement","src":"8299:12:15"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"8200:117:15"},{"body":{"nodeType":"YulBlock","src":"8412:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8429:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8432:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8422:6:15"},"nodeType":"YulFunctionCall","src":"8422:12:15"},"nodeType":"YulExpressionStatement","src":"8422:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"8323:117:15"},{"body":{"nodeType":"YulBlock","src":"8535:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8552:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8555:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8545:6:15"},"nodeType":"YulFunctionCall","src":"8545:12:15"},"nodeType":"YulExpressionStatement","src":"8545:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"8446:117:15"},{"body":{"nodeType":"YulBlock","src":"8617:54:15","statements":[{"nodeType":"YulAssignment","src":"8627:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8645:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"8652:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8641:3:15"},"nodeType":"YulFunctionCall","src":"8641:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8661:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8657:3:15"},"nodeType":"YulFunctionCall","src":"8657:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8637:3:15"},"nodeType":"YulFunctionCall","src":"8637:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8627:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8600:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8610:6:15","type":""}],"src":"8569:102:15"},{"body":{"nodeType":"YulBlock","src":"8783:119:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8805:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8813:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8801:3:15"},"nodeType":"YulFunctionCall","src":"8801:14:15"},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"8817:34:15","type":"","value":"ERC1967: new admin is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8794:6:15"},"nodeType":"YulFunctionCall","src":"8794:58:15"},"nodeType":"YulExpressionStatement","src":"8794:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8873:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8881:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8869:3:15"},"nodeType":"YulFunctionCall","src":"8869:15:15"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8886:8:15","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8862:6:15"},"nodeType":"YulFunctionCall","src":"8862:33:15"},"nodeType":"YulExpressionStatement","src":"8862:33:15"}]},"name":"store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8775:6:15","type":""}],"src":"8677:225:15"},{"body":{"nodeType":"YulBlock","src":"9014:126:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9036:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"9044:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9032:3:15"},"nodeType":"YulFunctionCall","src":"9032:14:15"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"9048:34:15","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9025:6:15"},"nodeType":"YulFunctionCall","src":"9025:58:15"},"nodeType":"YulExpressionStatement","src":"9025:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9104:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"9112:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9100:3:15"},"nodeType":"YulFunctionCall","src":"9100:15:15"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"9117:15:15","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9093:6:15"},"nodeType":"YulFunctionCall","src":"9093:40:15"},"nodeType":"YulExpressionStatement","src":"9093:40:15"}]},"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9006:6:15","type":""}],"src":"8908:232:15"},{"body":{"nodeType":"YulBlock","src":"9252:73:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9274:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"9282:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9270:3:15"},"nodeType":"YulFunctionCall","src":"9270:14:15"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"9286:31:15","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9263:6:15"},"nodeType":"YulFunctionCall","src":"9263:55:15"},"nodeType":"YulExpressionStatement","src":"9263:55:15"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9244:6:15","type":""}],"src":"9146:179:15"},{"body":{"nodeType":"YulBlock","src":"9374:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"9431:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9440:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9443:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9433:6:15"},"nodeType":"YulFunctionCall","src":"9433:12:15"},"nodeType":"YulExpressionStatement","src":"9433:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9397:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9422:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9404:17:15"},"nodeType":"YulFunctionCall","src":"9404:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9394:2:15"},"nodeType":"YulFunctionCall","src":"9394:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9387:6:15"},"nodeType":"YulFunctionCall","src":"9387:43:15"},"nodeType":"YulIf","src":"9384:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9367:5:15","type":""}],"src":"9331:122:15"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new admin is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new implementation is n\")\n\n        mstore(add(memPtr, 32), \"ot a contract\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405260405162001a8a38038062001a8a8339818101604052810190620000299190620005e7565b82816200003f828260006200005b60201b60201c565b505062000052826200009e60201b60201c565b50505062000a96565b6200006c83620000fc60201b60201c565b6000825111806200007a5750805b1562000099576200009783836200015360201b6200029f1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620000cf6200018960201b60201c565b82604051620000e092919062000779565b60405180910390a1620000f981620001ed60201b60201c565b50565b6200010d81620002de60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b606062000181838360405180606001604052806027815260200162001a6360279139620003b460201b60201c565b905092915050565b6000620001c47fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b6200044660201b620002cc1760201c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000260576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200025790620007ca565b60405180910390fd5b806200029a7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b6200044660201b620002cc1760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620002f4816200045060201b620002d61760201c565b62000336576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200032d90620007ec565b60405180910390fd5b80620003707f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6200044660201b620002cc1760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051620003e0919062000760565b600060405180830381855af49150503d80600081146200041d576040519150601f19603f3d011682016040523d82523d6000602084013e62000422565b606091505b50915091506200043b868383876200047360201b60201c565b925050509392505050565b6000819050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315620004e457600083511415620004db5762000498856200045060201b60201c565b620004da576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004d1906200080e565b60405180910390fd5b5b829050620004f7565b620004f68383620004ff60201b60201c565b5b949350505050565b600082511115620005135781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005499190620007a6565b60405180910390fd5b600062000569620005638462000859565b62000830565b90508281526020810184848401111562000588576200058762000995565b5b62000595848285620008f5565b509392505050565b600081519050620005ae8162000a7c565b92915050565b600082601f830112620005cc57620005cb62000990565b5b8151620005de84826020860162000552565b91505092915050565b6000806000606084860312156200060357620006026200099f565b5b600062000613868287016200059d565b935050602062000626868287016200059d565b925050604084015167ffffffffffffffff8111156200064a57620006496200099a565b5b6200065886828701620005b4565b9150509250925092565b6200066d81620008c1565b82525050565b600062000680826200088f565b6200068c8185620008a5565b93506200069e818560208601620008f5565b80840191505092915050565b6000620006b7826200089a565b620006c38185620008b0565b9350620006d5818560208601620008f5565b620006e081620009a4565b840191505092915050565b6000620006fa602683620008b0565b91506200070782620009b5565b604082019050919050565b600062000721602d83620008b0565b91506200072e8262000a04565b604082019050919050565b600062000748601d83620008b0565b9150620007558262000a53565b602082019050919050565b60006200076e828462000673565b915081905092915050565b600060408201905062000790600083018562000662565b6200079f602083018462000662565b9392505050565b60006020820190508181036000830152620007c28184620006aa565b905092915050565b60006020820190508181036000830152620007e581620006eb565b9050919050565b60006020820190508181036000830152620008078162000712565b9050919050565b60006020820190508181036000830152620008298162000739565b9050919050565b60006200083c6200084f565b90506200084a82826200092b565b919050565b6000604051905090565b600067ffffffffffffffff82111562000877576200087662000961565b5b6200088282620009a4565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000620008ce82620008d5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b8381101562000915578082015181840152602081019050620008f8565b8381111562000925576000848401525b50505050565b6200093682620009a4565b810181811067ffffffffffffffff8211171562000958576200095762000961565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b62000a8781620008c1565b811462000a9357600080fd5b50565b610fbd8062000aa66000396000f3fe6080604052366100135761001161001d565b005b61001b61001d565b005b6100256102f9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610295576060600080357fffffffff00000000000000000000000000000000000000000000000000000000169050633659cfe660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156100de576100d7610350565b915061028d565b634f1ef28660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561013a576101336103af565b915061028c565b638f28397060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156101965761018f6103fc565b915061028b565b63f851a44060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156101f2576101eb610449565b915061028a565b635c60da1b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561024e57610247610485565b9150610289565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028090610c15565b60405180910390fd5b5b5b5b5b815160208301f35b61029d6104c1565b565b60606102c48383604051806060016040528060278152602001610f61602791396104db565b905092915050565b6000819050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006103277fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b6102cc565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606061035a610561565b60008036600490809261036f93929190610cbd565b81019061037c91906109aa565b905061039981604051806020016040528060008152506000610570565b6040518060200160405280600081525091505090565b606060008060003660049080926103c893929190610cbd565b8101906103d591906109d7565b915091506103e582826001610570565b604051806020016040528060008152509250505090565b6060610406610561565b60008036600490809261041b93929190610cbd565b81019061042891906109aa565b90506104338161059c565b6040518060200160405280600081525091505090565b6060610453610561565b600061045d6102f9565b9050806040516020016104709190610b4f565b60405160208183030381529060405291505090565b606061048f610561565b60006104996105e8565b9050806040516020016104ac9190610b4f565b60405160208183030381529060405291505090565b6104c96105f7565b6104d96104d46105e8565b6105f9565b565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516105059190610b38565b600060405180830381855af49150503d8060008114610540576040519150601f19603f3d011682016040523d82523d6000602084013e610545565b606091505b50915091506105568683838761061f565b925050509392505050565b6000341461056e57600080fd5b565b61057983610695565b6000825111806105865750805b1561059757610595838361029f565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6105c56102f9565b826040516105d4929190610b6a565b60405180910390a16105e5816106e4565b50565b60006105f26107c5565b905090565b565b3660008037600080366000845af43d6000803e806000811461061a573d6000f35b3d6000fd5b606083156106825760008351141561067a5761063a856102d6565b610679576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067090610bf5565b60405180910390fd5b5b82905061068d565b61068c838361081c565b5b949350505050565b61069e8161086c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610754576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074b90610bb5565b60405180910390fd5b806107817fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b6102cc565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006107f37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6102cc565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008251111561082f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108639190610b93565b60405180910390fd5b610875816102d6565b6108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ab90610bd5565b60405180910390fd5b806108e17f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6102cc565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061093861093384610c5a565b610c35565b90508281526020810184848401111561095457610953610ded565b5b61095f848285610d3c565b509392505050565b60008135905061097681610f49565b92915050565b600082601f83011261099157610990610dde565b5b81356109a1848260208601610925565b91505092915050565b6000602082840312156109c0576109bf610df7565b5b60006109ce84828501610967565b91505092915050565b600080604083850312156109ee576109ed610df7565b5b60006109fc85828601610967565b925050602083013567ffffffffffffffff811115610a1d57610a1c610df2565b5b610a298582860161097c565b9150509250929050565b610a3c81610cf8565b82525050565b6000610a4d82610c8b565b610a578185610ca1565b9350610a67818560208601610d4b565b80840191505092915050565b6000610a7e82610c96565b610a888185610cac565b9350610a98818560208601610d4b565b610aa181610dfc565b840191505092915050565b6000610ab9602683610cac565b9150610ac482610e0d565b604082019050919050565b6000610adc602d83610cac565b9150610ae782610e5c565b604082019050919050565b6000610aff601d83610cac565b9150610b0a82610eab565b602082019050919050565b6000610b22604283610cac565b9150610b2d82610ed4565b606082019050919050565b6000610b448284610a42565b915081905092915050565b6000602082019050610b646000830184610a33565b92915050565b6000604082019050610b7f6000830185610a33565b610b8c6020830184610a33565b9392505050565b60006020820190508181036000830152610bad8184610a73565b905092915050565b60006020820190508181036000830152610bce81610aac565b9050919050565b60006020820190508181036000830152610bee81610acf565b9050919050565b60006020820190508181036000830152610c0e81610af2565b9050919050565b60006020820190508181036000830152610c2e81610b15565b9050919050565b6000610c3f610c50565b9050610c4b8282610d7e565b919050565b6000604051905090565b600067ffffffffffffffff821115610c7557610c74610daf565b5b610c7e82610dfc565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60008085851115610cd157610cd0610de8565b5b83861115610ce257610ce1610de3565b5b6001850283019150848603905094509492505050565b6000610d0382610d1c565b9050919050565b6000610d1582610d1c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610d69578082015181840152602081019050610d4e565b83811115610d78576000848401525b50505050565b610d8782610dfc565b810181811067ffffffffffffffff82111715610da657610da5610daf565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60008201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760208201527f6574000000000000000000000000000000000000000000000000000000000000604082015250565b610f5281610d0a565b8114610f5d57600080fd5b5056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202fea5fd35afe64dd31f6dbec053f4da56c047d51ca80989175f3697e6a5a179164736f6c63430008070033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0x1A8A CODESIZE SUB DUP1 PUSH3 0x1A8A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x29 SWAP2 SWAP1 PUSH3 0x5E7 JUMP JUMPDEST DUP3 DUP2 PUSH3 0x3F DUP3 DUP3 PUSH1 0x0 PUSH3 0x5B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x52 DUP3 PUSH3 0x9E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xA96 JUMP JUMPDEST PUSH3 0x6C DUP4 PUSH3 0xFC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH3 0x7A JUMPI POP DUP1 JUMPDEST ISZERO PUSH3 0x99 JUMPI PUSH3 0x97 DUP4 DUP4 PUSH3 0x153 PUSH1 0x20 SHL PUSH3 0x29F OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH3 0xCF PUSH3 0x189 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH3 0xE0 SWAP3 SWAP2 SWAP1 PUSH3 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH3 0xF9 DUP2 PUSH3 0x1ED PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x10D DUP2 PUSH3 0x2DE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x181 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1A63 PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x3B4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C4 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL PUSH3 0x446 PUSH1 0x20 SHL PUSH3 0x2CC OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x260 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x257 SWAP1 PUSH3 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH3 0x29A PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL PUSH3 0x446 PUSH1 0x20 SHL PUSH3 0x2CC OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH3 0x2F4 DUP2 PUSH3 0x450 PUSH1 0x20 SHL PUSH3 0x2D6 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x32D SWAP1 PUSH3 0x7EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH3 0x370 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH3 0x446 PUSH1 0x20 SHL PUSH3 0x2CC OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH3 0x3E0 SWAP2 SWAP1 PUSH3 0x760 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x41D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x422 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH3 0x43B DUP7 DUP4 DUP4 DUP8 PUSH3 0x473 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x4E4 JUMPI PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH3 0x4DB JUMPI PUSH3 0x498 DUP6 PUSH3 0x450 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4D1 SWAP1 PUSH3 0x80E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH3 0x4F7 JUMP JUMPDEST PUSH3 0x4F6 DUP4 DUP4 PUSH3 0x4FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH3 0x513 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x549 SWAP2 SWAP1 PUSH3 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x569 PUSH3 0x563 DUP5 PUSH3 0x859 JUMP JUMPDEST PUSH3 0x830 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x588 JUMPI PUSH3 0x587 PUSH3 0x995 JUMP JUMPDEST JUMPDEST PUSH3 0x595 DUP5 DUP3 DUP6 PUSH3 0x8F5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5AE DUP2 PUSH3 0xA7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x5CC JUMPI PUSH3 0x5CB PUSH3 0x990 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x5DE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x552 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x603 JUMPI PUSH3 0x602 PUSH3 0x99F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x613 DUP7 DUP3 DUP8 ADD PUSH3 0x59D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x626 DUP7 DUP3 DUP8 ADD PUSH3 0x59D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x64A JUMPI PUSH3 0x649 PUSH3 0x99A JUMP JUMPDEST JUMPDEST PUSH3 0x658 DUP7 DUP3 DUP8 ADD PUSH3 0x5B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x66D DUP2 PUSH3 0x8C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x680 DUP3 PUSH3 0x88F JUMP JUMPDEST PUSH3 0x68C DUP2 DUP6 PUSH3 0x8A5 JUMP JUMPDEST SWAP4 POP PUSH3 0x69E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x8F5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6B7 DUP3 PUSH3 0x89A JUMP JUMPDEST PUSH3 0x6C3 DUP2 DUP6 PUSH3 0x8B0 JUMP JUMPDEST SWAP4 POP PUSH3 0x6D5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x8F5 JUMP JUMPDEST PUSH3 0x6E0 DUP2 PUSH3 0x9A4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6FA PUSH1 0x26 DUP4 PUSH3 0x8B0 JUMP JUMPDEST SWAP2 POP PUSH3 0x707 DUP3 PUSH3 0x9B5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x721 PUSH1 0x2D DUP4 PUSH3 0x8B0 JUMP JUMPDEST SWAP2 POP PUSH3 0x72E DUP3 PUSH3 0xA04 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x748 PUSH1 0x1D DUP4 PUSH3 0x8B0 JUMP JUMPDEST SWAP2 POP PUSH3 0x755 DUP3 PUSH3 0xA53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x76E DUP3 DUP5 PUSH3 0x673 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x790 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x662 JUMP JUMPDEST PUSH3 0x79F PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x662 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x7C2 DUP2 DUP5 PUSH3 0x6AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x7E5 DUP2 PUSH3 0x6EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x807 DUP2 PUSH3 0x712 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x829 DUP2 PUSH3 0x739 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x83C PUSH3 0x84F JUMP JUMPDEST SWAP1 POP PUSH3 0x84A DUP3 DUP3 PUSH3 0x92B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x877 JUMPI PUSH3 0x876 PUSH3 0x961 JUMP JUMPDEST JUMPDEST PUSH3 0x882 DUP3 PUSH3 0x9A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8CE DUP3 PUSH3 0x8D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x915 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8F8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x925 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH3 0x936 DUP3 PUSH3 0x9A4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x958 JUMPI PUSH3 0x957 PUSH3 0x961 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH3 0xA87 DUP2 PUSH3 0x8C1 JUMP JUMPDEST DUP2 EQ PUSH3 0xA93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFBD DUP1 PUSH3 0xAA6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25 PUSH2 0x2F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x295 JUMPI PUSH1 0x60 PUSH1 0x0 DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SWAP1 POP PUSH4 0x3659CFE6 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0xDE JUMPI PUSH2 0xD7 PUSH2 0x350 JUMP JUMPDEST SWAP2 POP PUSH2 0x28D JUMP JUMPDEST PUSH4 0x4F1EF286 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0x13A JUMPI PUSH2 0x133 PUSH2 0x3AF JUMP JUMPDEST SWAP2 POP PUSH2 0x28C JUMP JUMPDEST PUSH4 0x8F283970 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0x196 JUMPI PUSH2 0x18F PUSH2 0x3FC JUMP JUMPDEST SWAP2 POP PUSH2 0x28B JUMP JUMPDEST PUSH4 0xF851A440 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0x1F2 JUMPI PUSH2 0x1EB PUSH2 0x449 JUMP JUMPDEST SWAP2 POP PUSH2 0x28A JUMP JUMPDEST PUSH4 0x5C60DA1B PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0x24E JUMPI PUSH2 0x247 PUSH2 0x485 JUMP JUMPDEST SWAP2 POP PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x280 SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD RETURN JUMPDEST PUSH2 0x29D PUSH2 0x4C1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF61 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x4DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x327 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x35A PUSH2 0x561 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x4 SWAP1 DUP1 SWAP3 PUSH2 0x36F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCBD JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 CALLDATASIZE PUSH1 0x4 SWAP1 DUP1 SWAP3 PUSH2 0x3C8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCBD JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x9D7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x3E5 DUP3 DUP3 PUSH1 0x1 PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x406 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x4 SWAP1 DUP1 SWAP3 PUSH2 0x41B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCBD JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP PUSH2 0x433 DUP2 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x453 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D PUSH2 0x2F9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x470 SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x48F PUSH2 0x561 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 PUSH2 0x5E8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x4C9 PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x4D9 PUSH2 0x4D4 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x505 SWAP2 SWAP1 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x540 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x545 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x556 DUP7 DUP4 DUP4 DUP8 PUSH2 0x61F JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x579 DUP4 PUSH2 0x695 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x586 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x597 JUMPI PUSH2 0x595 DUP4 DUP4 PUSH2 0x29F JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x5C5 PUSH2 0x2F9 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0x5D4 SWAP3 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x5E5 DUP2 PUSH2 0x6E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F2 PUSH2 0x7C5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x61A JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x67A JUMPI PUSH2 0x63A DUP6 PUSH2 0x2D6 JUMP JUMPDEST PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x670 SWAP1 PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x68D JUMP JUMPDEST PUSH2 0x68C DUP4 DUP4 PUSH2 0x81C JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x69E DUP2 PUSH2 0x86C JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x781 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x82F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x875 DUP2 PUSH2 0x2D6 JUMP JUMPDEST PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x8E1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x938 PUSH2 0x933 DUP5 PUSH2 0xC5A JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x954 JUMPI PUSH2 0x953 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH2 0x95F DUP5 DUP3 DUP6 PUSH2 0xD3C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x976 DUP2 PUSH2 0xF49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x991 JUMPI PUSH2 0x990 PUSH2 0xDDE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9A1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x925 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9BF PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9CE DUP5 DUP3 DUP6 ADD PUSH2 0x967 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9EE JUMPI PUSH2 0x9ED PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9FC DUP6 DUP3 DUP7 ADD PUSH2 0x967 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA1D JUMPI PUSH2 0xA1C PUSH2 0xDF2 JUMP JUMPDEST JUMPDEST PUSH2 0xA29 DUP6 DUP3 DUP7 ADD PUSH2 0x97C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3C DUP2 PUSH2 0xCF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4D DUP3 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0xA57 DUP2 DUP6 PUSH2 0xCA1 JUMP JUMPDEST SWAP4 POP PUSH2 0xA67 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD4B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7E DUP3 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0xA88 DUP2 DUP6 PUSH2 0xCAC JUMP JUMPDEST SWAP4 POP PUSH2 0xA98 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD4B JUMP JUMPDEST PUSH2 0xAA1 DUP2 PUSH2 0xDFC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB9 PUSH1 0x26 DUP4 PUSH2 0xCAC JUMP JUMPDEST SWAP2 POP PUSH2 0xAC4 DUP3 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADC PUSH1 0x2D DUP4 PUSH2 0xCAC JUMP JUMPDEST SWAP2 POP PUSH2 0xAE7 DUP3 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFF PUSH1 0x1D DUP4 PUSH2 0xCAC JUMP JUMPDEST SWAP2 POP PUSH2 0xB0A DUP3 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB22 PUSH1 0x42 DUP4 PUSH2 0xCAC JUMP JUMPDEST SWAP2 POP PUSH2 0xB2D DUP3 PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB44 DUP3 DUP5 PUSH2 0xA42 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB7F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xB8C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA33 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBAD DUP2 DUP5 PUSH2 0xA73 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBCE DUP2 PUSH2 0xAAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBEE DUP2 PUSH2 0xACF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC0E DUP2 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC2E DUP2 PUSH2 0xB15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3F PUSH2 0xC50 JUMP JUMPDEST SWAP1 POP PUSH2 0xC4B DUP3 DUP3 PUSH2 0xD7E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC75 JUMPI PUSH2 0xC74 PUSH2 0xDAF JUMP JUMPDEST JUMPDEST PUSH2 0xC7E DUP3 PUSH2 0xDFC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0xCD1 JUMPI PUSH2 0xCD0 PUSH2 0xDE8 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0xCE2 JUMPI PUSH2 0xCE1 PUSH2 0xDE3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD03 DUP3 PUSH2 0xD1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP3 PUSH2 0xD1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD69 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD4E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xD78 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD87 DUP3 PUSH2 0xDFC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xDA6 JUMPI PUSH2 0xDA5 PUSH2 0xDAF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73706172656E745570677261646561626C6550726F78793A2061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E2063616E6E6F742066616C6C6261636B20746F2070726F78792074617267 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6574000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xF52 DUP2 PUSH2 0xD0A JUMP JUMPDEST DUP2 EQ PUSH2 0xF5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212202FEA5F 0xD3 GAS INVALID PUSH5 0xDD31F6DBEC SDIV EXTCODEHASH 0x4D 0xA5 PUSH13 0x47D51CA80989175F3697E6A5A OR SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65640000 ","sourceMap":"3389:4951:8:-:0;;;3663:137;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3748:6;3756:5;1024:39:3;1042:6;1050:5;1057;1024:17;;;:39;;:::i;:::-;958:112;;3773:20:8::1;3786:6;3773:12;;;:20;;:::i;:::-;3663:137:::0;;;3389:4951;;2057:265:4;2165:29;2176:17;2165:10;;;:29;;:::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;;;;;:53;;:::i;:::-;;2204:112;2057:265;;;:::o;4300:135::-;4364:35;4377:11;:9;;;:11;;:::i;:::-;4390:8;4364:35;;;;;;;:::i;:::-;;;;;;;;4409:19;4419:8;4409:9;;;:19;;:::i;:::-;4300:135;:::o;1771:152::-;1837:37;1856:17;1837:18;;;:37;;:::i;:::-;1898:17;1889:27;;;;;;;;;;;;1771:152;:::o;6674:198:9:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;;;:77;;:::i;:::-;6781:84;;6674:198;;;;:::o;3784:122:4:-;3828:7;3854:39;3656:66;3881:11;;3854:26;;;;;:39;;:::i;:::-;:45;;;;;;;;;;;;3847:52;;3784:122;:::o;3988:201::-;4071:1;4051:22;;:8;:22;;;;4043:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4174:8;4126:39;3656:66;4153:11;;4126:26;;;;;:39;;:::i;:::-;:45;;;:56;;;;;;;;;;;;;;;;;;3988:201;:::o;1406:259::-;1487:37;1506:17;1487:18;;;;;:37;;:::i;:::-;1479:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1641:17;1584:48;1030:66;1611:20;;1584:26;;;;;:48;;:::i;:::-;:54;;;:74;;;;;;;;;;;;;;;;;;1406:259;:::o;7058:325:9:-;7199:12;7224;7238:23;7265:6;:19;;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;;;:69;;:::i;:::-;7300:76;;;;7058:325;;;;;:::o;1859:190:11:-;1920:21;2029:4;2019:14;;1859:190;;;:::o;1412:320:9:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;;8121:18;8132:6;8121:10;;;:18;;:::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;;;:33;;:::i;:::-;7671:628;;;;;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:419:15;95:5;120:65;136:48;177:6;136:48;:::i;:::-;120:65;:::i;:::-;111:74;;208:6;201:5;194:21;246:4;239:5;235:16;284:3;275:6;270:3;266:16;263:25;260:112;;;291:79;;:::i;:::-;260:112;381:39;413:6;408:3;403;381:39;:::i;:::-;101:325;7:419;;;;;:::o;432:143::-;489:5;520:6;514:13;505:22;;536:33;563:5;536:33;:::i;:::-;432:143;;;;:::o;594:353::-;660:5;709:3;702:4;694:6;690:17;686:27;676:122;;717:79;;:::i;:::-;676:122;827:6;821:13;852:89;937:3;929:6;922:4;914:6;910:17;852:89;:::i;:::-;843:98;;666:281;594:353;;;;:::o;953:834::-;1050:6;1058;1066;1115:2;1103:9;1094:7;1090:23;1086:32;1083:119;;;1121:79;;:::i;:::-;1083:119;1241:1;1266:64;1322:7;1313:6;1302:9;1298:22;1266:64;:::i;:::-;1256:74;;1212:128;1379:2;1405:64;1461:7;1452:6;1441:9;1437:22;1405:64;:::i;:::-;1395:74;;1350:129;1539:2;1528:9;1524:18;1518:25;1570:18;1562:6;1559:30;1556:117;;;1592:79;;:::i;:::-;1556:117;1697:73;1762:7;1753:6;1742:9;1738:22;1697:73;:::i;:::-;1687:83;;1489:291;953:834;;;;;:::o;1793:118::-;1880:24;1898:5;1880:24;:::i;:::-;1875:3;1868:37;1793:118;;:::o;1917:373::-;2021:3;2049:38;2081:5;2049:38;:::i;:::-;2103:88;2184:6;2179:3;2103:88;:::i;:::-;2096:95;;2200:52;2245:6;2240:3;2233:4;2226:5;2222:16;2200:52;:::i;:::-;2277:6;2272:3;2268:16;2261:23;;2025:265;1917:373;;;;:::o;2296:364::-;2384:3;2412:39;2445:5;2412:39;:::i;:::-;2467:71;2531:6;2526:3;2467:71;:::i;:::-;2460:78;;2547:52;2592:6;2587:3;2580:4;2573:5;2569:16;2547:52;:::i;:::-;2624:29;2646:6;2624:29;:::i;:::-;2619:3;2615:39;2608:46;;2388:272;2296:364;;;;:::o;2666:366::-;2808:3;2829:67;2893:2;2888:3;2829:67;:::i;:::-;2822:74;;2905:93;2994:3;2905:93;:::i;:::-;3023:2;3018:3;3014:12;3007:19;;2666:366;;;:::o;3038:::-;3180:3;3201:67;3265:2;3260:3;3201:67;:::i;:::-;3194:74;;3277:93;3366:3;3277:93;:::i;:::-;3395:2;3390:3;3386:12;3379:19;;3038:366;;;:::o;3410:::-;3552:3;3573:67;3637:2;3632:3;3573:67;:::i;:::-;3566:74;;3649:93;3738:3;3649:93;:::i;:::-;3767:2;3762:3;3758:12;3751:19;;3410:366;;;:::o;3782:271::-;3912:3;3934:93;4023:3;4014:6;3934:93;:::i;:::-;3927:100;;4044:3;4037:10;;3782:271;;;;:::o;4059:332::-;4180:4;4218:2;4207:9;4203:18;4195:26;;4231:71;4299:1;4288:9;4284:17;4275:6;4231:71;:::i;:::-;4312:72;4380:2;4369:9;4365:18;4356:6;4312:72;:::i;:::-;4059:332;;;;;:::o;4397:313::-;4510:4;4548:2;4537:9;4533:18;4525:26;;4597:9;4591:4;4587:20;4583:1;4572:9;4568:17;4561:47;4625:78;4698:4;4689:6;4625:78;:::i;:::-;4617:86;;4397:313;;;;:::o;4716:419::-;4882:4;4920:2;4909:9;4905:18;4897:26;;4969:9;4963:4;4959:20;4955:1;4944:9;4940:17;4933:47;4997:131;5123:4;4997:131;:::i;:::-;4989:139;;4716:419;;;:::o;5141:::-;5307:4;5345:2;5334:9;5330:18;5322:26;;5394:9;5388:4;5384:20;5380:1;5369:9;5365:17;5358:47;5422:131;5548:4;5422:131;:::i;:::-;5414:139;;5141:419;;;:::o;5566:::-;5732:4;5770:2;5759:9;5755:18;5747:26;;5819:9;5813:4;5809:20;5805:1;5794:9;5790:17;5783:47;5847:131;5973:4;5847:131;:::i;:::-;5839:139;;5566:419;;;:::o;5991:129::-;6025:6;6052:20;;:::i;:::-;6042:30;;6081:33;6109:4;6101:6;6081:33;:::i;:::-;5991:129;;;:::o;6126:75::-;6159:6;6192:2;6186:9;6176:19;;6126:75;:::o;6207:307::-;6268:4;6358:18;6350:6;6347:30;6344:56;;;6380:18;;:::i;:::-;6344:56;6418:29;6440:6;6418:29;:::i;:::-;6410:37;;6502:4;6496;6492:15;6484:23;;6207:307;;;:::o;6520:98::-;6571:6;6605:5;6599:12;6589:22;;6520:98;;;:::o;6624:99::-;6676:6;6710:5;6704:12;6694:22;;6624:99;;;:::o;6729:147::-;6830:11;6867:3;6852:18;;6729:147;;;;:::o;6882:169::-;6966:11;7000:6;6995:3;6988:19;7040:4;7035:3;7031:14;7016:29;;6882:169;;;;:::o;7057:96::-;7094:7;7123:24;7141:5;7123:24;:::i;:::-;7112:35;;7057:96;;;:::o;7159:126::-;7196:7;7236:42;7229:5;7225:54;7214:65;;7159:126;;;:::o;7291:307::-;7359:1;7369:113;7383:6;7380:1;7377:13;7369:113;;;7468:1;7463:3;7459:11;7453:18;7449:1;7444:3;7440:11;7433:39;7405:2;7402:1;7398:10;7393:15;;7369:113;;;7500:6;7497:1;7494:13;7491:101;;;7580:1;7571:6;7566:3;7562:16;7555:27;7491:101;7340:258;7291:307;;;:::o;7604:281::-;7687:27;7709:4;7687:27;:::i;:::-;7679:6;7675:40;7817:6;7805:10;7802:22;7781:18;7769:10;7766:34;7763:62;7760:88;;;7828:18;;:::i;:::-;7760:88;7868:10;7864:2;7857:22;7647:238;7604:281;;:::o;7891:180::-;7939:77;7936:1;7929:88;8036:4;8033:1;8026:15;8060:4;8057:1;8050:15;8077:117;8186:1;8183;8176:12;8200:117;8309:1;8306;8299:12;8323:117;8432:1;8429;8422:12;8446:117;8555:1;8552;8545:12;8569:102;8610:6;8661:2;8657:7;8652:2;8645:5;8641:14;8637:28;8627:38;;8569:102;;;:::o;8677:225::-;8817:34;8813:1;8805:6;8801:14;8794:58;8886:8;8881:2;8873:6;8869:15;8862:33;8677:225;:::o;8908:232::-;9048:34;9044:1;9036:6;9032:14;9025:58;9117:15;9112:2;9104:6;9100:15;9093:40;8908:232;:::o;9146:179::-;9286:31;9282:1;9274:6;9270:14;9263:55;9146:179;:::o;9331:122::-;9404:24;9422:5;9404:24;:::i;:::-;9397:5;9394:35;9384:63;;9443:1;9440;9433:12;9384:63;9331:122;:::o;3389:4951:8:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_522":{"entryPoint":null,"id":522,"parameterSlots":0,"returnSlots":0},"@_530":{"entryPoint":null,"id":530,"parameterSlots":0,"returnSlots":0},"@_beforeFallback_535":{"entryPoint":1527,"id":535,"parameterSlots":0,"returnSlots":0},"@_changeAdmin_392":{"entryPoint":1436,"id":392,"parameterSlots":1,"returnSlots":0},"@_delegate_495":{"entryPoint":1529,"id":495,"parameterSlots":1,"returnSlots":0},"@_dispatchAdmin_867":{"entryPoint":1097,"id":867,"parameterSlots":0,"returnSlots":1},"@_dispatchChangeAdmin_916":{"entryPoint":1020,"id":916,"parameterSlots":0,"returnSlots":1},"@_dispatchImplementation_887":{"entryPoint":1157,"id":887,"parameterSlots":0,"returnSlots":1},"@_dispatchUpgradeToAndCall_982":{"entryPoint":943,"id":982,"parameterSlots":0,"returnSlots":1},"@_dispatchUpgradeTo_950":{"entryPoint":848,"id":950,"parameterSlots":0,"returnSlots":1},"@_fallback_514":{"entryPoint":1217,"id":514,"parameterSlots":0,"returnSlots":0},"@_fallback_847":{"entryPoint":29,"id":847,"parameterSlots":0,"returnSlots":0},"@_getAdmin_349":{"entryPoint":761,"id":349,"parameterSlots":0,"returnSlots":1},"@_getImplementation_210":{"entryPoint":1989,"id":210,"parameterSlots":0,"returnSlots":1},"@_implementation_179":{"entryPoint":1512,"id":179,"parameterSlots":0,"returnSlots":1},"@_requireZeroValue_1004":{"entryPoint":1377,"id":1004,"parameterSlots":0,"returnSlots":0},"@_revert_1334":{"entryPoint":2076,"id":1334,"parameterSlots":2,"returnSlots":0},"@_setAdmin_375":{"entryPoint":1764,"id":375,"parameterSlots":1,"returnSlots":0},"@_setImplementation_234":{"entryPoint":2156,"id":234,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCall_279":{"entryPoint":1392,"id":279,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_249":{"entryPoint":1685,"id":249,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1222":{"entryPoint":671,"id":1222,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1251":{"entryPoint":1243,"id":1251,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1389":{"entryPoint":716,"id":1389,"parameterSlots":1,"returnSlots":1},"@isContract_1023":{"entryPoint":726,"id":1023,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_1290":{"entryPoint":1567,"id":1290,"parameterSlots":4,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":2341,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":2407,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":2428,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":2474,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_bytes_memory_ptr":{"entryPoint":2519,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2611,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2675,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack":{"entryPoint":2732,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack":{"entryPoint":2767,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":2802,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d_to_t_string_memory_ptr_fromStack":{"entryPoint":2837,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2872,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":2922,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2963,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2997,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3029,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3061,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3093,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":3125,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3152,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":3162,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3211,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3222,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3233,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3244,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":3261,"id":null,"parameterSlots":4,"returnSlots":2},"cleanup_t_address":{"entryPoint":3320,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":3338,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3356,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":3388,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":3403,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":3454,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":3503,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3550,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c":{"entryPoint":3555,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a":{"entryPoint":3560,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":3565,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3570,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3575,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3580,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5":{"entryPoint":3597,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65":{"entryPoint":3676,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":3755,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d":{"entryPoint":3796,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":3913,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11957:15","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:15","statements":[{"nodeType":"YulAssignment","src":"100:74:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:15"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:15"},"nodeType":"YulFunctionCall","src":"125:48:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:15"},"nodeType":"YulFunctionCall","src":"109:65:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:15"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:15"},"nodeType":"YulFunctionCall","src":"183:21:15"},"nodeType":"YulExpressionStatement","src":"183:21:15"},{"nodeType":"YulVariableDeclaration","src":"213:27:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:15"},"nodeType":"YulFunctionCall","src":"224:16:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:15"},"nodeType":"YulFunctionCall","src":"280:79:15"},"nodeType":"YulExpressionStatement","src":"280:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:15"},"nodeType":"YulFunctionCall","src":"255:16:15"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:15"},"nodeType":"YulFunctionCall","src":"252:25:15"},"nodeType":"YulIf","src":"249:112:15"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:15"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:15"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:15"},"nodeType":"YulFunctionCall","src":"370:41:15"},"nodeType":"YulExpressionStatement","src":"370:41:15"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:15","type":""}],"src":"7:410:15"},{"body":{"nodeType":"YulBlock","src":"483:95:15","statements":[{"nodeType":"YulAssignment","src":"493:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"515:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"502:12:15"},"nodeType":"YulFunctionCall","src":"502:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"493:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"566:5:15"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"531:34:15"},"nodeType":"YulFunctionCall","src":"531:41:15"},"nodeType":"YulExpressionStatement","src":"531:41:15"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"461:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"469:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"477:5:15","type":""}],"src":"423:155:15"},{"body":{"nodeType":"YulBlock","src":"658:277:15","statements":[{"body":{"nodeType":"YulBlock","src":"707:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"709:77:15"},"nodeType":"YulFunctionCall","src":"709:79:15"},"nodeType":"YulExpressionStatement","src":"709:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"686:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"694:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"682:3:15"},"nodeType":"YulFunctionCall","src":"682:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"701:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"678:3:15"},"nodeType":"YulFunctionCall","src":"678:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"671:6:15"},"nodeType":"YulFunctionCall","src":"671:35:15"},"nodeType":"YulIf","src":"668:122:15"},{"nodeType":"YulVariableDeclaration","src":"799:34:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"826:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"813:12:15"},"nodeType":"YulFunctionCall","src":"813:20:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"803:6:15","type":""}]},{"nodeType":"YulAssignment","src":"842:87:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"902:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"910:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"898:3:15"},"nodeType":"YulFunctionCall","src":"898:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"917:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"925:3:15"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"851:46:15"},"nodeType":"YulFunctionCall","src":"851:78:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"842:5:15"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"636:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"644:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"652:5:15","type":""}],"src":"597:338:15"},{"body":{"nodeType":"YulBlock","src":"1015:271:15","statements":[{"body":{"nodeType":"YulBlock","src":"1061:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1063:77:15"},"nodeType":"YulFunctionCall","src":"1063:79:15"},"nodeType":"YulExpressionStatement","src":"1063:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1036:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1045:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1032:3:15"},"nodeType":"YulFunctionCall","src":"1032:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1057:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1028:3:15"},"nodeType":"YulFunctionCall","src":"1028:32:15"},"nodeType":"YulIf","src":"1025:119:15"},{"nodeType":"YulBlock","src":"1154:125:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1169:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1183:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1173:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1198:71:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1241:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1252:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1237:3:15"},"nodeType":"YulFunctionCall","src":"1237:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1261:7:15"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"1208:28:15"},"nodeType":"YulFunctionCall","src":"1208:61:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1198:6:15"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"985:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"996:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1008:6:15","type":""}],"src":"941:345:15"},{"body":{"nodeType":"YulBlock","src":"1392:568:15","statements":[{"body":{"nodeType":"YulBlock","src":"1438:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1440:77:15"},"nodeType":"YulFunctionCall","src":"1440:79:15"},"nodeType":"YulExpressionStatement","src":"1440:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1413:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1422:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1409:3:15"},"nodeType":"YulFunctionCall","src":"1409:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1434:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1405:3:15"},"nodeType":"YulFunctionCall","src":"1405:32:15"},"nodeType":"YulIf","src":"1402:119:15"},{"nodeType":"YulBlock","src":"1531:125:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1546:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1560:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1550:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1575:71:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1618:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1629:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1614:3:15"},"nodeType":"YulFunctionCall","src":"1614:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1638:7:15"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"1585:28:15"},"nodeType":"YulFunctionCall","src":"1585:61:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1575:6:15"}]}]},{"nodeType":"YulBlock","src":"1666:287:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1681:46:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1712:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1723:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1708:3:15"},"nodeType":"YulFunctionCall","src":"1708:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1695:12:15"},"nodeType":"YulFunctionCall","src":"1695:32:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1685:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1774:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1776:77:15"},"nodeType":"YulFunctionCall","src":"1776:79:15"},"nodeType":"YulExpressionStatement","src":"1776:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1746:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1754:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1743:2:15"},"nodeType":"YulFunctionCall","src":"1743:30:15"},"nodeType":"YulIf","src":"1740:117:15"},{"nodeType":"YulAssignment","src":"1871:72:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1915:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1926:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1911:3:15"},"nodeType":"YulFunctionCall","src":"1911:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1935:7:15"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1881:29:15"},"nodeType":"YulFunctionCall","src":"1881:62:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1871:6:15"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1354:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1365:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1377:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1385:6:15","type":""}],"src":"1292:668:15"},{"body":{"nodeType":"YulBlock","src":"2031:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2048:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2071:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2053:17:15"},"nodeType":"YulFunctionCall","src":"2053:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2041:6:15"},"nodeType":"YulFunctionCall","src":"2041:37:15"},"nodeType":"YulExpressionStatement","src":"2041:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2019:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2026:3:15","type":""}],"src":"1966:118:15"},{"body":{"nodeType":"YulBlock","src":"2198:265:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2208:52:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2254:5:15"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2222:31:15"},"nodeType":"YulFunctionCall","src":"2222:38:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2212:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2269:95:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2352:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2357:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"2276:75:15"},"nodeType":"YulFunctionCall","src":"2276:88:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2269:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2399:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2406:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2395:3:15"},"nodeType":"YulFunctionCall","src":"2395:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"2413:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2418:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2373:21:15"},"nodeType":"YulFunctionCall","src":"2373:52:15"},"nodeType":"YulExpressionStatement","src":"2373:52:15"},{"nodeType":"YulAssignment","src":"2434:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2445:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2450:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2441:3:15"},"nodeType":"YulFunctionCall","src":"2441:16:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2434:3:15"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2179:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2186:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2194:3:15","type":""}],"src":"2090:373:15"},{"body":{"nodeType":"YulBlock","src":"2561:272:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2571:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2618:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2585:32:15"},"nodeType":"YulFunctionCall","src":"2585:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2575:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2633:78:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2699:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2704:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2640:58:15"},"nodeType":"YulFunctionCall","src":"2640:71:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2633:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2746:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2753:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2742:3:15"},"nodeType":"YulFunctionCall","src":"2742:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"2760:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2765:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2720:21:15"},"nodeType":"YulFunctionCall","src":"2720:52:15"},"nodeType":"YulExpressionStatement","src":"2720:52:15"},{"nodeType":"YulAssignment","src":"2781:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2792:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2819:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2797:21:15"},"nodeType":"YulFunctionCall","src":"2797:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2788:3:15"},"nodeType":"YulFunctionCall","src":"2788:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2781:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2542:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2549:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2557:3:15","type":""}],"src":"2469:364:15"},{"body":{"nodeType":"YulBlock","src":"2985:220:15","statements":[{"nodeType":"YulAssignment","src":"2995:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3061:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3066:2:15","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3002:58:15"},"nodeType":"YulFunctionCall","src":"3002:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2995:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3167:3:15"}],"functionName":{"name":"store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","nodeType":"YulIdentifier","src":"3078:88:15"},"nodeType":"YulFunctionCall","src":"3078:93:15"},"nodeType":"YulExpressionStatement","src":"3078:93:15"},{"nodeType":"YulAssignment","src":"3180:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3196:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3187:3:15"},"nodeType":"YulFunctionCall","src":"3187:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3180:3:15"}]}]},"name":"abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2973:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2981:3:15","type":""}],"src":"2839:366:15"},{"body":{"nodeType":"YulBlock","src":"3357:220:15","statements":[{"nodeType":"YulAssignment","src":"3367:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3433:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3438:2:15","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3374:58:15"},"nodeType":"YulFunctionCall","src":"3374:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3367:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3539:3:15"}],"functionName":{"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nodeType":"YulIdentifier","src":"3450:88:15"},"nodeType":"YulFunctionCall","src":"3450:93:15"},"nodeType":"YulExpressionStatement","src":"3450:93:15"},{"nodeType":"YulAssignment","src":"3552:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3563:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3568:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3559:3:15"},"nodeType":"YulFunctionCall","src":"3559:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3552:3:15"}]}]},"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3345:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3353:3:15","type":""}],"src":"3211:366:15"},{"body":{"nodeType":"YulBlock","src":"3729:220:15","statements":[{"nodeType":"YulAssignment","src":"3739:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3805:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3810:2:15","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3746:58:15"},"nodeType":"YulFunctionCall","src":"3746:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3739:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3911:3:15"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"3822:88:15"},"nodeType":"YulFunctionCall","src":"3822:93:15"},"nodeType":"YulExpressionStatement","src":"3822:93:15"},{"nodeType":"YulAssignment","src":"3924:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3935:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3931:3:15"},"nodeType":"YulFunctionCall","src":"3931:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3924:3:15"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3717:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3725:3:15","type":""}],"src":"3583:366:15"},{"body":{"nodeType":"YulBlock","src":"4101:220:15","statements":[{"nodeType":"YulAssignment","src":"4111:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4177:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4182:2:15","type":"","value":"66"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4118:58:15"},"nodeType":"YulFunctionCall","src":"4118:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4111:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4283:3:15"}],"functionName":{"name":"store_literal_in_memory_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d","nodeType":"YulIdentifier","src":"4194:88:15"},"nodeType":"YulFunctionCall","src":"4194:93:15"},"nodeType":"YulExpressionStatement","src":"4194:93:15"},{"nodeType":"YulAssignment","src":"4296:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4307:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4312:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4303:3:15"},"nodeType":"YulFunctionCall","src":"4303:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4296:3:15"}]}]},"name":"abi_encode_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4089:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4097:3:15","type":""}],"src":"3955:366:15"},{"body":{"nodeType":"YulBlock","src":"4461:137:15","statements":[{"nodeType":"YulAssignment","src":"4472:100:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4559:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"4568:3:15"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4479:79:15"},"nodeType":"YulFunctionCall","src":"4479:93:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4472:3:15"}]},{"nodeType":"YulAssignment","src":"4582:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"4589:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4582:3:15"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4440:3:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4446:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4457:3:15","type":""}],"src":"4327:271:15"},{"body":{"nodeType":"YulBlock","src":"4702:124:15","statements":[{"nodeType":"YulAssignment","src":"4712:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4724:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4735:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4720:3:15"},"nodeType":"YulFunctionCall","src":"4720:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4712:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4792:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4805:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4816:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4801:3:15"},"nodeType":"YulFunctionCall","src":"4801:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4748:43:15"},"nodeType":"YulFunctionCall","src":"4748:71:15"},"nodeType":"YulExpressionStatement","src":"4748:71:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4674:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4686:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4697:4:15","type":""}],"src":"4604:222:15"},{"body":{"nodeType":"YulBlock","src":"4958:206:15","statements":[{"nodeType":"YulAssignment","src":"4968:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4980:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4991:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4976:3:15"},"nodeType":"YulFunctionCall","src":"4976:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4968:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5048:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5061:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5072:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5057:3:15"},"nodeType":"YulFunctionCall","src":"5057:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5004:43:15"},"nodeType":"YulFunctionCall","src":"5004:71:15"},"nodeType":"YulExpressionStatement","src":"5004:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5129:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5142:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5153:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5138:3:15"},"nodeType":"YulFunctionCall","src":"5138:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5085:43:15"},"nodeType":"YulFunctionCall","src":"5085:72:15"},"nodeType":"YulExpressionStatement","src":"5085:72:15"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4922:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4934:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4942:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4953:4:15","type":""}],"src":"4832:332:15"},{"body":{"nodeType":"YulBlock","src":"5288:195:15","statements":[{"nodeType":"YulAssignment","src":"5298:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5310:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5321:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5306:3:15"},"nodeType":"YulFunctionCall","src":"5306:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5298:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5345:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5356:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5341:3:15"},"nodeType":"YulFunctionCall","src":"5341:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5364:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5370:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5360:3:15"},"nodeType":"YulFunctionCall","src":"5360:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5334:6:15"},"nodeType":"YulFunctionCall","src":"5334:47:15"},"nodeType":"YulExpressionStatement","src":"5334:47:15"},{"nodeType":"YulAssignment","src":"5390:86:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5462:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"5471:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5398:63:15"},"nodeType":"YulFunctionCall","src":"5398:78:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5390:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5260:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5272:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5283:4:15","type":""}],"src":"5170:313:15"},{"body":{"nodeType":"YulBlock","src":"5660:248:15","statements":[{"nodeType":"YulAssignment","src":"5670:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5682:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5693:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5678:3:15"},"nodeType":"YulFunctionCall","src":"5678:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5670:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5717:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5728:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5713:3:15"},"nodeType":"YulFunctionCall","src":"5713:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5736:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5742:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5732:3:15"},"nodeType":"YulFunctionCall","src":"5732:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:15"},"nodeType":"YulFunctionCall","src":"5706:47:15"},"nodeType":"YulExpressionStatement","src":"5706:47:15"},{"nodeType":"YulAssignment","src":"5762:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5896:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5770:124:15"},"nodeType":"YulFunctionCall","src":"5770:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5762:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5640:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5655:4:15","type":""}],"src":"5489:419:15"},{"body":{"nodeType":"YulBlock","src":"6085:248:15","statements":[{"nodeType":"YulAssignment","src":"6095:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6107:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6118:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6103:3:15"},"nodeType":"YulFunctionCall","src":"6103:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6095:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6142:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6153:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6138:3:15"},"nodeType":"YulFunctionCall","src":"6138:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6161:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"6167:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6157:3:15"},"nodeType":"YulFunctionCall","src":"6157:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6131:6:15"},"nodeType":"YulFunctionCall","src":"6131:47:15"},"nodeType":"YulExpressionStatement","src":"6131:47:15"},{"nodeType":"YulAssignment","src":"6187:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6321:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6195:124:15"},"nodeType":"YulFunctionCall","src":"6195:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6187:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6065:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6080:4:15","type":""}],"src":"5914:419:15"},{"body":{"nodeType":"YulBlock","src":"6510:248:15","statements":[{"nodeType":"YulAssignment","src":"6520:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6532:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6543:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6528:3:15"},"nodeType":"YulFunctionCall","src":"6528:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6520:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6567:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6578:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6563:3:15"},"nodeType":"YulFunctionCall","src":"6563:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6586:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"6592:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6582:3:15"},"nodeType":"YulFunctionCall","src":"6582:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6556:6:15"},"nodeType":"YulFunctionCall","src":"6556:47:15"},"nodeType":"YulExpressionStatement","src":"6556:47:15"},{"nodeType":"YulAssignment","src":"6612:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6746:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6620:124:15"},"nodeType":"YulFunctionCall","src":"6620:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6612:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6490:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6505:4:15","type":""}],"src":"6339:419:15"},{"body":{"nodeType":"YulBlock","src":"6935:248:15","statements":[{"nodeType":"YulAssignment","src":"6945:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6957:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6968:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6953:3:15"},"nodeType":"YulFunctionCall","src":"6953:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6945:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6992:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7003:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6988:3:15"},"nodeType":"YulFunctionCall","src":"6988:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7011:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7017:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7007:3:15"},"nodeType":"YulFunctionCall","src":"7007:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6981:6:15"},"nodeType":"YulFunctionCall","src":"6981:47:15"},"nodeType":"YulExpressionStatement","src":"6981:47:15"},{"nodeType":"YulAssignment","src":"7037:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7171:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7045:124:15"},"nodeType":"YulFunctionCall","src":"7045:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7037:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6915:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6930:4:15","type":""}],"src":"6764:419:15"},{"body":{"nodeType":"YulBlock","src":"7230:88:15","statements":[{"nodeType":"YulAssignment","src":"7240:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7250:18:15"},"nodeType":"YulFunctionCall","src":"7250:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7240:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7299:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"7307:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7279:19:15"},"nodeType":"YulFunctionCall","src":"7279:33:15"},"nodeType":"YulExpressionStatement","src":"7279:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7214:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7223:6:15","type":""}],"src":"7189:129:15"},{"body":{"nodeType":"YulBlock","src":"7364:35:15","statements":[{"nodeType":"YulAssignment","src":"7374:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7390:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7384:5:15"},"nodeType":"YulFunctionCall","src":"7384:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7374:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7357:6:15","type":""}],"src":"7324:75:15"},{"body":{"nodeType":"YulBlock","src":"7471:241:15","statements":[{"body":{"nodeType":"YulBlock","src":"7576:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7578:16:15"},"nodeType":"YulFunctionCall","src":"7578:18:15"},"nodeType":"YulExpressionStatement","src":"7578:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7548:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"7556:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7545:2:15"},"nodeType":"YulFunctionCall","src":"7545:30:15"},"nodeType":"YulIf","src":"7542:56:15"},{"nodeType":"YulAssignment","src":"7608:37:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7638:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7616:21:15"},"nodeType":"YulFunctionCall","src":"7616:29:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7608:4:15"}]},{"nodeType":"YulAssignment","src":"7682:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7694:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"7700:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7690:3:15"},"nodeType":"YulFunctionCall","src":"7690:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7682:4:15"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7455:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7466:4:15","type":""}],"src":"7405:307:15"},{"body":{"nodeType":"YulBlock","src":"7776:40:15","statements":[{"nodeType":"YulAssignment","src":"7787:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7803:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7797:5:15"},"nodeType":"YulFunctionCall","src":"7797:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7787:6:15"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7759:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7769:6:15","type":""}],"src":"7718:98:15"},{"body":{"nodeType":"YulBlock","src":"7881:40:15","statements":[{"nodeType":"YulAssignment","src":"7892:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7908:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7902:5:15"},"nodeType":"YulFunctionCall","src":"7902:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7892:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7864:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7874:6:15","type":""}],"src":"7822:99:15"},{"body":{"nodeType":"YulBlock","src":"8040:34:15","statements":[{"nodeType":"YulAssignment","src":"8050:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"8065:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8050:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8012:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"8017:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8028:11:15","type":""}],"src":"7927:147:15"},{"body":{"nodeType":"YulBlock","src":"8176:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8193:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"8198:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8186:6:15"},"nodeType":"YulFunctionCall","src":"8186:19:15"},"nodeType":"YulExpressionStatement","src":"8186:19:15"},{"nodeType":"YulAssignment","src":"8214:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8233:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8238:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8229:3:15"},"nodeType":"YulFunctionCall","src":"8229:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8214:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8148:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"8153:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8164:11:15","type":""}],"src":"8080:169:15"},{"body":{"nodeType":"YulBlock","src":"8381:343:15","statements":[{"body":{"nodeType":"YulBlock","src":"8419:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulIdentifier","src":"8421:77:15"},"nodeType":"YulFunctionCall","src":"8421:79:15"},"nodeType":"YulExpressionStatement","src":"8421:79:15"}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8397:10:15"},{"name":"endIndex","nodeType":"YulIdentifier","src":"8409:8:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8394:2:15"},"nodeType":"YulFunctionCall","src":"8394:24:15"},"nodeType":"YulIf","src":"8391:111:15"},{"body":{"nodeType":"YulBlock","src":"8535:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulIdentifier","src":"8537:77:15"},"nodeType":"YulFunctionCall","src":"8537:79:15"},"nodeType":"YulExpressionStatement","src":"8537:79:15"}]},"condition":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"8517:8:15"},{"name":"length","nodeType":"YulIdentifier","src":"8527:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8514:2:15"},"nodeType":"YulFunctionCall","src":"8514:20:15"},"nodeType":"YulIf","src":"8511:107:15"},{"nodeType":"YulAssignment","src":"8627:44:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8644:6:15"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8656:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"8668:1:15","type":"","value":"1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8652:3:15"},"nodeType":"YulFunctionCall","src":"8652:18:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8640:3:15"},"nodeType":"YulFunctionCall","src":"8640:31:15"},"variableNames":[{"name":"offsetOut","nodeType":"YulIdentifier","src":"8627:9:15"}]},{"nodeType":"YulAssignment","src":"8680:38:15","value":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"8697:8:15"},{"name":"startIndex","nodeType":"YulIdentifier","src":"8707:10:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8693:3:15"},"nodeType":"YulFunctionCall","src":"8693:25:15"},"variableNames":[{"name":"lengthOut","nodeType":"YulIdentifier","src":"8680:9:15"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8319:6:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"8327:6:15","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8335:10:15","type":""},{"name":"endIndex","nodeType":"YulTypedName","src":"8347:8:15","type":""}],"returnVariables":[{"name":"offsetOut","nodeType":"YulTypedName","src":"8360:9:15","type":""},{"name":"lengthOut","nodeType":"YulTypedName","src":"8371:9:15","type":""}],"src":"8255:469:15"},{"body":{"nodeType":"YulBlock","src":"8775:51:15","statements":[{"nodeType":"YulAssignment","src":"8785:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8814:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8796:17:15"},"nodeType":"YulFunctionCall","src":"8796:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8785:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8757:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8767:7:15","type":""}],"src":"8730:96:15"},{"body":{"nodeType":"YulBlock","src":"8885:51:15","statements":[{"nodeType":"YulAssignment","src":"8895:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8924:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8906:17:15"},"nodeType":"YulFunctionCall","src":"8906:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8895:7:15"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8867:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8877:7:15","type":""}],"src":"8832:104:15"},{"body":{"nodeType":"YulBlock","src":"8987:81:15","statements":[{"nodeType":"YulAssignment","src":"8997:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9012:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9019:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9008:3:15"},"nodeType":"YulFunctionCall","src":"9008:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8997:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8969:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8979:7:15","type":""}],"src":"8942:126:15"},{"body":{"nodeType":"YulBlock","src":"9125:103:15","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9148:3:15"},{"name":"src","nodeType":"YulIdentifier","src":"9153:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"9158:6:15"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9135:12:15"},"nodeType":"YulFunctionCall","src":"9135:30:15"},"nodeType":"YulExpressionStatement","src":"9135:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9206:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"9211:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9202:3:15"},"nodeType":"YulFunctionCall","src":"9202:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"9220:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9195:6:15"},"nodeType":"YulFunctionCall","src":"9195:27:15"},"nodeType":"YulExpressionStatement","src":"9195:27:15"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9107:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9112:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9117:6:15","type":""}],"src":"9074:154:15"},{"body":{"nodeType":"YulBlock","src":"9283:258:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9293:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"9302:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9297:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"9362:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9387:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"9392:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9383:3:15"},"nodeType":"YulFunctionCall","src":"9383:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9406:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"9411:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9402:3:15"},"nodeType":"YulFunctionCall","src":"9402:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9396:5:15"},"nodeType":"YulFunctionCall","src":"9396:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9376:6:15"},"nodeType":"YulFunctionCall","src":"9376:39:15"},"nodeType":"YulExpressionStatement","src":"9376:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9323:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"9326:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9320:2:15"},"nodeType":"YulFunctionCall","src":"9320:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9334:19:15","statements":[{"nodeType":"YulAssignment","src":"9336:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9345:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"9348:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9341:3:15"},"nodeType":"YulFunctionCall","src":"9341:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9336:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"9316:3:15","statements":[]},"src":"9312:113:15"},{"body":{"nodeType":"YulBlock","src":"9459:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9509:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"9514:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9505:3:15"},"nodeType":"YulFunctionCall","src":"9505:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"9523:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9498:6:15"},"nodeType":"YulFunctionCall","src":"9498:27:15"},"nodeType":"YulExpressionStatement","src":"9498:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9440:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"9443:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9437:2:15"},"nodeType":"YulFunctionCall","src":"9437:13:15"},"nodeType":"YulIf","src":"9434:101:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9265:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9270:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9275:6:15","type":""}],"src":"9234:307:15"},{"body":{"nodeType":"YulBlock","src":"9590:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9600:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9622:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9652:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9630:21:15"},"nodeType":"YulFunctionCall","src":"9630:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9618:3:15"},"nodeType":"YulFunctionCall","src":"9618:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"9604:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"9769:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9771:16:15"},"nodeType":"YulFunctionCall","src":"9771:18:15"},"nodeType":"YulExpressionStatement","src":"9771:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9712:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"9724:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9709:2:15"},"nodeType":"YulFunctionCall","src":"9709:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9748:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"9760:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9745:2:15"},"nodeType":"YulFunctionCall","src":"9745:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9706:2:15"},"nodeType":"YulFunctionCall","src":"9706:62:15"},"nodeType":"YulIf","src":"9703:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9807:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9811:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9800:6:15"},"nodeType":"YulFunctionCall","src":"9800:22:15"},"nodeType":"YulExpressionStatement","src":"9800:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9576:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"9584:4:15","type":""}],"src":"9547:281:15"},{"body":{"nodeType":"YulBlock","src":"9862:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9879:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9882:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9872:6:15"},"nodeType":"YulFunctionCall","src":"9872:88:15"},"nodeType":"YulExpressionStatement","src":"9872:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9976:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9979:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9969:6:15"},"nodeType":"YulFunctionCall","src":"9969:15:15"},"nodeType":"YulExpressionStatement","src":"9969:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10000:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10003:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9993:6:15"},"nodeType":"YulFunctionCall","src":"9993:15:15"},"nodeType":"YulExpressionStatement","src":"9993:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"9834:180:15"},{"body":{"nodeType":"YulBlock","src":"10109:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10126:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10129:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10119:6:15"},"nodeType":"YulFunctionCall","src":"10119:12:15"},"nodeType":"YulExpressionStatement","src":"10119:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"10020:117:15"},{"body":{"nodeType":"YulBlock","src":"10232:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10249:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10252:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10242:6:15"},"nodeType":"YulFunctionCall","src":"10242:12:15"},"nodeType":"YulExpressionStatement","src":"10242:12:15"}]},"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulFunctionDefinition","src":"10143:117:15"},{"body":{"nodeType":"YulBlock","src":"10355:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10372:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10375:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10365:6:15"},"nodeType":"YulFunctionCall","src":"10365:12:15"},"nodeType":"YulExpressionStatement","src":"10365:12:15"}]},"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulFunctionDefinition","src":"10266:117:15"},{"body":{"nodeType":"YulBlock","src":"10478:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10495:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10498:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10488:6:15"},"nodeType":"YulFunctionCall","src":"10488:12:15"},"nodeType":"YulExpressionStatement","src":"10488:12:15"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"10389:117:15"},{"body":{"nodeType":"YulBlock","src":"10601:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10618:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10621:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10611:6:15"},"nodeType":"YulFunctionCall","src":"10611:12:15"},"nodeType":"YulExpressionStatement","src":"10611:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"10512:117:15"},{"body":{"nodeType":"YulBlock","src":"10724:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10741:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10744:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10734:6:15"},"nodeType":"YulFunctionCall","src":"10734:12:15"},"nodeType":"YulExpressionStatement","src":"10734:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"10635:117:15"},{"body":{"nodeType":"YulBlock","src":"10806:54:15","statements":[{"nodeType":"YulAssignment","src":"10816:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10834:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"10841:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10830:3:15"},"nodeType":"YulFunctionCall","src":"10830:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10850:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10846:3:15"},"nodeType":"YulFunctionCall","src":"10846:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10826:3:15"},"nodeType":"YulFunctionCall","src":"10826:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10816:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10789:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"10799:6:15","type":""}],"src":"10758:102:15"},{"body":{"nodeType":"YulBlock","src":"10972:119:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10994:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11002:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10990:3:15"},"nodeType":"YulFunctionCall","src":"10990:14:15"},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"11006:34:15","type":"","value":"ERC1967: new admin is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10983:6:15"},"nodeType":"YulFunctionCall","src":"10983:58:15"},"nodeType":"YulExpressionStatement","src":"10983:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11062:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11070:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11058:3:15"},"nodeType":"YulFunctionCall","src":"11058:15:15"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"11075:8:15","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11051:6:15"},"nodeType":"YulFunctionCall","src":"11051:33:15"},"nodeType":"YulExpressionStatement","src":"11051:33:15"}]},"name":"store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10964:6:15","type":""}],"src":"10866:225:15"},{"body":{"nodeType":"YulBlock","src":"11203:126:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11225:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11233:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11221:3:15"},"nodeType":"YulFunctionCall","src":"11221:14:15"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"11237:34:15","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11214:6:15"},"nodeType":"YulFunctionCall","src":"11214:58:15"},"nodeType":"YulExpressionStatement","src":"11214:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11293:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11301:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11289:3:15"},"nodeType":"YulFunctionCall","src":"11289:15:15"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"11306:15:15","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11282:6:15"},"nodeType":"YulFunctionCall","src":"11282:40:15"},"nodeType":"YulExpressionStatement","src":"11282:40:15"}]},"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11195:6:15","type":""}],"src":"11097:232:15"},{"body":{"nodeType":"YulBlock","src":"11441:73:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11463:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11471:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11459:3:15"},"nodeType":"YulFunctionCall","src":"11459:14:15"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"11475:31:15","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11452:6:15"},"nodeType":"YulFunctionCall","src":"11452:55:15"},"nodeType":"YulExpressionStatement","src":"11452:55:15"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11433:6:15","type":""}],"src":"11335:179:15"},{"body":{"nodeType":"YulBlock","src":"11626:184:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11648:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11656:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11644:3:15"},"nodeType":"YulFunctionCall","src":"11644:14:15"},{"hexValue":"5472616e73706172656e745570677261646561626c6550726f78793a2061646d","kind":"string","nodeType":"YulLiteral","src":"11660:34:15","type":"","value":"TransparentUpgradeableProxy: adm"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11637:6:15"},"nodeType":"YulFunctionCall","src":"11637:58:15"},"nodeType":"YulExpressionStatement","src":"11637:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11716:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11724:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11712:3:15"},"nodeType":"YulFunctionCall","src":"11712:15:15"},{"hexValue":"696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267","kind":"string","nodeType":"YulLiteral","src":"11729:34:15","type":"","value":"in cannot fallback to proxy targ"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11705:6:15"},"nodeType":"YulFunctionCall","src":"11705:59:15"},"nodeType":"YulExpressionStatement","src":"11705:59:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11785:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11793:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11781:3:15"},"nodeType":"YulFunctionCall","src":"11781:15:15"},{"hexValue":"6574","kind":"string","nodeType":"YulLiteral","src":"11798:4:15","type":"","value":"et"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11774:6:15"},"nodeType":"YulFunctionCall","src":"11774:29:15"},"nodeType":"YulExpressionStatement","src":"11774:29:15"}]},"name":"store_literal_in_memory_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11618:6:15","type":""}],"src":"11520:290:15"},{"body":{"nodeType":"YulBlock","src":"11867:87:15","statements":[{"body":{"nodeType":"YulBlock","src":"11932:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11941:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11944:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11934:6:15"},"nodeType":"YulFunctionCall","src":"11934:12:15"},"nodeType":"YulExpressionStatement","src":"11934:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11890:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11923:5:15"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"11897:25:15"},"nodeType":"YulFunctionCall","src":"11897:32:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11887:2:15"},"nodeType":"YulFunctionCall","src":"11887:43:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11880:6:15"},"nodeType":"YulFunctionCall","src":"11880:51:15"},"nodeType":"YulIf","src":"11877:71:15"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11860:5:15","type":""}],"src":"11816:138:15"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payablet_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 66)\n        store_literal_in_memory_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new admin is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new implementation is n\")\n\n        mstore(add(memPtr, 32), \"ot a contract\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransparentUpgradeableProxy: adm\")\n\n        mstore(add(memPtr, 32), \"in cannot fallback to proxy targ\")\n\n        mstore(add(memPtr, 64), \"et\")\n\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25 PUSH2 0x2F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x295 JUMPI PUSH1 0x60 PUSH1 0x0 DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SWAP1 POP PUSH4 0x3659CFE6 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0xDE JUMPI PUSH2 0xD7 PUSH2 0x350 JUMP JUMPDEST SWAP2 POP PUSH2 0x28D JUMP JUMPDEST PUSH4 0x4F1EF286 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0x13A JUMPI PUSH2 0x133 PUSH2 0x3AF JUMP JUMPDEST SWAP2 POP PUSH2 0x28C JUMP JUMPDEST PUSH4 0x8F283970 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0x196 JUMPI PUSH2 0x18F PUSH2 0x3FC JUMP JUMPDEST SWAP2 POP PUSH2 0x28B JUMP JUMPDEST PUSH4 0xF851A440 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0x1F2 JUMPI PUSH2 0x1EB PUSH2 0x449 JUMP JUMPDEST SWAP2 POP PUSH2 0x28A JUMP JUMPDEST PUSH4 0x5C60DA1B PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0x24E JUMPI PUSH2 0x247 PUSH2 0x485 JUMP JUMPDEST SWAP2 POP PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x280 SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD RETURN JUMPDEST PUSH2 0x29D PUSH2 0x4C1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF61 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x4DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x327 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x35A PUSH2 0x561 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x4 SWAP1 DUP1 SWAP3 PUSH2 0x36F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCBD JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 CALLDATASIZE PUSH1 0x4 SWAP1 DUP1 SWAP3 PUSH2 0x3C8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCBD JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x9D7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x3E5 DUP3 DUP3 PUSH1 0x1 PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x406 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x4 SWAP1 DUP1 SWAP3 PUSH2 0x41B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCBD JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP PUSH2 0x433 DUP2 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x453 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D PUSH2 0x2F9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x470 SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x48F PUSH2 0x561 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 PUSH2 0x5E8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x4C9 PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x4D9 PUSH2 0x4D4 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x505 SWAP2 SWAP1 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x540 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x545 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x556 DUP7 DUP4 DUP4 DUP8 PUSH2 0x61F JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x579 DUP4 PUSH2 0x695 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x586 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x597 JUMPI PUSH2 0x595 DUP4 DUP4 PUSH2 0x29F JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x5C5 PUSH2 0x2F9 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0x5D4 SWAP3 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x5E5 DUP2 PUSH2 0x6E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F2 PUSH2 0x7C5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x61A JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x67A JUMPI PUSH2 0x63A DUP6 PUSH2 0x2D6 JUMP JUMPDEST PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x670 SWAP1 PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x68D JUMP JUMPDEST PUSH2 0x68C DUP4 DUP4 PUSH2 0x81C JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x69E DUP2 PUSH2 0x86C JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x781 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x82F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x875 DUP2 PUSH2 0x2D6 JUMP JUMPDEST PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x8E1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x938 PUSH2 0x933 DUP5 PUSH2 0xC5A JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x954 JUMPI PUSH2 0x953 PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH2 0x95F DUP5 DUP3 DUP6 PUSH2 0xD3C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x976 DUP2 PUSH2 0xF49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x991 JUMPI PUSH2 0x990 PUSH2 0xDDE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9A1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x925 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9BF PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9CE DUP5 DUP3 DUP6 ADD PUSH2 0x967 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9EE JUMPI PUSH2 0x9ED PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9FC DUP6 DUP3 DUP7 ADD PUSH2 0x967 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA1D JUMPI PUSH2 0xA1C PUSH2 0xDF2 JUMP JUMPDEST JUMPDEST PUSH2 0xA29 DUP6 DUP3 DUP7 ADD PUSH2 0x97C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3C DUP2 PUSH2 0xCF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4D DUP3 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0xA57 DUP2 DUP6 PUSH2 0xCA1 JUMP JUMPDEST SWAP4 POP PUSH2 0xA67 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD4B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7E DUP3 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0xA88 DUP2 DUP6 PUSH2 0xCAC JUMP JUMPDEST SWAP4 POP PUSH2 0xA98 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD4B JUMP JUMPDEST PUSH2 0xAA1 DUP2 PUSH2 0xDFC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB9 PUSH1 0x26 DUP4 PUSH2 0xCAC JUMP JUMPDEST SWAP2 POP PUSH2 0xAC4 DUP3 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADC PUSH1 0x2D DUP4 PUSH2 0xCAC JUMP JUMPDEST SWAP2 POP PUSH2 0xAE7 DUP3 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFF PUSH1 0x1D DUP4 PUSH2 0xCAC JUMP JUMPDEST SWAP2 POP PUSH2 0xB0A DUP3 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB22 PUSH1 0x42 DUP4 PUSH2 0xCAC JUMP JUMPDEST SWAP2 POP PUSH2 0xB2D DUP3 PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB44 DUP3 DUP5 PUSH2 0xA42 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB7F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xB8C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA33 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBAD DUP2 DUP5 PUSH2 0xA73 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBCE DUP2 PUSH2 0xAAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBEE DUP2 PUSH2 0xACF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC0E DUP2 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC2E DUP2 PUSH2 0xB15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3F PUSH2 0xC50 JUMP JUMPDEST SWAP1 POP PUSH2 0xC4B DUP3 DUP3 PUSH2 0xD7E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC75 JUMPI PUSH2 0xC74 PUSH2 0xDAF JUMP JUMPDEST JUMPDEST PUSH2 0xC7E DUP3 PUSH2 0xDFC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0xCD1 JUMPI PUSH2 0xCD0 PUSH2 0xDE8 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0xCE2 JUMPI PUSH2 0xCE1 PUSH2 0xDE3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD03 DUP3 PUSH2 0xD1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP3 PUSH2 0xD1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD69 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD4E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xD78 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD87 DUP3 PUSH2 0xDFC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xDA6 JUMPI PUSH2 0xDA5 PUSH2 0xDAF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73706172656E745570677261646561626C6550726F78793A2061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E2063616E6E6F742066616C6C6261636B20746F2070726F78792074617267 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6574000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xF52 DUP2 PUSH2 0xD0A JUMP JUMPDEST DUP2 EQ PUSH2 0xF5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212202FEA5F 0xD3 GAS INVALID PUSH5 0xDD31F6DBEC SDIV EXTCODEHASH 0x4D 0xA5 PUSH13 0x47D51CA80989175F3697E6A5A OR SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"3389:4951:8:-:0;;;;;;2898:11:5;:9;:11::i;:::-;3389:4951:8;;2675:11:5;:9;:11::i;:::-;3389:4951:8;4407:1102;4482:11;:9;:11::i;:::-;4468:25;;:10;:25;;;4464:1039;;;4509:16;4539:15;4557:7;;;;4539:25;;4594:47;;;4582:59;;;:8;:59;;;;4578:779;;;4667:20;:18;:20::i;:::-;4661:26;;4578:779;;;4724:54;;;4712:66;;;:8;:66;;;;4708:649;;;4804:27;:25;:27::i;:::-;4798:33;;4708:649;;;4868:49;;;4856:61;;;:8;:61;;;;4852:505;;;4943:22;:20;:22::i;:::-;4937:28;;4852:505;;;5002:43;;;4990:55;;;:8;:55;;;;4986:371;;;5071:16;:14;:16::i;:::-;5065:22;;4986:371;;;5124:52;;;5112:64;;;:8;:64;;;;5108:249;;;5202:25;:23;:25::i;:::-;5196:31;;5108:249;;;5266:76;;;;;;;;;;:::i;:::-;;;;;;;;5108:249;4986:371;4852:505;4708:649;4578:779;5426:3;5420:10;5413:4;5408:3;5404:14;5397:34;4464:1039;5475:17;:15;:17::i;:::-;4407:1102::o;6674:198:9:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;;6674:198;;;;:::o;1859:190:11:-;1920:21;2029:4;2019:14;;1859:190;;;:::o;1412:320:9:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;3784:122:4:-;3828:7;3854:39;3656:66;3881:11;;3854:26;:39::i;:::-;:45;;;;;;;;;;;;3847:52;;3784:122;:::o;6985:255:8:-;7032:12;7056:19;:17;:19::i;:::-;7086:25;7125:8;;7134:1;7125:12;;;;;;;;;:::i;:::-;7114:35;;;;;;;:::i;:::-;7086:63;;7159:54;7177:17;7196:9;;;;;;;;;;;;7207:5;7159:17;:54::i;:::-;7224:9;;;;;;;;;;;;;;;6985:255;:::o;7524:254::-;7578:12;7603:25;7630:17;7662:8;;7671:1;7662:12;;;;;;;;;:::i;:::-;7651:42;;;;;;;:::i;:::-;7602:91;;;;7703:48;7721:17;7740:4;7746;7703:17;:48::i;:::-;7762:9;;;;;;;;;;;;;;;;7524:254;:::o;6694:216::-;6743:12;6767:19;:17;:19::i;:::-;6797:16;6827:8;;6836:1;6827:12;;;;;;;;;:::i;:::-;6816:35;;;;;;;:::i;:::-;6797:54;;6861:22;6874:8;6861:12;:22::i;:::-;6894:9;;;;;;;;;;;;;;;6694:216;:::o;5860:165::-;5903:12;5927:19;:17;:19::i;:::-;5957:13;5973:11;:9;:11::i;:::-;5957:27;;6012:5;6001:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;5994:24;;;5860:165;:::o;6385:198::-;6437:12;6461:19;:17;:19::i;:::-;6491:22;6516:17;:15;:17::i;:::-;6491:42;;6561:14;6550:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;6543:33;;;6385:198;:::o;2322:110:5:-;2370:17;:15;:17::i;:::-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;7058:325:9:-;7199:12;7224;7238:23;7265:6;:19;;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;:69::i;:::-;7300:76;;;;7058:325;;;;;:::o;8261:77:8:-;8329:1;8316:9;:14;8308:23;;;;;;8261:77::o;2057:265:4:-;2165:29;2176:17;2165:10;:29::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;:53::i;:::-;;2204:112;2057:265;;;:::o;4300:135::-;4364:35;4377:11;:9;:11::i;:::-;4390:8;4364:35;;;;;;;:::i;:::-;;;;;;;;4409:19;4419:8;4409:9;:19::i;:::-;4300:135;:::o;1148:140:3:-;1215:12;1246:35;:33;:35::i;:::-;1239:42;;1148:140;:::o;3198:46:5:-;:::o;948:895::-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1686:1;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;7671:628:9;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1771:152:4:-;1837:37;1856:17;1837:18;:37::i;:::-;1898:17;1889:27;;;;;;;;;;;;1771:152;:::o;3988:201::-;4071:1;4051:22;;:8;:22;;;;4043:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4174:8;4126:39;3656:66;4153:11;;4126:26;:39::i;:::-;:45;;;:56;;;;;;;;;;;;;;;;;;3988:201;:::o;1175:140::-;1228:7;1254:48;1030:66;1281:20;;1254:26;:48::i;:::-;:54;;;;;;;;;;;;1247:61;;1175:140;:::o;8821:540:9:-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;1406:259:4;1487:37;1506:17;1487:18;:37::i;:::-;1479:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1641:17;1584:48;1030:66;1611:20;;1584:26;:48::i;:::-;:54;;;:74;;;;;;;;;;;;;;;;;;1406:259;:::o;7:410:15:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:155::-;477:5;515:6;502:20;493:29;;531:41;566:5;531:41;:::i;:::-;423:155;;;;:::o;597:338::-;652:5;701:3;694:4;686:6;682:17;678:27;668:122;;709:79;;:::i;:::-;668:122;826:6;813:20;851:78;925:3;917:6;910:4;902:6;898:17;851:78;:::i;:::-;842:87;;658:277;597:338;;;;:::o;941:345::-;1008:6;1057:2;1045:9;1036:7;1032:23;1028:32;1025:119;;;1063:79;;:::i;:::-;1025:119;1183:1;1208:61;1261:7;1252:6;1241:9;1237:22;1208:61;:::i;:::-;1198:71;;1154:125;941:345;;;;:::o;1292:668::-;1377:6;1385;1434:2;1422:9;1413:7;1409:23;1405:32;1402:119;;;1440:79;;:::i;:::-;1402:119;1560:1;1585:61;1638:7;1629:6;1618:9;1614:22;1585:61;:::i;:::-;1575:71;;1531:125;1723:2;1712:9;1708:18;1695:32;1754:18;1746:6;1743:30;1740:117;;;1776:79;;:::i;:::-;1740:117;1881:62;1935:7;1926:6;1915:9;1911:22;1881:62;:::i;:::-;1871:72;;1666:287;1292:668;;;;;:::o;1966:118::-;2053:24;2071:5;2053:24;:::i;:::-;2048:3;2041:37;1966:118;;:::o;2090:373::-;2194:3;2222:38;2254:5;2222:38;:::i;:::-;2276:88;2357:6;2352:3;2276:88;:::i;:::-;2269:95;;2373:52;2418:6;2413:3;2406:4;2399:5;2395:16;2373:52;:::i;:::-;2450:6;2445:3;2441:16;2434:23;;2198:265;2090:373;;;;:::o;2469:364::-;2557:3;2585:39;2618:5;2585:39;:::i;:::-;2640:71;2704:6;2699:3;2640:71;:::i;:::-;2633:78;;2720:52;2765:6;2760:3;2753:4;2746:5;2742:16;2720:52;:::i;:::-;2797:29;2819:6;2797:29;:::i;:::-;2792:3;2788:39;2781:46;;2561:272;2469:364;;;;:::o;2839:366::-;2981:3;3002:67;3066:2;3061:3;3002:67;:::i;:::-;2995:74;;3078:93;3167:3;3078:93;:::i;:::-;3196:2;3191:3;3187:12;3180:19;;2839:366;;;:::o;3211:::-;3353:3;3374:67;3438:2;3433:3;3374:67;:::i;:::-;3367:74;;3450:93;3539:3;3450:93;:::i;:::-;3568:2;3563:3;3559:12;3552:19;;3211:366;;;:::o;3583:::-;3725:3;3746:67;3810:2;3805:3;3746:67;:::i;:::-;3739:74;;3822:93;3911:3;3822:93;:::i;:::-;3940:2;3935:3;3931:12;3924:19;;3583:366;;;:::o;3955:::-;4097:3;4118:67;4182:2;4177:3;4118:67;:::i;:::-;4111:74;;4194:93;4283:3;4194:93;:::i;:::-;4312:2;4307:3;4303:12;4296:19;;3955:366;;;:::o;4327:271::-;4457:3;4479:93;4568:3;4559:6;4479:93;:::i;:::-;4472:100;;4589:3;4582:10;;4327:271;;;;:::o;4604:222::-;4697:4;4735:2;4724:9;4720:18;4712:26;;4748:71;4816:1;4805:9;4801:17;4792:6;4748:71;:::i;:::-;4604:222;;;;:::o;4832:332::-;4953:4;4991:2;4980:9;4976:18;4968:26;;5004:71;5072:1;5061:9;5057:17;5048:6;5004:71;:::i;:::-;5085:72;5153:2;5142:9;5138:18;5129:6;5085:72;:::i;:::-;4832:332;;;;;:::o;5170:313::-;5283:4;5321:2;5310:9;5306:18;5298:26;;5370:9;5364:4;5360:20;5356:1;5345:9;5341:17;5334:47;5398:78;5471:4;5462:6;5398:78;:::i;:::-;5390:86;;5170:313;;;;:::o;5489:419::-;5655:4;5693:2;5682:9;5678:18;5670:26;;5742:9;5736:4;5732:20;5728:1;5717:9;5713:17;5706:47;5770:131;5896:4;5770:131;:::i;:::-;5762:139;;5489:419;;;:::o;5914:::-;6080:4;6118:2;6107:9;6103:18;6095:26;;6167:9;6161:4;6157:20;6153:1;6142:9;6138:17;6131:47;6195:131;6321:4;6195:131;:::i;:::-;6187:139;;5914:419;;;:::o;6339:::-;6505:4;6543:2;6532:9;6528:18;6520:26;;6592:9;6586:4;6582:20;6578:1;6567:9;6563:17;6556:47;6620:131;6746:4;6620:131;:::i;:::-;6612:139;;6339:419;;;:::o;6764:::-;6930:4;6968:2;6957:9;6953:18;6945:26;;7017:9;7011:4;7007:20;7003:1;6992:9;6988:17;6981:47;7045:131;7171:4;7045:131;:::i;:::-;7037:139;;6764:419;;;:::o;7189:129::-;7223:6;7250:20;;:::i;:::-;7240:30;;7279:33;7307:4;7299:6;7279:33;:::i;:::-;7189:129;;;:::o;7324:75::-;7357:6;7390:2;7384:9;7374:19;;7324:75;:::o;7405:307::-;7466:4;7556:18;7548:6;7545:30;7542:56;;;7578:18;;:::i;:::-;7542:56;7616:29;7638:6;7616:29;:::i;:::-;7608:37;;7700:4;7694;7690:15;7682:23;;7405:307;;;:::o;7718:98::-;7769:6;7803:5;7797:12;7787:22;;7718:98;;;:::o;7822:99::-;7874:6;7908:5;7902:12;7892:22;;7822:99;;;:::o;7927:147::-;8028:11;8065:3;8050:18;;7927:147;;;;:::o;8080:169::-;8164:11;8198:6;8193:3;8186:19;8238:4;8233:3;8229:14;8214:29;;8080:169;;;;:::o;8255:469::-;8360:9;8371;8409:8;8397:10;8394:24;8391:111;;;8421:79;;:::i;:::-;8391:111;8527:6;8517:8;8514:20;8511:107;;;8537:79;;:::i;:::-;8511:107;8668:1;8656:10;8652:18;8644:6;8640:31;8627:44;;8707:10;8697:8;8693:25;8680:38;;8255:469;;;;;;;:::o;8730:96::-;8767:7;8796:24;8814:5;8796:24;:::i;:::-;8785:35;;8730:96;;;:::o;8832:104::-;8877:7;8906:24;8924:5;8906:24;:::i;:::-;8895:35;;8832:104;;;:::o;8942:126::-;8979:7;9019:42;9012:5;9008:54;8997:65;;8942:126;;;:::o;9074:154::-;9158:6;9153:3;9148;9135:30;9220:1;9211:6;9206:3;9202:16;9195:27;9074:154;;;:::o;9234:307::-;9302:1;9312:113;9326:6;9323:1;9320:13;9312:113;;;9411:1;9406:3;9402:11;9396:18;9392:1;9387:3;9383:11;9376:39;9348:2;9345:1;9341:10;9336:15;;9312:113;;;9443:6;9440:1;9437:13;9434:101;;;9523:1;9514:6;9509:3;9505:16;9498:27;9434:101;9283:258;9234:307;;;:::o;9547:281::-;9630:27;9652:4;9630:27;:::i;:::-;9622:6;9618:40;9760:6;9748:10;9745:22;9724:18;9712:10;9709:34;9706:62;9703:88;;;9771:18;;:::i;:::-;9703:88;9811:10;9807:2;9800:22;9590:238;9547:281;;:::o;9834:180::-;9882:77;9879:1;9872:88;9979:4;9976:1;9969:15;10003:4;10000:1;9993:15;10020:117;10129:1;10126;10119:12;10143:117;10252:1;10249;10242:12;10266:117;10375:1;10372;10365:12;10389:117;10498:1;10495;10488:12;10512:117;10621:1;10618;10611:12;10635:117;10744:1;10741;10734:12;10758:102;10799:6;10850:2;10846:7;10841:2;10834:5;10830:14;10826:28;10816:38;;10758:102;;;:::o;10866:225::-;11006:34;11002:1;10994:6;10990:14;10983:58;11075:8;11070:2;11062:6;11058:15;11051:33;10866:225;:::o;11097:232::-;11237:34;11233:1;11225:6;11221:14;11214:58;11306:15;11301:2;11293:6;11289:15;11282:40;11097:232;:::o;11335:179::-;11475:31;11471:1;11463:6;11459:14;11452:55;11335:179;:::o;11520:290::-;11660:34;11656:1;11648:6;11644:14;11637:58;11729:34;11724:2;11716:6;11712:15;11705:59;11798:4;11793:2;11785:6;11781:15;11774:29;11520:290;:::o;11816:138::-;11897:32;11923:5;11897:32;:::i;:::-;11890:5;11887:43;11877:71;;11944:1;11941;11934:12;11877:71;11816:138;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"805800","executionCost":"infinite","totalCost":"infinite"},"external":{"":"infinite"},"internal":{"_admin()":"infinite","_dispatchAdmin()":"infinite","_dispatchChangeAdmin()":"infinite","_dispatchImplementation()":"infinite","_dispatchUpgradeTo()":"infinite","_dispatchUpgradeToAndCall()":"infinite","_fallback()":"infinite","_requireZeroValue()":"31"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy. NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\\n * include them in the ABI so this interface must be used to interact with it.\\n */\\ninterface ITransparentUpgradeableProxy is IERC1967 {\\n    function admin() external view returns (address);\\n\\n    function implementation() external view returns (address);\\n\\n    function changeAdmin(address) external;\\n\\n    function upgradeTo(address) external;\\n\\n    function upgradeToAndCall(address, bytes memory) external payable;\\n}\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n *\\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\\n * implementation.\\n *\\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     *\\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\\n     * implementation provides a function with the same selector.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\\n     */\\n    function _fallback() internal virtual override {\\n        if (msg.sender == _getAdmin()) {\\n            bytes memory ret;\\n            bytes4 selector = msg.sig;\\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\\n                ret = _dispatchUpgradeTo();\\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\\n                ret = _dispatchUpgradeToAndCall();\\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\\n                ret = _dispatchChangeAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\\n                ret = _dispatchAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\\n                ret = _dispatchImplementation();\\n            } else {\\n                revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n            }\\n            assembly {\\n                return(add(ret, 0x20), mload(ret))\\n            }\\n        } else {\\n            super._fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function _dispatchAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address admin = _getAdmin();\\n        return abi.encode(admin);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function _dispatchImplementation() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address implementation = _implementation();\\n        return abi.encode(implementation);\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _dispatchChangeAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newAdmin = abi.decode(msg.data[4:], (address));\\n        _changeAdmin(newAdmin);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     */\\n    function _dispatchUpgradeTo() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newImplementation = abi.decode(msg.data[4:], (address));\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     */\\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\\n        _upgradeToAndCall(newImplementation, data, true);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\\n     */\\n    function _requireZeroValue() private {\\n        require(msg.value == 0);\\n    }\\n}\\n\",\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220033dc4f2321633d7d2eb2a67b37d15a81243120061aa29459862c44f76317d6864736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB RETURNDATASIZE 0xC4 CALLCODE ORIGIN AND CALLER 0xD7 0xD2 0xEB 0x2A PUSH8 0xB37D15A812431200 PUSH2 0xAA29 GASLIMIT SWAP9 PUSH3 0xC44F76 BALANCE PUSH30 0x6864736F6C63430008070033000000000000000000000000000000000000 ","sourceMap":"194:9169:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220033dc4f2321633d7d2eb2a67b37d15a81243120061aa29459862c44f76317d6864736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB RETURNDATASIZE 0xC4 CALLCODE ORIGIN AND CALLER 0xD7 0xD2 0xEB 0x2A PUSH8 0xB37D15A812431200 PUSH2 0xAA29 GASLIMIT SWAP9 PUSH3 0xC44F76 BALANCE PUSH30 0x6864736F6C63430008070033000000000000000000000000000000000000 ","sourceMap":"194:9169:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080c033b9563ffbf0193472b8b2d8ae3b878350257ec9f5d95836657f80743dee64736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xC0 CALLER 0xB9 JUMP EXTCODEHASH 0xFB CREATE NOT CALLVALUE PUSH19 0xB8B2D8AE3B878350257EC9F5D95836657F8074 RETURNDATASIZE 0xEE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"1420:2685:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080c033b9563ffbf0193472b8b2d8ae3b878350257ec9f5d95836657f80743dee64736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xC0 CALLER 0xB9 JUMP EXTCODEHASH 0xFB CREATE NOT CALLVALUE PUSH19 0xB8B2D8AE3B878350257EC9F5D95836657F8074 RETURNDATASIZE 0xEE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"1420:2685:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Box.sol":{"Box":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"NewValue","type":"uint256"}],"name":"ValueChanged","type":"event"},{"inputs":[],"name":"getNum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"newNum","type":"uint256"}],"name":"setValue","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506101b9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630d8e6e2c14610046578063552410771461006457806367e0badb14610080575b600080fd5b61004e61009e565b60405161005b9190610142565b60405180910390f35b61007e60048036038101906100799190610106565b6100a7565b005b6100886100e8565b6040516100959190610142565b60405180910390f35b60006001905090565b806000819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59816040516100dd9190610142565b60405180910390a150565b60008054905090565b6000813590506101008161016c565b92915050565b60006020828403121561011c5761011b610167565b5b600061012a848285016100f1565b91505092915050565b61013c8161015d565b82525050565b60006020820190506101576000830184610133565b92915050565b6000819050919050565b600080fd5b6101758161015d565b811461018057600080fd5b5056fea2646970667358221220a57a68a57848b163bbc8da7b0ec5fcdb59838c4a27b05a42f797e8fe3089944764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x67E0BADB EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x106 JUMP JUMPDEST PUSH2 0xA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH32 0x93FE6D397C74FDF1402A8B72E47B68512F0510D7B98A4BC4CBDF6AC7108B3C59 DUP2 PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x100 DUP2 PUSH2 0x16C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C JUMPI PUSH2 0x11B PUSH2 0x167 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12A DUP5 DUP3 DUP6 ADD PUSH2 0xF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C DUP2 PUSH2 0x15D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x157 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x175 DUP2 PUSH2 0x15D JUMP JUMPDEST DUP2 EQ PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 PUSH27 0x68A57848B163BBC8DA7B0EC5FCDB59838C4A27B05A42F797E8FE30 DUP10 SWAP5 SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"96:393:12:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getNum_1498":{"entryPoint":232,"id":1498,"parameterSlots":0,"returnSlots":1},"@getVersion_1506":{"entryPoint":158,"id":1506,"parameterSlots":0,"returnSlots":1},"@setValue_1490":{"entryPoint":167,"id":1490,"parameterSlots":1,"returnSlots":0},"abi_decode_t_uint256":{"entryPoint":241,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":262,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":307,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":322,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":349,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":359,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":364,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1374:15","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:15","statements":[{"nodeType":"YulAssignment","src":"69:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:15"},"nodeType":"YulFunctionCall","src":"78:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"107:26:15"},"nodeType":"YulFunctionCall","src":"107:33:15"},"nodeType":"YulExpressionStatement","src":"107:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:15","type":""}],"src":"7:139:15"},{"body":{"nodeType":"YulBlock","src":"218:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"264:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"266:77:15"},"nodeType":"YulFunctionCall","src":"266:79:15"},"nodeType":"YulExpressionStatement","src":"266:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"239:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"248:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:15"},"nodeType":"YulFunctionCall","src":"235:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"260:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"231:3:15"},"nodeType":"YulFunctionCall","src":"231:32:15"},"nodeType":"YulIf","src":"228:119:15"},{"nodeType":"YulBlock","src":"357:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"372:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"386:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"376:6:15","type":""}]},{"nodeType":"YulAssignment","src":"401:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"436:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"447:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"432:3:15"},"nodeType":"YulFunctionCall","src":"432:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"456:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"411:20:15"},"nodeType":"YulFunctionCall","src":"411:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"401:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"188:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"199:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"211:6:15","type":""}],"src":"152:329:15"},{"body":{"nodeType":"YulBlock","src":"552:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"569:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"592:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"574:17:15"},"nodeType":"YulFunctionCall","src":"574:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"562:6:15"},"nodeType":"YulFunctionCall","src":"562:37:15"},"nodeType":"YulExpressionStatement","src":"562:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"540:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"547:3:15","type":""}],"src":"487:118:15"},{"body":{"nodeType":"YulBlock","src":"709:124:15","statements":[{"nodeType":"YulAssignment","src":"719:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"731:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"742:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"727:3:15"},"nodeType":"YulFunctionCall","src":"727:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"719:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"799:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"812:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"823:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"808:3:15"},"nodeType":"YulFunctionCall","src":"808:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"755:43:15"},"nodeType":"YulFunctionCall","src":"755:71:15"},"nodeType":"YulExpressionStatement","src":"755:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"681:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"693:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"704:4:15","type":""}],"src":"611:222:15"},{"body":{"nodeType":"YulBlock","src":"879:35:15","statements":[{"nodeType":"YulAssignment","src":"889:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"905:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"899:5:15"},"nodeType":"YulFunctionCall","src":"899:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"889:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"872:6:15","type":""}],"src":"839:75:15"},{"body":{"nodeType":"YulBlock","src":"965:32:15","statements":[{"nodeType":"YulAssignment","src":"975:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"986:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"975:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"947:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"957:7:15","type":""}],"src":"920:77:15"},{"body":{"nodeType":"YulBlock","src":"1092:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1109:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1112:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1102:6:15"},"nodeType":"YulFunctionCall","src":"1102:12:15"},"nodeType":"YulExpressionStatement","src":"1102:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1003:117:15"},{"body":{"nodeType":"YulBlock","src":"1215:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1232:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1235:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1225:6:15"},"nodeType":"YulFunctionCall","src":"1225:12:15"},"nodeType":"YulExpressionStatement","src":"1225:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1126:117:15"},{"body":{"nodeType":"YulBlock","src":"1292:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"1349:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1358:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1361:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1351:6:15"},"nodeType":"YulFunctionCall","src":"1351:12:15"},"nodeType":"YulExpressionStatement","src":"1351:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1315:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1340:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1322:17:15"},"nodeType":"YulFunctionCall","src":"1322:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1312:2:15"},"nodeType":"YulFunctionCall","src":"1312:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1305:6:15"},"nodeType":"YulFunctionCall","src":"1305:43:15"},"nodeType":"YulIf","src":"1302:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1285:5:15","type":""}],"src":"1249:122:15"}]},"contents":"{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c80630d8e6e2c14610046578063552410771461006457806367e0badb14610080575b600080fd5b61004e61009e565b60405161005b9190610142565b60405180910390f35b61007e60048036038101906100799190610106565b6100a7565b005b6100886100e8565b6040516100959190610142565b60405180910390f35b60006001905090565b806000819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59816040516100dd9190610142565b60405180910390a150565b60008054905090565b6000813590506101008161016c565b92915050565b60006020828403121561011c5761011b610167565b5b600061012a848285016100f1565b91505092915050565b61013c8161015d565b82525050565b60006020820190506101576000830184610133565b92915050565b6000819050919050565b600080fd5b6101758161015d565b811461018057600080fd5b5056fea2646970667358221220a57a68a57848b163bbc8da7b0ec5fcdb59838c4a27b05a42f797e8fe3089944764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x67E0BADB EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x106 JUMP JUMPDEST PUSH2 0xA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH32 0x93FE6D397C74FDF1402A8B72E47B68512F0510D7B98A4BC4CBDF6AC7108B3C59 DUP2 PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x100 DUP2 PUSH2 0x16C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C JUMPI PUSH2 0x11B PUSH2 0x167 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12A DUP5 DUP3 DUP6 ADD PUSH2 0xF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C DUP2 PUSH2 0x15D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x157 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x175 DUP2 PUSH2 0x15D JUMP JUMPDEST DUP2 EQ PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 PUSH27 0x68A57848B163BBC8DA7B0EC5FCDB59838C4A27B05A42F797E8FE30 DUP10 SWAP5 SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"96:393:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;411:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;185:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;331:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;411:76;453:7;479:1;472:8;;411:76;:::o;185:140::-;266:6;260:3;:12;;;;298:20;311:6;298:20;;;;;;:::i;:::-;;;;;;;;185:140;:::o;331:74::-;369:7;395:3;;388:10;;331:74;:::o;7:139:15:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:222::-;704:4;742:2;731:9;727:18;719:26;;755:71;823:1;812:9;808:17;799:6;755:71;:::i;:::-;611:222;;;;:::o;920:77::-;957:7;986:5;975:16;;920:77;;;:::o;1126:117::-;1235:1;1232;1225:12;1249:122;1322:24;1340:5;1322:24;:::i;:::-;1315:5;1312:35;1302:63;;1361:1;1358;1351:12;1302:63;1249:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"88200","executionCost":"135","totalCost":"88335"},"external":{"getNum()":"2459","getVersion()":"315","setValue(uint256)":"infinite"}},"methodIdentifiers":{"getNum()":"67e0badb","getVersion()":"0d8e6e2c","setValue(uint256)":"55241077"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"NewValue\",\"type\":\"uint256\"}],\"name\":\"ValueChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNum\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Box.sol\":\"Box\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Box.sol\":{\"content\":\"// This is our implementation contract\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ncontract Box {\\n    uint256 internal num;\\n\\n    event ValueChanged(uint256 NewValue);\\n\\n    function setValue(uint256 newNum) public {\\n        unchecked {\\n            num = newNum;\\n        }\\n\\n        emit ValueChanged(newNum);\\n    }\\n\\n    function getNum() public view returns(uint256) {\\n        return num;\\n    }\\n\\n    function getVersion() public pure returns(uint256) {\\n        return 1;\\n    }\\n}\",\"keccak256\":\"0xb32573614a3fddb14fa04ce15e846918f340abacac0966f67f6589aa87627aba\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1471,"contract":"contracts/Box.sol:Box","label":"num","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BoxV2.sol":{"BoxV2":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"NewValue","type":"uint256"}],"name":"ValueChanged","type":"event"},{"inputs":[],"name":"getNum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"increment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newNum","type":"uint256"}],"name":"setValue","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610215806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630d8e6e2c14610051578063552410771461006f57806367e0badb1461008b578063d09de08a146100a9575b600080fd5b6100596100b3565b604051610066919061019e565b60405180910390f35b61008960048036038101906100849190610162565b6100bc565b005b6100936100fd565b6040516100a0919061019e565b60405180910390f35b6100b1610106565b005b60006002905090565b806000819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59816040516100f2919061019e565b60405180910390a150565b60008054905090565b600b600054016000819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59600054604051610143919061019e565b60405180910390a1565b60008135905061015c816101c8565b92915050565b600060208284031215610178576101776101c3565b5b60006101868482850161014d565b91505092915050565b610198816101b9565b82525050565b60006020820190506101b3600083018461018f565b92915050565b6000819050919050565b600080fd5b6101d1816101b9565b81146101dc57600080fd5b5056fea26469706673582212208f28f435dadedfa4fe78029bb9520076ac2d66d84c196f3db944aef6ac981c2c64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x67E0BADB EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH2 0xBC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x93 PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH2 0x106 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH32 0x93FE6D397C74FDF1402A8B72E47B68512F0510D7B98A4BC4CBDF6AC7108B3C59 DUP2 PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SLOAD ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH32 0x93FE6D397C74FDF1402A8B72E47B68512F0510D7B98A4BC4CBDF6AC7108B3C59 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C DUP2 PUSH2 0x1C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x178 JUMPI PUSH2 0x177 PUSH2 0x1C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x186 DUP5 DUP3 DUP6 ADD PUSH2 0x14D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x198 DUP2 PUSH2 0x1B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 DUP2 PUSH2 0x1B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x28 DELEGATECALL CALLDATALOAD 0xDA 0xDE 0xDF LOG4 INVALID PUSH25 0x29BB9520076AC2D66D84C196F3DB944AEF6AC981C2C64736F PUSH13 0x63430008070033000000000000 ","sourceMap":"96:527:13:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getNum_1538":{"entryPoint":253,"id":1538,"parameterSlots":0,"returnSlots":1},"@getVersion_1546":{"entryPoint":179,"id":1546,"parameterSlots":0,"returnSlots":1},"@increment_1561":{"entryPoint":262,"id":1561,"parameterSlots":0,"returnSlots":0},"@setValue_1530":{"entryPoint":188,"id":1530,"parameterSlots":1,"returnSlots":0},"abi_decode_t_uint256":{"entryPoint":333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":354,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":399,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":414,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":441,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":451,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":456,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1374:15","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:15","statements":[{"nodeType":"YulAssignment","src":"69:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:15"},"nodeType":"YulFunctionCall","src":"78:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"107:26:15"},"nodeType":"YulFunctionCall","src":"107:33:15"},"nodeType":"YulExpressionStatement","src":"107:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:15","type":""}],"src":"7:139:15"},{"body":{"nodeType":"YulBlock","src":"218:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"264:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"266:77:15"},"nodeType":"YulFunctionCall","src":"266:79:15"},"nodeType":"YulExpressionStatement","src":"266:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"239:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"248:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:15"},"nodeType":"YulFunctionCall","src":"235:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"260:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"231:3:15"},"nodeType":"YulFunctionCall","src":"231:32:15"},"nodeType":"YulIf","src":"228:119:15"},{"nodeType":"YulBlock","src":"357:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"372:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"386:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"376:6:15","type":""}]},{"nodeType":"YulAssignment","src":"401:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"436:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"447:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"432:3:15"},"nodeType":"YulFunctionCall","src":"432:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"456:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"411:20:15"},"nodeType":"YulFunctionCall","src":"411:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"401:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"188:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"199:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"211:6:15","type":""}],"src":"152:329:15"},{"body":{"nodeType":"YulBlock","src":"552:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"569:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"592:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"574:17:15"},"nodeType":"YulFunctionCall","src":"574:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"562:6:15"},"nodeType":"YulFunctionCall","src":"562:37:15"},"nodeType":"YulExpressionStatement","src":"562:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"540:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"547:3:15","type":""}],"src":"487:118:15"},{"body":{"nodeType":"YulBlock","src":"709:124:15","statements":[{"nodeType":"YulAssignment","src":"719:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"731:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"742:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"727:3:15"},"nodeType":"YulFunctionCall","src":"727:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"719:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"799:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"812:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"823:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"808:3:15"},"nodeType":"YulFunctionCall","src":"808:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"755:43:15"},"nodeType":"YulFunctionCall","src":"755:71:15"},"nodeType":"YulExpressionStatement","src":"755:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"681:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"693:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"704:4:15","type":""}],"src":"611:222:15"},{"body":{"nodeType":"YulBlock","src":"879:35:15","statements":[{"nodeType":"YulAssignment","src":"889:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"905:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"899:5:15"},"nodeType":"YulFunctionCall","src":"899:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"889:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"872:6:15","type":""}],"src":"839:75:15"},{"body":{"nodeType":"YulBlock","src":"965:32:15","statements":[{"nodeType":"YulAssignment","src":"975:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"986:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"975:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"947:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"957:7:15","type":""}],"src":"920:77:15"},{"body":{"nodeType":"YulBlock","src":"1092:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1109:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1112:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1102:6:15"},"nodeType":"YulFunctionCall","src":"1102:12:15"},"nodeType":"YulExpressionStatement","src":"1102:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1003:117:15"},{"body":{"nodeType":"YulBlock","src":"1215:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1232:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1235:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1225:6:15"},"nodeType":"YulFunctionCall","src":"1225:12:15"},"nodeType":"YulExpressionStatement","src":"1225:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1126:117:15"},{"body":{"nodeType":"YulBlock","src":"1292:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"1349:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1358:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1361:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1351:6:15"},"nodeType":"YulFunctionCall","src":"1351:12:15"},"nodeType":"YulExpressionStatement","src":"1351:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1315:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1340:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1322:17:15"},"nodeType":"YulFunctionCall","src":"1322:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1312:2:15"},"nodeType":"YulFunctionCall","src":"1312:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1305:6:15"},"nodeType":"YulFunctionCall","src":"1305:43:15"},"nodeType":"YulIf","src":"1302:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1285:5:15","type":""}],"src":"1249:122:15"}]},"contents":"{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c80630d8e6e2c14610051578063552410771461006f57806367e0badb1461008b578063d09de08a146100a9575b600080fd5b6100596100b3565b604051610066919061019e565b60405180910390f35b61008960048036038101906100849190610162565b6100bc565b005b6100936100fd565b6040516100a0919061019e565b60405180910390f35b6100b1610106565b005b60006002905090565b806000819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59816040516100f2919061019e565b60405180910390a150565b60008054905090565b600b600054016000819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59600054604051610143919061019e565b60405180910390a1565b60008135905061015c816101c8565b92915050565b600060208284031215610178576101776101c3565b5b60006101868482850161014d565b91505092915050565b610198816101b9565b82525050565b60006020820190506101b3600083018461018f565b92915050565b6000819050919050565b600080fd5b6101d1816101b9565b81146101dc57600080fd5b5056fea26469706673582212208f28f435dadedfa4fe78029bb9520076ac2d66d84c196f3db944aef6ac981c2c64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x67E0BADB EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH2 0xBC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x93 PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH2 0x106 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH32 0x93FE6D397C74FDF1402A8B72E47B68512F0510D7B98A4BC4CBDF6AC7108B3C59 DUP2 PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SLOAD ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH32 0x93FE6D397C74FDF1402A8B72E47B68512F0510D7B98A4BC4CBDF6AC7108B3C59 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C DUP2 PUSH2 0x1C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x178 JUMPI PUSH2 0x177 PUSH2 0x1C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x186 DUP5 DUP3 DUP6 ADD PUSH2 0x14D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x198 DUP2 PUSH2 0x1B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 DUP2 PUSH2 0x1B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x28 DELEGATECALL CALLDATALOAD 0xDA 0xDE 0xDF LOG4 INVALID PUSH25 0x29BB9520076AC2D66D84C196F3DB944AEF6AC981C2C64736F PUSH13 0x63430008070033000000000000 ","sourceMap":"96:527:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;413:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;187:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;333:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;495:126;;;:::i;:::-;;413:76;455:7;481:1;474:8;;413:76;:::o;187:140::-;268:6;262:3;:12;;;;300:20;313:6;300:20;;;;;;:::i;:::-;;;;;;;;187:140;:::o;333:74::-;371:7;397:3;;390:10;;333:74;:::o;495:126::-;569:2;563:3;;:8;557:3;:14;;;;597:17;610:3;;597:17;;;;;;:::i;:::-;;;;;;;;495:126::o;7:139:15:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:222::-;704:4;742:2;731:9;727:18;719:26;;755:71;823:1;812:9;808:17;799:6;755:71;:::i;:::-;611:222;;;;:::o;920:77::-;957:7;986:5;975:16;;920:77;;;:::o;1126:117::-;1235:1;1232;1225:12;1249:122;1322:24;1340:5;1322:24;:::i;:::-;1315:5;1312:35;1302:63;;1361:1;1358;1351:12;1302:63;1249:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"106600","executionCost":"153","totalCost":"106753"},"external":{"getNum()":"2459","getVersion()":"315","increment()":"27699","setValue(uint256)":"infinite"}},"methodIdentifiers":{"getNum()":"67e0badb","getVersion()":"0d8e6e2c","increment()":"d09de08a","setValue(uint256)":"55241077"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"NewValue\",\"type\":\"uint256\"}],\"name\":\"ValueChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNum\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BoxV2.sol\":\"BoxV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BoxV2.sol\":{\"content\":\"// This is our implementation contract\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ncontract BoxV2 {\\n    uint256 internal num;\\n\\n    event ValueChanged(uint256 NewValue);\\n\\n    function setValue(uint256 newNum) public {\\n        unchecked {\\n            num = newNum;\\n        }\\n\\n        emit ValueChanged(newNum);\\n    }\\n\\n    function getNum() public view returns(uint256) {\\n        return num;\\n    }\\n\\n    function getVersion() public pure returns(uint256) {\\n        return 2;\\n    }\\n\\n    function increment() public {\\n        unchecked {\\n            num = num + 11;\\n        }\\n\\n        emit ValueChanged(num);\\n    }\\n}\",\"keccak256\":\"0x103f7b40b9335aec6d9a5a78c2eb2559b892cd947eb8aa5c4a64469e3bffef50\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1511,"contract":"contracts/BoxV2.sol:BoxV2","label":"num","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Proxy/BoxProxyAdmin.sol":{"BoxProxyAdmin":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"newAdmin","type":"address"}],"name":"changeProxyAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"}],"name":"upgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"changeProxyAdmin(address,address)":{"details":"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`."},"getProxyAdmin(address)":{"details":"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"getProxyImplementation(address)":{"details":"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgrade(address,address)":{"details":"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`."},"upgradeAndCall(address,address,bytes)":{"details":"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1575":{"entryPoint":null,"id":1575,"parameterSlots":1,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_msgSender_1347":{"entryPoint":94,"id":1347,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":102,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":298,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":321,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":371,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":391,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":423,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":428,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:15","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:15","statements":[{"nodeType":"YulAssignment","src":"80:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:15"},"nodeType":"YulFunctionCall","src":"89:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:15"},"nodeType":"YulFunctionCall","src":"111:33:15"},"nodeType":"YulExpressionStatement","src":"111:33:15"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:15","type":""}],"src":"7:143:15"},{"body":{"nodeType":"YulBlock","src":"233:274:15","statements":[{"body":{"nodeType":"YulBlock","src":"279:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"281:77:15"},"nodeType":"YulFunctionCall","src":"281:79:15"},"nodeType":"YulExpressionStatement","src":"281:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"254:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"263:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"250:3:15"},"nodeType":"YulFunctionCall","src":"250:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"275:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"246:3:15"},"nodeType":"YulFunctionCall","src":"246:32:15"},"nodeType":"YulIf","src":"243:119:15"},{"nodeType":"YulBlock","src":"372:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"387:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"401:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"391:6:15","type":""}]},{"nodeType":"YulAssignment","src":"416:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"473:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:15"},"nodeType":"YulFunctionCall","src":"458:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"482:7:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"426:31:15"},"nodeType":"YulFunctionCall","src":"426:64:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:15"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"203:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"214:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"226:6:15","type":""}],"src":"156:351:15"},{"body":{"nodeType":"YulBlock","src":"553:35:15","statements":[{"nodeType":"YulAssignment","src":"563:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"579:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"573:5:15"},"nodeType":"YulFunctionCall","src":"573:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"563:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"546:6:15","type":""}],"src":"513:75:15"},{"body":{"nodeType":"YulBlock","src":"639:51:15","statements":[{"nodeType":"YulAssignment","src":"649:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"678:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"660:17:15"},"nodeType":"YulFunctionCall","src":"660:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"649:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"621:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"631:7:15","type":""}],"src":"594:96:15"},{"body":{"nodeType":"YulBlock","src":"741:81:15","statements":[{"nodeType":"YulAssignment","src":"751:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"766:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"773:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"762:3:15"},"nodeType":"YulFunctionCall","src":"762:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"751:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"723:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"733:7:15","type":""}],"src":"696:126:15"},{"body":{"nodeType":"YulBlock","src":"917:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"934:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"937:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"927:6:15"},"nodeType":"YulFunctionCall","src":"927:12:15"},"nodeType":"YulExpressionStatement","src":"927:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"828:117:15"},{"body":{"nodeType":"YulBlock","src":"1040:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1057:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1060:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1050:6:15"},"nodeType":"YulFunctionCall","src":"1050:12:15"},"nodeType":"YulExpressionStatement","src":"1050:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"951:117:15"},{"body":{"nodeType":"YulBlock","src":"1117:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"1174:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1186:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1176:6:15"},"nodeType":"YulFunctionCall","src":"1176:12:15"},"nodeType":"YulExpressionStatement","src":"1176:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1140:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1165:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1147:17:15"},"nodeType":"YulFunctionCall","src":"1147:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1137:2:15"},"nodeType":"YulFunctionCall","src":"1137:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1130:6:15"},"nodeType":"YulFunctionCall","src":"1130:43:15"},"nodeType":"YulIf","src":"1127:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1110:5:15","type":""}],"src":"1074:122:15"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000ea338038062000ea3833981810160405281019062000037919062000141565b620000576200004b6200005e60201b60201c565b6200006660201b60201c565b50620001c6565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200013b81620001ac565b92915050565b6000602082840312156200015a5762000159620001a7565b5b60006200016a848285016200012a565b91505092915050565b6000620001808262000187565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001b78162000173565b8114620001c357600080fd5b50565b610ccd80620001d66000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461012857806399a88ec414610144578063f2fde38b1461016d578063f3b7dead146101965761007b565b8063204e1c7a14610080578063715018a6146100bd5780637eff275e146100d45780638da5cb5b146100fd575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610778565b6101d3565b6040516100b49190610952565b60405180910390f35b3480156100c957600080fd5b506100d2610267565b005b3480156100e057600080fd5b506100fb60048036038101906100f691906107a5565b61027b565b005b34801561010957600080fd5b506101126102f2565b60405161011f9190610952565b60405180910390f35b610142600480360381019061013d91906107e5565b61031b565b005b34801561015057600080fd5b5061016b600480360381019061016691906107a5565b610396565b005b34801561017957600080fd5b50610194600480360381019061018f919061071e565b61040d565b005b3480156101a257600080fd5b506101bd60048036038101906101b89190610778565b610491565b6040516101ca9190610952565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516101fb90610928565b600060405180830381855afa9150503d8060008114610236576040519150601f19603f3d011682016040523d82523d6000602084013e61023b565b606091505b50915091508161024a57600080fd5b8080602001905181019061025e919061074b565b92505050919050565b61026f610525565b61027960006105a3565b565b610283610525565b8173ffffffffffffffffffffffffffffffffffffffff16638f283970826040518263ffffffff1660e01b81526004016102bc9190610952565b600060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610323610525565b8273ffffffffffffffffffffffffffffffffffffffff16634f1ef2863484846040518463ffffffff1660e01b815260040161035f92919061096d565b6000604051808303818588803b15801561037857600080fd5b505af115801561038c573d6000803e3d6000fd5b5050505050505050565b61039e610525565b8173ffffffffffffffffffffffffffffffffffffffff16633659cfe6826040518263ffffffff1660e01b81526004016103d79190610952565b600060405180830381600087803b1580156103f157600080fd5b505af1158015610405573d6000803e3d6000fd5b505050505050565b610415610525565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047c9061099d565b60405180910390fd5b61048e816105a3565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516104b99061093d565b600060405180830381855afa9150503d80600081146104f4576040519150601f19603f3d011682016040523d82523d6000602084013e6104f9565b606091505b50915091508161050857600080fd5b8080602001905181019061051c919061074b565b92505050919050565b61052d610667565b73ffffffffffffffffffffffffffffffffffffffff1661054b6102f2565b73ffffffffffffffffffffffffffffffffffffffff16146105a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610598906109bd565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600061068261067d84610a02565b6109dd565b90508281526020810184848401111561069e5761069d610b68565b5b6106a9848285610ac1565b509392505050565b6000813590506106c081610c52565b92915050565b6000815190506106d581610c69565b92915050565b600082601f8301126106f0576106ef610b63565b5b813561070084826020860161066f565b91505092915050565b60008135905061071881610c80565b92915050565b60006020828403121561073457610733610b72565b5b6000610742848285016106b1565b91505092915050565b60006020828403121561076157610760610b72565b5b600061076f848285016106c6565b91505092915050565b60006020828403121561078e5761078d610b72565b5b600061079c84828501610709565b91505092915050565b600080604083850312156107bc576107bb610b72565b5b60006107ca85828601610709565b92505060206107db858286016106b1565b9150509250929050565b6000806000606084860312156107fe576107fd610b72565b5b600061080c86828701610709565b935050602061081d868287016106b1565b925050604084013567ffffffffffffffff81111561083e5761083d610b6d565b5b61084a868287016106db565b9150509250925092565b61085d81610a6b565b82525050565b600061086e82610a33565b6108788185610a3e565b9350610888818560208601610ad0565b61089181610b77565b840191505092915050565b60006108a9602683610a5a565b91506108b482610b88565b604082019050919050565b60006108cc600483610a4f565b91506108d782610bd7565b600482019050919050565b60006108ef602083610a5a565b91506108fa82610c00565b602082019050919050565b6000610912600483610a4f565b915061091d82610c29565b600482019050919050565b6000610933826108bf565b9150819050919050565b600061094882610905565b9150819050919050565b60006020820190506109676000830184610854565b92915050565b60006040820190506109826000830185610854565b81810360208301526109948184610863565b90509392505050565b600060208201905081810360008301526109b68161089c565b9050919050565b600060208201905081810360008301526109d6816108e2565b9050919050565b60006109e76109f8565b90506109f38282610b03565b919050565b6000604051905090565b600067ffffffffffffffff821115610a1d57610a1c610b34565b5b610a2682610b77565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610a7682610aa1565b9050919050565b6000610a8882610aa1565b9050919050565b6000610a9a82610a6b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610aee578082015181840152602081019050610ad3565b83811115610afd576000848401525b50505050565b610b0c82610b77565b810181811067ffffffffffffffff82111715610b2b57610b2a610b34565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5c60da1b00000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7ff851a44000000000000000000000000000000000000000000000000000000000600082015250565b610c5b81610a6b565b8114610c6657600080fd5b50565b610c7281610a7d565b8114610c7d57600080fd5b50565b610c8981610a8f565b8114610c9457600080fd5b5056fea264697066735822122033fee97d6dcfe35249b6de0cf6b4b92250b3ff0b35ef373025677f10346c2e6564736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xEA3 CODESIZE SUB DUP1 PUSH3 0xEA3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x141 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x5E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x66 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1C6 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x13B DUP2 PUSH3 0x1AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x15A JUMPI PUSH3 0x159 PUSH3 0x1A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x16A DUP5 DUP3 DUP6 ADD PUSH3 0x12A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x180 DUP3 PUSH3 0x187 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1B7 DUP2 PUSH3 0x173 JUMP JUMPDEST DUP2 EQ PUSH3 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xCCD DUP1 PUSH3 0x1D6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x99A88EC4 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xF3B7DEAD EQ PUSH2 0x196 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x204E1C7A EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x7EFF275E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x267 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP1 PUSH2 0x928 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x74B JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F PUSH2 0x525 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x0 PUSH2 0x5A3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x283 PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8F283970 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x525 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4F1EF286 CALLVALUE DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP3 SWAP2 SWAP1 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3659CFE6 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x405 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x415 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47C SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48E DUP2 PUSH2 0x5A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x4B9 SWAP1 PUSH2 0x93D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x74B JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52D PUSH2 0x667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x54B PUSH2 0x2F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x598 SWAP1 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 PUSH2 0x67D DUP5 PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x9DD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x69E JUMPI PUSH2 0x69D PUSH2 0xB68 JUMP JUMPDEST JUMPDEST PUSH2 0x6A9 DUP5 DUP3 DUP6 PUSH2 0xAC1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C0 DUP2 PUSH2 0xC52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6D5 DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6F0 JUMPI PUSH2 0x6EF PUSH2 0xB63 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x700 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x66F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x718 DUP2 PUSH2 0xC80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x734 JUMPI PUSH2 0x733 PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x742 DUP5 DUP3 DUP6 ADD PUSH2 0x6B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x761 JUMPI PUSH2 0x760 PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x76F DUP5 DUP3 DUP6 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78E JUMPI PUSH2 0x78D PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x79C DUP5 DUP3 DUP6 ADD PUSH2 0x709 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7BC JUMPI PUSH2 0x7BB PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7CA DUP6 DUP3 DUP7 ADD PUSH2 0x709 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7DB DUP6 DUP3 DUP7 ADD PUSH2 0x6B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x80C DUP7 DUP3 DUP8 ADD PUSH2 0x709 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x81D DUP7 DUP3 DUP8 ADD PUSH2 0x6B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83E JUMPI PUSH2 0x83D PUSH2 0xB6D JUMP JUMPDEST JUMPDEST PUSH2 0x84A DUP7 DUP3 DUP8 ADD PUSH2 0x6DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x85D DUP2 PUSH2 0xA6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86E DUP3 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x878 DUP2 DUP6 PUSH2 0xA3E JUMP JUMPDEST SWAP4 POP PUSH2 0x888 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x891 DUP2 PUSH2 0xB77 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A9 PUSH1 0x26 DUP4 PUSH2 0xA5A JUMP JUMPDEST SWAP2 POP PUSH2 0x8B4 DUP3 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CC PUSH1 0x4 DUP4 PUSH2 0xA4F JUMP JUMPDEST SWAP2 POP PUSH2 0x8D7 DUP3 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EF PUSH1 0x20 DUP4 PUSH2 0xA5A JUMP JUMPDEST SWAP2 POP PUSH2 0x8FA DUP3 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x912 PUSH1 0x4 DUP4 PUSH2 0xA4F JUMP JUMPDEST SWAP2 POP PUSH2 0x91D DUP3 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP3 PUSH2 0x8BF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x948 DUP3 PUSH2 0x905 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x967 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x854 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x982 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x854 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x994 DUP2 DUP5 PUSH2 0x863 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9B6 DUP2 PUSH2 0x89C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9D6 DUP2 PUSH2 0x8E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E7 PUSH2 0x9F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F3 DUP3 DUP3 PUSH2 0xB03 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA1D JUMPI PUSH2 0xA1C PUSH2 0xB34 JUMP JUMPDEST JUMPDEST PUSH2 0xA26 DUP3 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA76 DUP3 PUSH2 0xAA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA88 DUP3 PUSH2 0xAA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9A DUP3 PUSH2 0xA6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAEE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAD3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xB0C DUP3 PUSH2 0xB77 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB2B JUMPI PUSH2 0xB2A PUSH2 0xB34 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xC5B DUP2 PUSH2 0xA6B JUMP JUMPDEST DUP2 EQ PUSH2 0xC66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC72 DUP2 PUSH2 0xA7D JUMP JUMPDEST DUP2 EQ PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC89 DUP2 PUSH2 0xA8F JUMP JUMPDEST DUP2 EQ PUSH2 0xC94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER INVALID 0xE9 PUSH30 0x6DCFE35249B6DE0CF6B4B92250B3FF0B35EF373025677F10346C2E656473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"124:107:14:-:0;;;167:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;167:62:14;124:107;;640:96:10;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;7:143:15:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;124:107:14:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_54":{"entryPoint":1317,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_1347":{"entryPoint":1639,"id":1347,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":1443,"id":111,"parameterSlots":1,"returnSlots":0},"@changeProxyAdmin_639":{"entryPoint":635,"id":639,"parameterSlots":2,"returnSlots":0},"@getProxyAdmin_621":{"entryPoint":1169,"id":621,"parameterSlots":1,"returnSlots":1},"@getProxyImplementation_587":{"entryPoint":467,"id":587,"parameterSlots":1,"returnSlots":1},"@owner_40":{"entryPoint":754,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":615,"id":68,"parameterSlots":0,"returnSlots":0},"@transferOwnership_91":{"entryPoint":1037,"id":91,"parameterSlots":1,"returnSlots":0},"@upgradeAndCall_681":{"entryPoint":795,"id":681,"parameterSlots":3,"returnSlots":0},"@upgrade_657":{"entryPoint":918,"id":657,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":1647,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1713,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":1734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":1755,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_ITransparentUpgradeableProxy_$716":{"entryPoint":1801,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1822,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable_fromMemory":{"entryPoint":1867,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716":{"entryPoint":1912,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716t_address":{"entryPoint":1957,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716t_addresst_bytes_memory_ptr":{"entryPoint":2021,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2132,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":2147,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":2204,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2239,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":2274,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2309,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2344,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2365,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2413,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2461,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2493,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":2525,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2552,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":2562,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2611,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":2622,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2639,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2650,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2667,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":2685,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ITransparentUpgradeableProxy_$716":{"entryPoint":2703,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2721,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":2753,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":2768,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":2819,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":2868,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2915,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2920,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2925,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2930,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2935,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":2952,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29":{"entryPoint":3031,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":3072,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7":{"entryPoint":3113,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3154,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":3177,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_ITransparentUpgradeableProxy_$716":{"entryPoint":3200,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12655:15","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:15","statements":[{"nodeType":"YulAssignment","src":"100:74:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:15"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:15"},"nodeType":"YulFunctionCall","src":"125:48:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:15"},"nodeType":"YulFunctionCall","src":"109:65:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:15"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:15"},"nodeType":"YulFunctionCall","src":"183:21:15"},"nodeType":"YulExpressionStatement","src":"183:21:15"},{"nodeType":"YulVariableDeclaration","src":"213:27:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:15"},"nodeType":"YulFunctionCall","src":"224:16:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:15"},"nodeType":"YulFunctionCall","src":"280:79:15"},"nodeType":"YulExpressionStatement","src":"280:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:15"},"nodeType":"YulFunctionCall","src":"255:16:15"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:15"},"nodeType":"YulFunctionCall","src":"252:25:15"},"nodeType":"YulIf","src":"249:112:15"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:15"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:15"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:15"},"nodeType":"YulFunctionCall","src":"370:41:15"},"nodeType":"YulExpressionStatement","src":"370:41:15"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:15","type":""}],"src":"7:410:15"},{"body":{"nodeType":"YulBlock","src":"475:87:15","statements":[{"nodeType":"YulAssignment","src":"485:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"507:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"494:12:15"},"nodeType":"YulFunctionCall","src":"494:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"523:26:15"},"nodeType":"YulFunctionCall","src":"523:33:15"},"nodeType":"YulExpressionStatement","src":"523:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"453:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"461:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"469:5:15","type":""}],"src":"423:139:15"},{"body":{"nodeType":"YulBlock","src":"639:88:15","statements":[{"nodeType":"YulAssignment","src":"649:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"664:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"658:5:15"},"nodeType":"YulFunctionCall","src":"658:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"649:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"715:5:15"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"680:34:15"},"nodeType":"YulFunctionCall","src":"680:41:15"},"nodeType":"YulExpressionStatement","src":"680:41:15"}]},"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"617:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"625:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"633:5:15","type":""}],"src":"568:159:15"},{"body":{"nodeType":"YulBlock","src":"807:277:15","statements":[{"body":{"nodeType":"YulBlock","src":"856:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"858:77:15"},"nodeType":"YulFunctionCall","src":"858:79:15"},"nodeType":"YulExpressionStatement","src":"858:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"835:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"843:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"831:3:15"},"nodeType":"YulFunctionCall","src":"831:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"850:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"827:3:15"},"nodeType":"YulFunctionCall","src":"827:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"820:6:15"},"nodeType":"YulFunctionCall","src":"820:35:15"},"nodeType":"YulIf","src":"817:122:15"},{"nodeType":"YulVariableDeclaration","src":"948:34:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"975:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"962:12:15"},"nodeType":"YulFunctionCall","src":"962:20:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"952:6:15","type":""}]},{"nodeType":"YulAssignment","src":"991:87:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1059:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1047:3:15"},"nodeType":"YulFunctionCall","src":"1047:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"1066:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"1074:3:15"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1000:46:15"},"nodeType":"YulFunctionCall","src":"1000:78:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"991:5:15"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"785:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"793:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"801:5:15","type":""}],"src":"746:338:15"},{"body":{"nodeType":"YulBlock","src":"1178:123:15","statements":[{"nodeType":"YulAssignment","src":"1188:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1210:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1197:12:15"},"nodeType":"YulFunctionCall","src":"1197:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1188:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1289:5:15"}],"functionName":{"name":"validator_revert_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulIdentifier","src":"1226:62:15"},"nodeType":"YulFunctionCall","src":"1226:69:15"},"nodeType":"YulExpressionStatement","src":"1226:69:15"}]},"name":"abi_decode_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1156:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"1164:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1172:5:15","type":""}],"src":"1090:211:15"},{"body":{"nodeType":"YulBlock","src":"1373:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"1419:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1421:77:15"},"nodeType":"YulFunctionCall","src":"1421:79:15"},"nodeType":"YulExpressionStatement","src":"1421:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1394:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1403:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1390:3:15"},"nodeType":"YulFunctionCall","src":"1390:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1415:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1386:3:15"},"nodeType":"YulFunctionCall","src":"1386:32:15"},"nodeType":"YulIf","src":"1383:119:15"},{"nodeType":"YulBlock","src":"1512:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1527:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1541:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1531:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1556:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1591:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1602:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1587:3:15"},"nodeType":"YulFunctionCall","src":"1587:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1611:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1566:20:15"},"nodeType":"YulFunctionCall","src":"1566:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1556:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1343:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1354:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1366:6:15","type":""}],"src":"1307:329:15"},{"body":{"nodeType":"YulBlock","src":"1727:282:15","statements":[{"body":{"nodeType":"YulBlock","src":"1773:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1775:77:15"},"nodeType":"YulFunctionCall","src":"1775:79:15"},"nodeType":"YulExpressionStatement","src":"1775:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1748:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1757:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1744:3:15"},"nodeType":"YulFunctionCall","src":"1744:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1769:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1740:3:15"},"nodeType":"YulFunctionCall","src":"1740:32:15"},"nodeType":"YulIf","src":"1737:119:15"},{"nodeType":"YulBlock","src":"1866:136:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1881:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1895:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1885:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1910:82:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1964:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1975:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:15"},"nodeType":"YulFunctionCall","src":"1960:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1984:7:15"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulIdentifier","src":"1920:39:15"},"nodeType":"YulFunctionCall","src":"1920:72:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1910:6:15"}]}]}]},"name":"abi_decode_tuple_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1697:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1708:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1720:6:15","type":""}],"src":"1642:367:15"},{"body":{"nodeType":"YulBlock","src":"2117:299:15","statements":[{"body":{"nodeType":"YulBlock","src":"2163:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2165:77:15"},"nodeType":"YulFunctionCall","src":"2165:79:15"},"nodeType":"YulExpressionStatement","src":"2165:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2138:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2147:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2134:3:15"},"nodeType":"YulFunctionCall","src":"2134:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2159:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2130:3:15"},"nodeType":"YulFunctionCall","src":"2130:32:15"},"nodeType":"YulIf","src":"2127:119:15"},{"nodeType":"YulBlock","src":"2256:153:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2271:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2285:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2275:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2300:99:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2371:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2382:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2367:3:15"},"nodeType":"YulFunctionCall","src":"2367:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2391:7:15"}],"functionName":{"name":"abi_decode_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulIdentifier","src":"2310:56:15"},"nodeType":"YulFunctionCall","src":"2310:89:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2300:6:15"}]}]}]},"name":"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2087:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2098:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2110:6:15","type":""}],"src":"2015:401:15"},{"body":{"nodeType":"YulBlock","src":"2541:427:15","statements":[{"body":{"nodeType":"YulBlock","src":"2587:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2589:77:15"},"nodeType":"YulFunctionCall","src":"2589:79:15"},"nodeType":"YulExpressionStatement","src":"2589:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2562:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2571:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2558:3:15"},"nodeType":"YulFunctionCall","src":"2558:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2583:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2554:3:15"},"nodeType":"YulFunctionCall","src":"2554:32:15"},"nodeType":"YulIf","src":"2551:119:15"},{"nodeType":"YulBlock","src":"2680:153:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2695:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2709:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2699:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2724:99:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2795:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2806:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2791:3:15"},"nodeType":"YulFunctionCall","src":"2791:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2815:7:15"}],"functionName":{"name":"abi_decode_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulIdentifier","src":"2734:56:15"},"nodeType":"YulFunctionCall","src":"2734:89:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2724:6:15"}]}]},{"nodeType":"YulBlock","src":"2843:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2858:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2872:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2862:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2888:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2923:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2934:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2919:3:15"},"nodeType":"YulFunctionCall","src":"2919:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2943:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2898:20:15"},"nodeType":"YulFunctionCall","src":"2898:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2888:6:15"}]}]}]},"name":"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2503:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2514:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2526:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2534:6:15","type":""}],"src":"2422:546:15"},{"body":{"nodeType":"YulBlock","src":"3119:724:15","statements":[{"body":{"nodeType":"YulBlock","src":"3165:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3167:77:15"},"nodeType":"YulFunctionCall","src":"3167:79:15"},"nodeType":"YulExpressionStatement","src":"3167:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3140:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3149:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3136:3:15"},"nodeType":"YulFunctionCall","src":"3136:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3161:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3132:3:15"},"nodeType":"YulFunctionCall","src":"3132:32:15"},"nodeType":"YulIf","src":"3129:119:15"},{"nodeType":"YulBlock","src":"3258:153:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3273:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3287:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3277:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3302:99:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3373:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3384:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3369:3:15"},"nodeType":"YulFunctionCall","src":"3369:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3393:7:15"}],"functionName":{"name":"abi_decode_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulIdentifier","src":"3312:56:15"},"nodeType":"YulFunctionCall","src":"3312:89:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3302:6:15"}]}]},{"nodeType":"YulBlock","src":"3421:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3466:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3501:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3512:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3497:3:15"},"nodeType":"YulFunctionCall","src":"3497:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3521:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3476:20:15"},"nodeType":"YulFunctionCall","src":"3476:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3466:6:15"}]}]},{"nodeType":"YulBlock","src":"3549:287:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3564:46:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3595:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3606:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3591:3:15"},"nodeType":"YulFunctionCall","src":"3591:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3578:12:15"},"nodeType":"YulFunctionCall","src":"3578:32:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3568:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3657:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3659:77:15"},"nodeType":"YulFunctionCall","src":"3659:79:15"},"nodeType":"YulExpressionStatement","src":"3659:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3629:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3637:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3626:2:15"},"nodeType":"YulFunctionCall","src":"3626:30:15"},"nodeType":"YulIf","src":"3623:117:15"},{"nodeType":"YulAssignment","src":"3754:72:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3798:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3809:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3794:3:15"},"nodeType":"YulFunctionCall","src":"3794:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3818:7:15"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3764:29:15"},"nodeType":"YulFunctionCall","src":"3764:62:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3754:6:15"}]}]}]},"name":"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3073:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3084:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3096:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3104:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3112:6:15","type":""}],"src":"2974:869:15"},{"body":{"nodeType":"YulBlock","src":"3914:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3931:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3954:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3936:17:15"},"nodeType":"YulFunctionCall","src":"3936:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3924:6:15"},"nodeType":"YulFunctionCall","src":"3924:37:15"},"nodeType":"YulExpressionStatement","src":"3924:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3902:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3909:3:15","type":""}],"src":"3849:118:15"},{"body":{"nodeType":"YulBlock","src":"4063:270:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4073:52:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4119:5:15"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4087:31:15"},"nodeType":"YulFunctionCall","src":"4087:38:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4077:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4134:77:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4199:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"4204:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4141:57:15"},"nodeType":"YulFunctionCall","src":"4141:70:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4134:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4246:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4253:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4242:3:15"},"nodeType":"YulFunctionCall","src":"4242:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"4260:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"4265:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4220:21:15"},"nodeType":"YulFunctionCall","src":"4220:52:15"},"nodeType":"YulExpressionStatement","src":"4220:52:15"},{"nodeType":"YulAssignment","src":"4281:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4292:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4319:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4297:21:15"},"nodeType":"YulFunctionCall","src":"4297:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:15"},"nodeType":"YulFunctionCall","src":"4288:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4281:3:15"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4044:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4051:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4059:3:15","type":""}],"src":"3973:360:15"},{"body":{"nodeType":"YulBlock","src":"4485:220:15","statements":[{"nodeType":"YulAssignment","src":"4495:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4561:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4566:2:15","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4502:58:15"},"nodeType":"YulFunctionCall","src":"4502:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4495:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4667:3:15"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"4578:88:15"},"nodeType":"YulFunctionCall","src":"4578:93:15"},"nodeType":"YulExpressionStatement","src":"4578:93:15"},{"nodeType":"YulAssignment","src":"4680:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4691:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4696:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4687:3:15"},"nodeType":"YulFunctionCall","src":"4687:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4680:3:15"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4473:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4481:3:15","type":""}],"src":"4339:366:15"},{"body":{"nodeType":"YulBlock","src":"4874:235:15","statements":[{"nodeType":"YulAssignment","src":"4884:90:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4967:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4972:1:15","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4891:75:15"},"nodeType":"YulFunctionCall","src":"4891:83:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4884:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5072:3:15"}],"functionName":{"name":"store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","nodeType":"YulIdentifier","src":"4983:88:15"},"nodeType":"YulFunctionCall","src":"4983:93:15"},"nodeType":"YulExpressionStatement","src":"4983:93:15"},{"nodeType":"YulAssignment","src":"5085:18:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5096:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5101:1:15","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5092:3:15"},"nodeType":"YulFunctionCall","src":"5092:11:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5085:3:15"}]}]},"name":"abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4862:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4870:3:15","type":""}],"src":"4711:398:15"},{"body":{"nodeType":"YulBlock","src":"5261:220:15","statements":[{"nodeType":"YulAssignment","src":"5271:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5337:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5342:2:15","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5278:58:15"},"nodeType":"YulFunctionCall","src":"5278:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5271:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5443:3:15"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"5354:88:15"},"nodeType":"YulFunctionCall","src":"5354:93:15"},"nodeType":"YulExpressionStatement","src":"5354:93:15"},{"nodeType":"YulAssignment","src":"5456:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5467:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5472:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5463:3:15"},"nodeType":"YulFunctionCall","src":"5463:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5456:3:15"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5249:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5257:3:15","type":""}],"src":"5115:366:15"},{"body":{"nodeType":"YulBlock","src":"5650:235:15","statements":[{"nodeType":"YulAssignment","src":"5660:90:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5743:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5748:1:15","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5667:75:15"},"nodeType":"YulFunctionCall","src":"5667:83:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5660:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5848:3:15"}],"functionName":{"name":"store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","nodeType":"YulIdentifier","src":"5759:88:15"},"nodeType":"YulFunctionCall","src":"5759:93:15"},"nodeType":"YulExpressionStatement","src":"5759:93:15"},{"nodeType":"YulAssignment","src":"5861:18:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5872:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5877:1:15","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5868:3:15"},"nodeType":"YulFunctionCall","src":"5868:11:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5861:3:15"}]}]},"name":"abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5638:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5646:3:15","type":""}],"src":"5487:398:15"},{"body":{"nodeType":"YulBlock","src":"6079:191:15","statements":[{"nodeType":"YulAssignment","src":"6090:154:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6240:3:15"}],"functionName":{"name":"abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6097:141:15"},"nodeType":"YulFunctionCall","src":"6097:147:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6090:3:15"}]},{"nodeType":"YulAssignment","src":"6254:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"6261:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6254:3:15"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6066:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6075:3:15","type":""}],"src":"5891:379:15"},{"body":{"nodeType":"YulBlock","src":"6464:191:15","statements":[{"nodeType":"YulAssignment","src":"6475:154:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6625:3:15"}],"functionName":{"name":"abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6482:141:15"},"nodeType":"YulFunctionCall","src":"6482:147:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6475:3:15"}]},{"nodeType":"YulAssignment","src":"6639:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"6646:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6639:3:15"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6451:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6460:3:15","type":""}],"src":"6276:379:15"},{"body":{"nodeType":"YulBlock","src":"6759:124:15","statements":[{"nodeType":"YulAssignment","src":"6769:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6781:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6792:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6777:3:15"},"nodeType":"YulFunctionCall","src":"6777:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6769:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6849:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6862:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6873:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6858:3:15"},"nodeType":"YulFunctionCall","src":"6858:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6805:43:15"},"nodeType":"YulFunctionCall","src":"6805:71:15"},"nodeType":"YulExpressionStatement","src":"6805:71:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6731:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6743:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6754:4:15","type":""}],"src":"6661:222:15"},{"body":{"nodeType":"YulBlock","src":"7033:275:15","statements":[{"nodeType":"YulAssignment","src":"7043:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7055:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7066:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7051:3:15"},"nodeType":"YulFunctionCall","src":"7051:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7043:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7123:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7136:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7147:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7132:3:15"},"nodeType":"YulFunctionCall","src":"7132:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7079:43:15"},"nodeType":"YulFunctionCall","src":"7079:71:15"},"nodeType":"YulExpressionStatement","src":"7079:71:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7171:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7182:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7167:3:15"},"nodeType":"YulFunctionCall","src":"7167:18:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7191:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7197:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7187:3:15"},"nodeType":"YulFunctionCall","src":"7187:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7160:6:15"},"nodeType":"YulFunctionCall","src":"7160:48:15"},"nodeType":"YulExpressionStatement","src":"7160:48:15"},{"nodeType":"YulAssignment","src":"7217:84:15","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7287:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"7296:4:15"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7225:61:15"},"nodeType":"YulFunctionCall","src":"7225:76:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7217:4:15"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6997:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7009:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7017:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7028:4:15","type":""}],"src":"6889:419:15"},{"body":{"nodeType":"YulBlock","src":"7485:248:15","statements":[{"nodeType":"YulAssignment","src":"7495:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7507:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7518:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7503:3:15"},"nodeType":"YulFunctionCall","src":"7503:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7495:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7542:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7553:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7538:3:15"},"nodeType":"YulFunctionCall","src":"7538:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7561:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7567:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7557:3:15"},"nodeType":"YulFunctionCall","src":"7557:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7531:6:15"},"nodeType":"YulFunctionCall","src":"7531:47:15"},"nodeType":"YulExpressionStatement","src":"7531:47:15"},{"nodeType":"YulAssignment","src":"7587:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7721:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7595:124:15"},"nodeType":"YulFunctionCall","src":"7595:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7587:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7465:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7480:4:15","type":""}],"src":"7314:419:15"},{"body":{"nodeType":"YulBlock","src":"7910:248:15","statements":[{"nodeType":"YulAssignment","src":"7920:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7932:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7943:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7928:3:15"},"nodeType":"YulFunctionCall","src":"7928:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7920:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7967:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7978:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7963:3:15"},"nodeType":"YulFunctionCall","src":"7963:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7986:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7992:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7982:3:15"},"nodeType":"YulFunctionCall","src":"7982:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7956:6:15"},"nodeType":"YulFunctionCall","src":"7956:47:15"},"nodeType":"YulExpressionStatement","src":"7956:47:15"},{"nodeType":"YulAssignment","src":"8012:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8146:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8020:124:15"},"nodeType":"YulFunctionCall","src":"8020:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8012:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7890:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7905:4:15","type":""}],"src":"7739:419:15"},{"body":{"nodeType":"YulBlock","src":"8205:88:15","statements":[{"nodeType":"YulAssignment","src":"8215:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"8225:18:15"},"nodeType":"YulFunctionCall","src":"8225:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8215:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8274:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"8282:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"8254:19:15"},"nodeType":"YulFunctionCall","src":"8254:33:15"},"nodeType":"YulExpressionStatement","src":"8254:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8189:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8198:6:15","type":""}],"src":"8164:129:15"},{"body":{"nodeType":"YulBlock","src":"8339:35:15","statements":[{"nodeType":"YulAssignment","src":"8349:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8365:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8359:5:15"},"nodeType":"YulFunctionCall","src":"8359:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8349:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8332:6:15","type":""}],"src":"8299:75:15"},{"body":{"nodeType":"YulBlock","src":"8446:241:15","statements":[{"body":{"nodeType":"YulBlock","src":"8551:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8553:16:15"},"nodeType":"YulFunctionCall","src":"8553:18:15"},"nodeType":"YulExpressionStatement","src":"8553:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8523:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8531:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8520:2:15"},"nodeType":"YulFunctionCall","src":"8520:30:15"},"nodeType":"YulIf","src":"8517:56:15"},{"nodeType":"YulAssignment","src":"8583:37:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8613:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8591:21:15"},"nodeType":"YulFunctionCall","src":"8591:29:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8583:4:15"}]},{"nodeType":"YulAssignment","src":"8657:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8669:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"8675:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8665:3:15"},"nodeType":"YulFunctionCall","src":"8665:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8657:4:15"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8430:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8441:4:15","type":""}],"src":"8380:307:15"},{"body":{"nodeType":"YulBlock","src":"8751:40:15","statements":[{"nodeType":"YulAssignment","src":"8762:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8778:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8772:5:15"},"nodeType":"YulFunctionCall","src":"8772:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8762:6:15"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8734:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8744:6:15","type":""}],"src":"8693:98:15"},{"body":{"nodeType":"YulBlock","src":"8892:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8909:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"8914:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8902:6:15"},"nodeType":"YulFunctionCall","src":"8902:19:15"},"nodeType":"YulExpressionStatement","src":"8902:19:15"},{"nodeType":"YulAssignment","src":"8930:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8949:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8954:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8945:3:15"},"nodeType":"YulFunctionCall","src":"8945:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8930:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8864:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"8869:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8880:11:15","type":""}],"src":"8797:168:15"},{"body":{"nodeType":"YulBlock","src":"9084:34:15","statements":[{"nodeType":"YulAssignment","src":"9094:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"9109:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9094:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9056:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9061:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9072:11:15","type":""}],"src":"8971:147:15"},{"body":{"nodeType":"YulBlock","src":"9220:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9237:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"9242:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9230:6:15"},"nodeType":"YulFunctionCall","src":"9230:19:15"},"nodeType":"YulExpressionStatement","src":"9230:19:15"},{"nodeType":"YulAssignment","src":"9258:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9277:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9282:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9273:3:15"},"nodeType":"YulFunctionCall","src":"9273:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9258:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9192:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9197:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9208:11:15","type":""}],"src":"9124:169:15"},{"body":{"nodeType":"YulBlock","src":"9344:51:15","statements":[{"nodeType":"YulAssignment","src":"9354:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9383:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9365:17:15"},"nodeType":"YulFunctionCall","src":"9365:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9354:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9326:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9336:7:15","type":""}],"src":"9299:96:15"},{"body":{"nodeType":"YulBlock","src":"9454:51:15","statements":[{"nodeType":"YulAssignment","src":"9464:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9493:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9475:17:15"},"nodeType":"YulFunctionCall","src":"9475:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9464:7:15"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9436:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9446:7:15","type":""}],"src":"9401:104:15"},{"body":{"nodeType":"YulBlock","src":"9592:51:15","statements":[{"nodeType":"YulAssignment","src":"9602:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9631:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9613:17:15"},"nodeType":"YulFunctionCall","src":"9613:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9602:7:15"}]}]},"name":"cleanup_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9574:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9584:7:15","type":""}],"src":"9511:132:15"},{"body":{"nodeType":"YulBlock","src":"9694:81:15","statements":[{"nodeType":"YulAssignment","src":"9704:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9719:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9726:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9715:3:15"},"nodeType":"YulFunctionCall","src":"9715:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9704:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9676:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9686:7:15","type":""}],"src":"9649:126:15"},{"body":{"nodeType":"YulBlock","src":"9832:103:15","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9855:3:15"},{"name":"src","nodeType":"YulIdentifier","src":"9860:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"9865:6:15"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9842:12:15"},"nodeType":"YulFunctionCall","src":"9842:30:15"},"nodeType":"YulExpressionStatement","src":"9842:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9913:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"9918:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9909:3:15"},"nodeType":"YulFunctionCall","src":"9909:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"9927:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9902:6:15"},"nodeType":"YulFunctionCall","src":"9902:27:15"},"nodeType":"YulExpressionStatement","src":"9902:27:15"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9814:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9819:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9824:6:15","type":""}],"src":"9781:154:15"},{"body":{"nodeType":"YulBlock","src":"9990:258:15","statements":[{"nodeType":"YulVariableDeclaration","src":"10000:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10009:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10004:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"10069:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10094:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"10099:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10090:3:15"},"nodeType":"YulFunctionCall","src":"10090:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10113:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"10118:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10109:3:15"},"nodeType":"YulFunctionCall","src":"10109:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10103:5:15"},"nodeType":"YulFunctionCall","src":"10103:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10083:6:15"},"nodeType":"YulFunctionCall","src":"10083:39:15"},"nodeType":"YulExpressionStatement","src":"10083:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10030:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"10033:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10027:2:15"},"nodeType":"YulFunctionCall","src":"10027:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10041:19:15","statements":[{"nodeType":"YulAssignment","src":"10043:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10052:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"10055:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10048:3:15"},"nodeType":"YulFunctionCall","src":"10048:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10043:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"10023:3:15","statements":[]},"src":"10019:113:15"},{"body":{"nodeType":"YulBlock","src":"10166:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10216:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"10221:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10212:3:15"},"nodeType":"YulFunctionCall","src":"10212:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"10230:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10205:6:15"},"nodeType":"YulFunctionCall","src":"10205:27:15"},"nodeType":"YulExpressionStatement","src":"10205:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10147:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"10150:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10144:2:15"},"nodeType":"YulFunctionCall","src":"10144:13:15"},"nodeType":"YulIf","src":"10141:101:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9972:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9977:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9982:6:15","type":""}],"src":"9941:307:15"},{"body":{"nodeType":"YulBlock","src":"10297:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"10307:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10329:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10359:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10337:21:15"},"nodeType":"YulFunctionCall","src":"10337:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10325:3:15"},"nodeType":"YulFunctionCall","src":"10325:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"10311:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"10476:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10478:16:15"},"nodeType":"YulFunctionCall","src":"10478:18:15"},"nodeType":"YulExpressionStatement","src":"10478:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10419:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"10431:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10416:2:15"},"nodeType":"YulFunctionCall","src":"10416:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10455:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"10467:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10452:2:15"},"nodeType":"YulFunctionCall","src":"10452:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10413:2:15"},"nodeType":"YulFunctionCall","src":"10413:62:15"},"nodeType":"YulIf","src":"10410:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10514:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10518:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10507:6:15"},"nodeType":"YulFunctionCall","src":"10507:22:15"},"nodeType":"YulExpressionStatement","src":"10507:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10283:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"10291:4:15","type":""}],"src":"10254:281:15"},{"body":{"nodeType":"YulBlock","src":"10569:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10586:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10589:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10579:6:15"},"nodeType":"YulFunctionCall","src":"10579:88:15"},"nodeType":"YulExpressionStatement","src":"10579:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10683:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10686:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10676:6:15"},"nodeType":"YulFunctionCall","src":"10676:15:15"},"nodeType":"YulExpressionStatement","src":"10676:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10707:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10710:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10700:6:15"},"nodeType":"YulFunctionCall","src":"10700:15:15"},"nodeType":"YulExpressionStatement","src":"10700:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"10541:180:15"},{"body":{"nodeType":"YulBlock","src":"10816:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10833:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10836:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10826:6:15"},"nodeType":"YulFunctionCall","src":"10826:12:15"},"nodeType":"YulExpressionStatement","src":"10826:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"10727:117:15"},{"body":{"nodeType":"YulBlock","src":"10939:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10956:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10959:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10949:6:15"},"nodeType":"YulFunctionCall","src":"10949:12:15"},"nodeType":"YulExpressionStatement","src":"10949:12:15"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"10850:117:15"},{"body":{"nodeType":"YulBlock","src":"11062:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11079:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11082:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11072:6:15"},"nodeType":"YulFunctionCall","src":"11072:12:15"},"nodeType":"YulExpressionStatement","src":"11072:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"10973:117:15"},{"body":{"nodeType":"YulBlock","src":"11185:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11202:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11205:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11195:6:15"},"nodeType":"YulFunctionCall","src":"11195:12:15"},"nodeType":"YulExpressionStatement","src":"11195:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"11096:117:15"},{"body":{"nodeType":"YulBlock","src":"11267:54:15","statements":[{"nodeType":"YulAssignment","src":"11277:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11295:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"11302:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11291:3:15"},"nodeType":"YulFunctionCall","src":"11291:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11311:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11307:3:15"},"nodeType":"YulFunctionCall","src":"11307:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11287:3:15"},"nodeType":"YulFunctionCall","src":"11287:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11277:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11250:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11260:6:15","type":""}],"src":"11219:102:15"},{"body":{"nodeType":"YulBlock","src":"11433:119:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11455:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11451:3:15"},"nodeType":"YulFunctionCall","src":"11451:14:15"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"11467:34:15","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11444:6:15"},"nodeType":"YulFunctionCall","src":"11444:58:15"},"nodeType":"YulExpressionStatement","src":"11444:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11523:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11531:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11519:3:15"},"nodeType":"YulFunctionCall","src":"11519:15:15"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"11536:8:15","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11512:6:15"},"nodeType":"YulFunctionCall","src":"11512:33:15"},"nodeType":"YulExpressionStatement","src":"11512:33:15"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11425:6:15","type":""}],"src":"11327:225:15"},{"body":{"nodeType":"YulBlock","src":"11664:108:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11686:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11694:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11682:3:15"},"nodeType":"YulFunctionCall","src":"11682:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"11698:66:15","type":"","value":"0x5c60da1b00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11675:6:15"},"nodeType":"YulFunctionCall","src":"11675:90:15"},"nodeType":"YulExpressionStatement","src":"11675:90:15"}]},"name":"store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11656:6:15","type":""}],"src":"11558:214:15"},{"body":{"nodeType":"YulBlock","src":"11884:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11906:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11914:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11902:3:15"},"nodeType":"YulFunctionCall","src":"11902:14:15"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11918:34:15","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11895:6:15"},"nodeType":"YulFunctionCall","src":"11895:58:15"},"nodeType":"YulExpressionStatement","src":"11895:58:15"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11876:6:15","type":""}],"src":"11778:182:15"},{"body":{"nodeType":"YulBlock","src":"12072:108:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12094:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12102:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12090:3:15"},"nodeType":"YulFunctionCall","src":"12090:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"12106:66:15","type":"","value":"0xf851a44000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12083:6:15"},"nodeType":"YulFunctionCall","src":"12083:90:15"},"nodeType":"YulExpressionStatement","src":"12083:90:15"}]},"name":"store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12064:6:15","type":""}],"src":"11966:214:15"},{"body":{"nodeType":"YulBlock","src":"12229:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"12286:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12295:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12298:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12288:6:15"},"nodeType":"YulFunctionCall","src":"12288:12:15"},"nodeType":"YulExpressionStatement","src":"12288:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12252:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12277:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12259:17:15"},"nodeType":"YulFunctionCall","src":"12259:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12249:2:15"},"nodeType":"YulFunctionCall","src":"12249:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12242:6:15"},"nodeType":"YulFunctionCall","src":"12242:43:15"},"nodeType":"YulIf","src":"12239:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12222:5:15","type":""}],"src":"12186:122:15"},{"body":{"nodeType":"YulBlock","src":"12365:87:15","statements":[{"body":{"nodeType":"YulBlock","src":"12430:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12439:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12442:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12432:6:15"},"nodeType":"YulFunctionCall","src":"12432:12:15"},"nodeType":"YulExpressionStatement","src":"12432:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12388:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12421:5:15"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"12395:25:15"},"nodeType":"YulFunctionCall","src":"12395:32:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12385:2:15"},"nodeType":"YulFunctionCall","src":"12385:43:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12378:6:15"},"nodeType":"YulFunctionCall","src":"12378:51:15"},"nodeType":"YulIf","src":"12375:71:15"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12358:5:15","type":""}],"src":"12314:138:15"},{"body":{"nodeType":"YulBlock","src":"12537:115:15","statements":[{"body":{"nodeType":"YulBlock","src":"12630:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12639:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12642:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12632:6:15"},"nodeType":"YulFunctionCall","src":"12632:12:15"},"nodeType":"YulExpressionStatement","src":"12632:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12560:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12621:5:15"}],"functionName":{"name":"cleanup_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulIdentifier","src":"12567:53:15"},"nodeType":"YulFunctionCall","src":"12567:60:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12557:2:15"},"nodeType":"YulFunctionCall","src":"12557:71:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12550:6:15"},"nodeType":"YulFunctionCall","src":"12550:79:15"},"nodeType":"YulIf","src":"12547:99:15"}]},"name":"validator_revert_t_contract$_ITransparentUpgradeableProxy_$716","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12530:5:15","type":""}],"src":"12458:194:15"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_ITransparentUpgradeableProxy_$716(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ITransparentUpgradeableProxy_$716(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ITransparentUpgradeableProxy_$716(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ITransparentUpgradeableProxy_$716(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$716t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ITransparentUpgradeableProxy_$716(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ITransparentUpgradeableProxy_$716(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29(memPtr) {\n\n        mstore(add(memPtr, 0), 0x5c60da1b00000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7(memPtr) {\n\n        mstore(add(memPtr, 0), 0xf851a44000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ITransparentUpgradeableProxy_$716(value) {\n        if iszero(eq(value, cleanup_t_contract$_ITransparentUpgradeableProxy_$716(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461012857806399a88ec414610144578063f2fde38b1461016d578063f3b7dead146101965761007b565b8063204e1c7a14610080578063715018a6146100bd5780637eff275e146100d45780638da5cb5b146100fd575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610778565b6101d3565b6040516100b49190610952565b60405180910390f35b3480156100c957600080fd5b506100d2610267565b005b3480156100e057600080fd5b506100fb60048036038101906100f691906107a5565b61027b565b005b34801561010957600080fd5b506101126102f2565b60405161011f9190610952565b60405180910390f35b610142600480360381019061013d91906107e5565b61031b565b005b34801561015057600080fd5b5061016b600480360381019061016691906107a5565b610396565b005b34801561017957600080fd5b50610194600480360381019061018f919061071e565b61040d565b005b3480156101a257600080fd5b506101bd60048036038101906101b89190610778565b610491565b6040516101ca9190610952565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516101fb90610928565b600060405180830381855afa9150503d8060008114610236576040519150601f19603f3d011682016040523d82523d6000602084013e61023b565b606091505b50915091508161024a57600080fd5b8080602001905181019061025e919061074b565b92505050919050565b61026f610525565b61027960006105a3565b565b610283610525565b8173ffffffffffffffffffffffffffffffffffffffff16638f283970826040518263ffffffff1660e01b81526004016102bc9190610952565b600060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610323610525565b8273ffffffffffffffffffffffffffffffffffffffff16634f1ef2863484846040518463ffffffff1660e01b815260040161035f92919061096d565b6000604051808303818588803b15801561037857600080fd5b505af115801561038c573d6000803e3d6000fd5b5050505050505050565b61039e610525565b8173ffffffffffffffffffffffffffffffffffffffff16633659cfe6826040518263ffffffff1660e01b81526004016103d79190610952565b600060405180830381600087803b1580156103f157600080fd5b505af1158015610405573d6000803e3d6000fd5b505050505050565b610415610525565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047c9061099d565b60405180910390fd5b61048e816105a3565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516104b99061093d565b600060405180830381855afa9150503d80600081146104f4576040519150601f19603f3d011682016040523d82523d6000602084013e6104f9565b606091505b50915091508161050857600080fd5b8080602001905181019061051c919061074b565b92505050919050565b61052d610667565b73ffffffffffffffffffffffffffffffffffffffff1661054b6102f2565b73ffffffffffffffffffffffffffffffffffffffff16146105a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610598906109bd565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600061068261067d84610a02565b6109dd565b90508281526020810184848401111561069e5761069d610b68565b5b6106a9848285610ac1565b509392505050565b6000813590506106c081610c52565b92915050565b6000815190506106d581610c69565b92915050565b600082601f8301126106f0576106ef610b63565b5b813561070084826020860161066f565b91505092915050565b60008135905061071881610c80565b92915050565b60006020828403121561073457610733610b72565b5b6000610742848285016106b1565b91505092915050565b60006020828403121561076157610760610b72565b5b600061076f848285016106c6565b91505092915050565b60006020828403121561078e5761078d610b72565b5b600061079c84828501610709565b91505092915050565b600080604083850312156107bc576107bb610b72565b5b60006107ca85828601610709565b92505060206107db858286016106b1565b9150509250929050565b6000806000606084860312156107fe576107fd610b72565b5b600061080c86828701610709565b935050602061081d868287016106b1565b925050604084013567ffffffffffffffff81111561083e5761083d610b6d565b5b61084a868287016106db565b9150509250925092565b61085d81610a6b565b82525050565b600061086e82610a33565b6108788185610a3e565b9350610888818560208601610ad0565b61089181610b77565b840191505092915050565b60006108a9602683610a5a565b91506108b482610b88565b604082019050919050565b60006108cc600483610a4f565b91506108d782610bd7565b600482019050919050565b60006108ef602083610a5a565b91506108fa82610c00565b602082019050919050565b6000610912600483610a4f565b915061091d82610c29565b600482019050919050565b6000610933826108bf565b9150819050919050565b600061094882610905565b9150819050919050565b60006020820190506109676000830184610854565b92915050565b60006040820190506109826000830185610854565b81810360208301526109948184610863565b90509392505050565b600060208201905081810360008301526109b68161089c565b9050919050565b600060208201905081810360008301526109d6816108e2565b9050919050565b60006109e76109f8565b90506109f38282610b03565b919050565b6000604051905090565b600067ffffffffffffffff821115610a1d57610a1c610b34565b5b610a2682610b77565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610a7682610aa1565b9050919050565b6000610a8882610aa1565b9050919050565b6000610a9a82610a6b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610aee578082015181840152602081019050610ad3565b83811115610afd576000848401525b50505050565b610b0c82610b77565b810181811067ffffffffffffffff82111715610b2b57610b2a610b34565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5c60da1b00000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7ff851a44000000000000000000000000000000000000000000000000000000000600082015250565b610c5b81610a6b565b8114610c6657600080fd5b50565b610c7281610a7d565b8114610c7d57600080fd5b50565b610c8981610a8f565b8114610c9457600080fd5b5056fea264697066735822122033fee97d6dcfe35249b6de0cf6b4b92250b3ff0b35ef373025677f10346c2e6564736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x99A88EC4 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xF3B7DEAD EQ PUSH2 0x196 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x204E1C7A EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x7EFF275E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x267 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP1 PUSH2 0x928 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x74B JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F PUSH2 0x525 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x0 PUSH2 0x5A3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x283 PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8F283970 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x525 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4F1EF286 CALLVALUE DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP3 SWAP2 SWAP1 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3659CFE6 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x405 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x415 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47C SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48E DUP2 PUSH2 0x5A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x4B9 SWAP1 PUSH2 0x93D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x74B JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52D PUSH2 0x667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x54B PUSH2 0x2F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x598 SWAP1 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 PUSH2 0x67D DUP5 PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x9DD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x69E JUMPI PUSH2 0x69D PUSH2 0xB68 JUMP JUMPDEST JUMPDEST PUSH2 0x6A9 DUP5 DUP3 DUP6 PUSH2 0xAC1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C0 DUP2 PUSH2 0xC52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6D5 DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6F0 JUMPI PUSH2 0x6EF PUSH2 0xB63 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x700 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x66F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x718 DUP2 PUSH2 0xC80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x734 JUMPI PUSH2 0x733 PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x742 DUP5 DUP3 DUP6 ADD PUSH2 0x6B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x761 JUMPI PUSH2 0x760 PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x76F DUP5 DUP3 DUP6 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78E JUMPI PUSH2 0x78D PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x79C DUP5 DUP3 DUP6 ADD PUSH2 0x709 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7BC JUMPI PUSH2 0x7BB PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7CA DUP6 DUP3 DUP7 ADD PUSH2 0x709 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7DB DUP6 DUP3 DUP7 ADD PUSH2 0x6B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0xB72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x80C DUP7 DUP3 DUP8 ADD PUSH2 0x709 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x81D DUP7 DUP3 DUP8 ADD PUSH2 0x6B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83E JUMPI PUSH2 0x83D PUSH2 0xB6D JUMP JUMPDEST JUMPDEST PUSH2 0x84A DUP7 DUP3 DUP8 ADD PUSH2 0x6DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x85D DUP2 PUSH2 0xA6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86E DUP3 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x878 DUP2 DUP6 PUSH2 0xA3E JUMP JUMPDEST SWAP4 POP PUSH2 0x888 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x891 DUP2 PUSH2 0xB77 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A9 PUSH1 0x26 DUP4 PUSH2 0xA5A JUMP JUMPDEST SWAP2 POP PUSH2 0x8B4 DUP3 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CC PUSH1 0x4 DUP4 PUSH2 0xA4F JUMP JUMPDEST SWAP2 POP PUSH2 0x8D7 DUP3 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EF PUSH1 0x20 DUP4 PUSH2 0xA5A JUMP JUMPDEST SWAP2 POP PUSH2 0x8FA DUP3 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x912 PUSH1 0x4 DUP4 PUSH2 0xA4F JUMP JUMPDEST SWAP2 POP PUSH2 0x91D DUP3 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP3 PUSH2 0x8BF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x948 DUP3 PUSH2 0x905 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x967 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x854 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x982 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x854 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x994 DUP2 DUP5 PUSH2 0x863 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9B6 DUP2 PUSH2 0x89C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9D6 DUP2 PUSH2 0x8E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E7 PUSH2 0x9F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F3 DUP3 DUP3 PUSH2 0xB03 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA1D JUMPI PUSH2 0xA1C PUSH2 0xB34 JUMP JUMPDEST JUMPDEST PUSH2 0xA26 DUP3 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA76 DUP3 PUSH2 0xAA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA88 DUP3 PUSH2 0xAA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9A DUP3 PUSH2 0xA6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAEE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAD3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xB0C DUP3 PUSH2 0xB77 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB2B JUMPI PUSH2 0xB2A PUSH2 0xB34 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xC5B DUP2 PUSH2 0xA6B JUMP JUMPDEST DUP2 EQ PUSH2 0xC66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC72 DUP2 PUSH2 0xA7D JUMP JUMPDEST DUP2 EQ PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC89 DUP2 PUSH2 0xA8F JUMP JUMPDEST DUP2 EQ PUSH2 0xC94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER INVALID 0xE9 PUSH30 0x6DCFE35249B6DE0CF6B4B92250B3FF0B35EF373025677F10346C2E656473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"124:107:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:438:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;;;;;;;;;;;:::i;:::-;;1842:149:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2612:245:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2196:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1248:420:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;650:438;747:7;924:12;938:23;973:5;965:25;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;923:82;;;;1023:7;1015:16;;;;;;1059:10;1048:33;;;;;;;;;;;;:::i;:::-;1041:40;;;;650:438;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1842:149:7:-;1094:13:0;:11;:13::i;:::-;1957:5:7::1;:17;;;1975:8;1957:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1842:149:::0;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2612:245:7:-;1094:13:0;:11;:13::i;:::-;2788:5:7::1;:22;;;2818:9;2829:14;2845:4;2788:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2612:245:::0;;;:::o;2196:150::-;1094:13:0;:11;:13::i;:::-;2308:5:7::1;:15;;;2324:14;2308:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2196:150:::0;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;;;2154:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1248:420:7:-;1336:7;1504:12;1518:23;1553:5;1545:25;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1503:82;;;;1603:7;1595:16;;;;;;1639:10;1628:33;;;;;;;;;;;;:::i;:::-;1621:40;;;;1248:420;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;640:96:10:-;693:7;719:10;712:17;;640:96;:::o;7:410:15:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:159::-;633:5;664:6;658:13;649:22;;680:41;715:5;680:41;:::i;:::-;568:159;;;;:::o;746:338::-;801:5;850:3;843:4;835:6;831:17;827:27;817:122;;858:79;;:::i;:::-;817:122;975:6;962:20;1000:78;1074:3;1066:6;1059:4;1051:6;1047:17;1000:78;:::i;:::-;991:87;;807:277;746:338;;;;:::o;1090:211::-;1172:5;1210:6;1197:20;1188:29;;1226:69;1289:5;1226:69;:::i;:::-;1090:211;;;;:::o;1307:329::-;1366:6;1415:2;1403:9;1394:7;1390:23;1386:32;1383:119;;;1421:79;;:::i;:::-;1383:119;1541:1;1566:53;1611:7;1602:6;1591:9;1587:22;1566:53;:::i;:::-;1556:63;;1512:117;1307:329;;;;:::o;1642:367::-;1720:6;1769:2;1757:9;1748:7;1744:23;1740:32;1737:119;;;1775:79;;:::i;:::-;1737:119;1895:1;1920:72;1984:7;1975:6;1964:9;1960:22;1920:72;:::i;:::-;1910:82;;1866:136;1642:367;;;;:::o;2015:401::-;2110:6;2159:2;2147:9;2138:7;2134:23;2130:32;2127:119;;;2165:79;;:::i;:::-;2127:119;2285:1;2310:89;2391:7;2382:6;2371:9;2367:22;2310:89;:::i;:::-;2300:99;;2256:153;2015:401;;;;:::o;2422:546::-;2526:6;2534;2583:2;2571:9;2562:7;2558:23;2554:32;2551:119;;;2589:79;;:::i;:::-;2551:119;2709:1;2734:89;2815:7;2806:6;2795:9;2791:22;2734:89;:::i;:::-;2724:99;;2680:153;2872:2;2898:53;2943:7;2934:6;2923:9;2919:22;2898:53;:::i;:::-;2888:63;;2843:118;2422:546;;;;;:::o;2974:869::-;3096:6;3104;3112;3161:2;3149:9;3140:7;3136:23;3132:32;3129:119;;;3167:79;;:::i;:::-;3129:119;3287:1;3312:89;3393:7;3384:6;3373:9;3369:22;3312:89;:::i;:::-;3302:99;;3258:153;3450:2;3476:53;3521:7;3512:6;3501:9;3497:22;3476:53;:::i;:::-;3466:63;;3421:118;3606:2;3595:9;3591:18;3578:32;3637:18;3629:6;3626:30;3623:117;;;3659:79;;:::i;:::-;3623:117;3764:62;3818:7;3809:6;3798:9;3794:22;3764:62;:::i;:::-;3754:72;;3549:287;2974:869;;;;;:::o;3849:118::-;3936:24;3954:5;3936:24;:::i;:::-;3931:3;3924:37;3849:118;;:::o;3973:360::-;4059:3;4087:38;4119:5;4087:38;:::i;:::-;4141:70;4204:6;4199:3;4141:70;:::i;:::-;4134:77;;4220:52;4265:6;4260:3;4253:4;4246:5;4242:16;4220:52;:::i;:::-;4297:29;4319:6;4297:29;:::i;:::-;4292:3;4288:39;4281:46;;4063:270;3973:360;;;;:::o;4339:366::-;4481:3;4502:67;4566:2;4561:3;4502:67;:::i;:::-;4495:74;;4578:93;4667:3;4578:93;:::i;:::-;4696:2;4691:3;4687:12;4680:19;;4339:366;;;:::o;4711:398::-;4870:3;4891:83;4972:1;4967:3;4891:83;:::i;:::-;4884:90;;4983:93;5072:3;4983:93;:::i;:::-;5101:1;5096:3;5092:11;5085:18;;4711:398;;;:::o;5115:366::-;5257:3;5278:67;5342:2;5337:3;5278:67;:::i;:::-;5271:74;;5354:93;5443:3;5354:93;:::i;:::-;5472:2;5467:3;5463:12;5456:19;;5115:366;;;:::o;5487:398::-;5646:3;5667:83;5748:1;5743:3;5667:83;:::i;:::-;5660:90;;5759:93;5848:3;5759:93;:::i;:::-;5877:1;5872:3;5868:11;5861:18;;5487:398;;;:::o;5891:379::-;6075:3;6097:147;6240:3;6097:147;:::i;:::-;6090:154;;6261:3;6254:10;;5891:379;;;:::o;6276:::-;6460:3;6482:147;6625:3;6482:147;:::i;:::-;6475:154;;6646:3;6639:10;;6276:379;;;:::o;6661:222::-;6754:4;6792:2;6781:9;6777:18;6769:26;;6805:71;6873:1;6862:9;6858:17;6849:6;6805:71;:::i;:::-;6661:222;;;;:::o;6889:419::-;7028:4;7066:2;7055:9;7051:18;7043:26;;7079:71;7147:1;7136:9;7132:17;7123:6;7079:71;:::i;:::-;7197:9;7191:4;7187:20;7182:2;7171:9;7167:18;7160:48;7225:76;7296:4;7287:6;7225:76;:::i;:::-;7217:84;;6889:419;;;;;:::o;7314:::-;7480:4;7518:2;7507:9;7503:18;7495:26;;7567:9;7561:4;7557:20;7553:1;7542:9;7538:17;7531:47;7595:131;7721:4;7595:131;:::i;:::-;7587:139;;7314:419;;;:::o;7739:::-;7905:4;7943:2;7932:9;7928:18;7920:26;;7992:9;7986:4;7982:20;7978:1;7967:9;7963:17;7956:47;8020:131;8146:4;8020:131;:::i;:::-;8012:139;;7739:419;;;:::o;8164:129::-;8198:6;8225:20;;:::i;:::-;8215:30;;8254:33;8282:4;8274:6;8254:33;:::i;:::-;8164:129;;;:::o;8299:75::-;8332:6;8365:2;8359:9;8349:19;;8299:75;:::o;8380:307::-;8441:4;8531:18;8523:6;8520:30;8517:56;;;8553:18;;:::i;:::-;8517:56;8591:29;8613:6;8591:29;:::i;:::-;8583:37;;8675:4;8669;8665:15;8657:23;;8380:307;;;:::o;8693:98::-;8744:6;8778:5;8772:12;8762:22;;8693:98;;;:::o;8797:168::-;8880:11;8914:6;8909:3;8902:19;8954:4;8949:3;8945:14;8930:29;;8797:168;;;;:::o;8971:147::-;9072:11;9109:3;9094:18;;8971:147;;;;:::o;9124:169::-;9208:11;9242:6;9237:3;9230:19;9282:4;9277:3;9273:14;9258:29;;9124:169;;;;:::o;9299:96::-;9336:7;9365:24;9383:5;9365:24;:::i;:::-;9354:35;;9299:96;;;:::o;9401:104::-;9446:7;9475:24;9493:5;9475:24;:::i;:::-;9464:35;;9401:104;;;:::o;9511:132::-;9584:7;9613:24;9631:5;9613:24;:::i;:::-;9602:35;;9511:132;;;:::o;9649:126::-;9686:7;9726:42;9719:5;9715:54;9704:65;;9649:126;;;:::o;9781:154::-;9865:6;9860:3;9855;9842:30;9927:1;9918:6;9913:3;9909:16;9902:27;9781:154;;;:::o;9941:307::-;10009:1;10019:113;10033:6;10030:1;10027:13;10019:113;;;10118:1;10113:3;10109:11;10103:18;10099:1;10094:3;10090:11;10083:39;10055:2;10052:1;10048:10;10043:15;;10019:113;;;10150:6;10147:1;10144:13;10141:101;;;10230:1;10221:6;10216:3;10212:16;10205:27;10141:101;9990:258;9941:307;;;:::o;10254:281::-;10337:27;10359:4;10337:27;:::i;:::-;10329:6;10325:40;10467:6;10455:10;10452:22;10431:18;10419:10;10416:34;10413:62;10410:88;;;10478:18;;:::i;:::-;10410:88;10518:10;10514:2;10507:22;10297:238;10254:281;;:::o;10541:180::-;10589:77;10586:1;10579:88;10686:4;10683:1;10676:15;10710:4;10707:1;10700:15;10727:117;10836:1;10833;10826:12;10850:117;10959:1;10956;10949:12;10973:117;11082:1;11079;11072:12;11096:117;11205:1;11202;11195:12;11219:102;11260:6;11311:2;11307:7;11302:2;11295:5;11291:14;11287:28;11277:38;;11219:102;;;:::o;11327:225::-;11467:34;11463:1;11455:6;11451:14;11444:58;11536:8;11531:2;11523:6;11519:15;11512:33;11327:225;:::o;11558:214::-;11698:66;11694:1;11686:6;11682:14;11675:90;11558:214;:::o;11778:182::-;11918:34;11914:1;11906:6;11902:14;11895:58;11778:182;:::o;11966:214::-;12106:66;12102:1;12094:6;12090:14;12083:90;11966:214;:::o;12186:122::-;12259:24;12277:5;12259:24;:::i;:::-;12252:5;12249:35;12239:63;;12298:1;12295;12288:12;12239:63;12186:122;:::o;12314:138::-;12395:32;12421:5;12395:32;:::i;:::-;12388:5;12385:43;12375:71;;12442:1;12439;12432:12;12375:71;12314:138;:::o;12458:194::-;12567:60;12621:5;12567:60;:::i;:::-;12560:5;12557:71;12547:99;;12642:1;12639;12632:12;12547:99;12458:194;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"655400","executionCost":"infinite","totalCost":"infinite"},"external":{"changeProxyAdmin(address,address)":"infinite","getProxyAdmin(address)":"infinite","getProxyImplementation(address)":"infinite","owner()":"2589","renounceOwnership()":"30421","transferOwnership(address)":"30791","upgrade(address,address)":"infinite","upgradeAndCall(address,address,bytes)":"infinite"}},"methodIdentifiers":{"changeProxyAdmin(address,address)":"7eff275e","getProxyAdmin(address)":"f3b7dead","getProxyImplementation(address)":"204e1c7a","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgrade(address,address)":"99a88ec4","upgradeAndCall(address,address,bytes)":"9623609d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeProxyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeProxyAdmin(address,address)\":{\"details\":\"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`.\"},\"getProxyAdmin(address)\":{\"details\":\"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"getProxyImplementation(address)\":{\"details\":\"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgrade(address,address)\":{\"details\":\"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Proxy/BoxProxyAdmin.sol\":\"BoxProxyAdmin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.3) (proxy/transparent/ProxyAdmin.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./TransparentUpgradeableProxy.sol\\\";\\nimport \\\"../../access/Ownable.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract ProxyAdmin is Ownable {\\n    /**\\n     * @dev Returns the current implementation of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyImplementation(ITransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"implementation()\\\")) == 0x5c60da1b\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"5c60da1b\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Returns the current admin of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyAdmin(ITransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"admin()\\\")) == 0xf851a440\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"f851a440\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Changes the admin of `proxy` to `newAdmin`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the current admin of `proxy`.\\n     */\\n    function changeProxyAdmin(ITransparentUpgradeableProxy proxy, address newAdmin) public virtual onlyOwner {\\n        proxy.changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgrade(ITransparentUpgradeableProxy proxy, address implementation) public virtual onlyOwner {\\n        proxy.upgradeTo(implementation);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\\n     * {TransparentUpgradeableProxy-upgradeToAndCall}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgradeAndCall(\\n        ITransparentUpgradeableProxy proxy,\\n        address implementation,\\n        bytes memory data\\n    ) public payable virtual onlyOwner {\\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\\n    }\\n}\\n\",\"keccak256\":\"0x8e99882a991853dc446278576c8cb9b3a5ded84642e9bcc917b1677807c2f18c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\\n * include them in the ABI so this interface must be used to interact with it.\\n */\\ninterface ITransparentUpgradeableProxy is IERC1967 {\\n    function admin() external view returns (address);\\n\\n    function implementation() external view returns (address);\\n\\n    function changeAdmin(address) external;\\n\\n    function upgradeTo(address) external;\\n\\n    function upgradeToAndCall(address, bytes memory) external payable;\\n}\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n *\\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\\n * implementation.\\n *\\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     *\\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\\n     * implementation provides a function with the same selector.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\\n     */\\n    function _fallback() internal virtual override {\\n        if (msg.sender == _getAdmin()) {\\n            bytes memory ret;\\n            bytes4 selector = msg.sig;\\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\\n                ret = _dispatchUpgradeTo();\\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\\n                ret = _dispatchUpgradeToAndCall();\\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\\n                ret = _dispatchChangeAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\\n                ret = _dispatchAdmin();\\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\\n                ret = _dispatchImplementation();\\n            } else {\\n                revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n            }\\n            assembly {\\n                return(add(ret, 0x20), mload(ret))\\n            }\\n        } else {\\n            super._fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function _dispatchAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address admin = _getAdmin();\\n        return abi.encode(admin);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function _dispatchImplementation() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address implementation = _implementation();\\n        return abi.encode(implementation);\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _dispatchChangeAdmin() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newAdmin = abi.decode(msg.data[4:], (address));\\n        _changeAdmin(newAdmin);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     */\\n    function _dispatchUpgradeTo() private returns (bytes memory) {\\n        _requireZeroValue();\\n\\n        address newImplementation = abi.decode(msg.data[4:], (address));\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     */\\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\\n        _upgradeToAndCall(newImplementation, data, true);\\n\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\\n     */\\n    function _requireZeroValue() private {\\n        require(msg.value == 0);\\n    }\\n}\\n\",\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"},\"contracts/Proxy/BoxProxyAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\\\";\\ncontract BoxProxyAdmin is ProxyAdmin {\\n    constructor(address /* owner */) ProxyAdmin() {\\n        \\n    }\\n}\",\"keccak256\":\"0x819601f09a97b3d72b8206fcaf542bc657c0b4acfc2a13a4ef8dbedc1c1de783\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/Proxy/BoxProxyAdmin.sol:BoxProxyAdmin","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}